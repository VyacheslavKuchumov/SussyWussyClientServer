//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace NEfotobudka_githubik {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ItogovayaDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ItogovayaDataSet1 : global::System.Data.DataSet {
        
        private АБОНЕМЕНТЫDataTable tableАБОНЕМЕНТЫ;
        
        private ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable tableГРУППОВЫЕ_АБОНЕМЕНТЫ;
        
        private ГРУППЫDataTable tableГРУППЫ;
        
        private ИНВЕНТАРЬDataTable tableИНВЕНТАРЬ;
        
        private ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ;
        
        private КЛИЕНТЫDataTable tableКЛИЕНТЫ;
        
        private ПОСТАВКАDataTable tableПОСТАВКА;
        
        private ПОСТАВЩИКDataTable tableПОСТАВЩИК;
        
        private ПРОГРАММЫDataTable tableПРОГРАММЫ;
        
        private РАСПИСАНИЕDataTable tableРАСПИСАНИЕ;
        
        private РАСПИСАНИЕ_ИНДИВИДDataTable tableРАСПИСАНИЕ_ИНДИВИД;
        
        private СОСТАВ_ГРУППЫDataTable tableСОСТАВ_ГРУППЫ;
        
        private СОТРУДНИКИDataTable tableСОТРУДНИКИ;
        
        private СТУДИЯDataTable tableСТУДИЯ;
        
        private global::System.Data.DataRelation _relationАБОНЕМЕНТЫ_КЛИЕНТЫАБОНЕМЕНТЫ;
        
        private global::System.Data.DataRelation _relationАБОНЕМЕНТЫ_ПРОГРАММЫАБОНЕМЕНТЫ;
        
        private global::System.Data.DataRelation _relationАБОНЕМЕНТЫ_СТУДИЯАБОНЕМЕНТЫ;
        
        private global::System.Data.DataRelation _relationГРУППОВЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫГРУППОВЫЕ_АБОНЕМЕНТЫ;
        
        private global::System.Data.DataRelation _relationГРУППОВЫЕ_АБОНЕМЕНТЫ_ГРУППЫГРУППОВЫЕ_АБОНЕМЕНТЫ;
        
        private global::System.Data.DataRelation _relationГРУППЫ_СОТРУДНИКИГРУППЫ;
        
        private global::System.Data.DataRelation _relationГРУППЫ_СТУДИЯГРУППЫ;
        
        private global::System.Data.DataRelation _relationИНВЕНТАРЬ_ПОСТАВКАИНВЕНТАРЬ;
        
        private global::System.Data.DataRelation _relationИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ;
        
        private global::System.Data.DataRelation _relationИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_СОТРУДНИКИИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ;
        
        private global::System.Data.DataRelation _relationПОСТАВКА_ПОСТАВЩИКПОСТАВКА;
        
        private global::System.Data.DataRelation _relationПОСТАВКА_СТУДИЯПОСТАВКА;
        
        private global::System.Data.DataRelation _relationРАСПИСАНИЕ_ИНДИВИД_КЛИЕНТЫРАСПИСАНИЕ_ИНДИВИД;
        
        private global::System.Data.DataRelation _relationРАСПИСАНИЕ_ИНДИВИД_ПРОГРАММЫРАСПИСАНИЕ_ИНДИВИД;
        
        private global::System.Data.DataRelation _relationРАСПИСАНИЕ_ИНДИВИД_СОТРУДНИКИРАСПИСАНИЕ_ИНДИВИД;
        
        private global::System.Data.DataRelation _relationСОСТАВ_ГРУППЫ_ГРУППЫСОСТАВ_ГРУППЫ;
        
        private global::System.Data.DataRelation _relationСОСТАВ_ГРУППЫ_КЛИЕНТЫСОСТАВ_ГРУППЫ;
        
        private global::System.Data.DataRelation _relationСОТРУДНИКИ_СТУДИЯСОТРУДНИКИ;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ItogovayaDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected ItogovayaDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["АБОНЕМЕНТЫ"] != null)) {
                    base.Tables.Add(new АБОНЕМЕНТЫDataTable(ds.Tables["АБОНЕМЕНТЫ"]));
                }
                if ((ds.Tables["ГРУППОВЫЕ АБОНЕМЕНТЫ"] != null)) {
                    base.Tables.Add(new ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable(ds.Tables["ГРУППОВЫЕ АБОНЕМЕНТЫ"]));
                }
                if ((ds.Tables["ГРУППЫ"] != null)) {
                    base.Tables.Add(new ГРУППЫDataTable(ds.Tables["ГРУППЫ"]));
                }
                if ((ds.Tables["ИНВЕНТАРЬ"] != null)) {
                    base.Tables.Add(new ИНВЕНТАРЬDataTable(ds.Tables["ИНВЕНТАРЬ"]));
                }
                if ((ds.Tables["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"] != null)) {
                    base.Tables.Add(new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable(ds.Tables["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"]));
                }
                if ((ds.Tables["КЛИЕНТЫ"] != null)) {
                    base.Tables.Add(new КЛИЕНТЫDataTable(ds.Tables["КЛИЕНТЫ"]));
                }
                if ((ds.Tables["ПОСТАВКА"] != null)) {
                    base.Tables.Add(new ПОСТАВКАDataTable(ds.Tables["ПОСТАВКА"]));
                }
                if ((ds.Tables["ПОСТАВЩИК"] != null)) {
                    base.Tables.Add(new ПОСТАВЩИКDataTable(ds.Tables["ПОСТАВЩИК"]));
                }
                if ((ds.Tables["ПРОГРАММЫ"] != null)) {
                    base.Tables.Add(new ПРОГРАММЫDataTable(ds.Tables["ПРОГРАММЫ"]));
                }
                if ((ds.Tables["РАСПИСАНИЕ"] != null)) {
                    base.Tables.Add(new РАСПИСАНИЕDataTable(ds.Tables["РАСПИСАНИЕ"]));
                }
                if ((ds.Tables["РАСПИСАНИЕ ИНДИВИД"] != null)) {
                    base.Tables.Add(new РАСПИСАНИЕ_ИНДИВИДDataTable(ds.Tables["РАСПИСАНИЕ ИНДИВИД"]));
                }
                if ((ds.Tables["СОСТАВ ГРУППЫ"] != null)) {
                    base.Tables.Add(new СОСТАВ_ГРУППЫDataTable(ds.Tables["СОСТАВ ГРУППЫ"]));
                }
                if ((ds.Tables["СОТРУДНИКИ"] != null)) {
                    base.Tables.Add(new СОТРУДНИКИDataTable(ds.Tables["СОТРУДНИКИ"]));
                }
                if ((ds.Tables["СТУДИЯ"] != null)) {
                    base.Tables.Add(new СТУДИЯDataTable(ds.Tables["СТУДИЯ"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public АБОНЕМЕНТЫDataTable АБОНЕМЕНТЫ {
            get {
                return this.tableАБОНЕМЕНТЫ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable ГРУППОВЫЕ_АБОНЕМЕНТЫ {
            get {
                return this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ГРУППЫDataTable ГРУППЫ {
            get {
                return this.tableГРУППЫ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ИНВЕНТАРЬDataTable ИНВЕНТАРЬ {
            get {
                return this.tableИНВЕНТАРЬ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ {
            get {
                return this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public КЛИЕНТЫDataTable КЛИЕНТЫ {
            get {
                return this.tableКЛИЕНТЫ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПОСТАВКАDataTable ПОСТАВКА {
            get {
                return this.tableПОСТАВКА;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПОСТАВЩИКDataTable ПОСТАВЩИК {
            get {
                return this.tableПОСТАВЩИК;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПРОГРАММЫDataTable ПРОГРАММЫ {
            get {
                return this.tableПРОГРАММЫ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public РАСПИСАНИЕDataTable РАСПИСАНИЕ {
            get {
                return this.tableРАСПИСАНИЕ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public РАСПИСАНИЕ_ИНДИВИДDataTable РАСПИСАНИЕ_ИНДИВИД {
            get {
                return this.tableРАСПИСАНИЕ_ИНДИВИД;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СОСТАВ_ГРУППЫDataTable СОСТАВ_ГРУППЫ {
            get {
                return this.tableСОСТАВ_ГРУППЫ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СОТРУДНИКИDataTable СОТРУДНИКИ {
            get {
                return this.tableСОТРУДНИКИ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СТУДИЯDataTable СТУДИЯ {
            get {
                return this.tableСТУДИЯ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ItogovayaDataSet1 cln = ((ItogovayaDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["АБОНЕМЕНТЫ"] != null)) {
                    base.Tables.Add(new АБОНЕМЕНТЫDataTable(ds.Tables["АБОНЕМЕНТЫ"]));
                }
                if ((ds.Tables["ГРУППОВЫЕ АБОНЕМЕНТЫ"] != null)) {
                    base.Tables.Add(new ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable(ds.Tables["ГРУППОВЫЕ АБОНЕМЕНТЫ"]));
                }
                if ((ds.Tables["ГРУППЫ"] != null)) {
                    base.Tables.Add(new ГРУППЫDataTable(ds.Tables["ГРУППЫ"]));
                }
                if ((ds.Tables["ИНВЕНТАРЬ"] != null)) {
                    base.Tables.Add(new ИНВЕНТАРЬDataTable(ds.Tables["ИНВЕНТАРЬ"]));
                }
                if ((ds.Tables["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"] != null)) {
                    base.Tables.Add(new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable(ds.Tables["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"]));
                }
                if ((ds.Tables["КЛИЕНТЫ"] != null)) {
                    base.Tables.Add(new КЛИЕНТЫDataTable(ds.Tables["КЛИЕНТЫ"]));
                }
                if ((ds.Tables["ПОСТАВКА"] != null)) {
                    base.Tables.Add(new ПОСТАВКАDataTable(ds.Tables["ПОСТАВКА"]));
                }
                if ((ds.Tables["ПОСТАВЩИК"] != null)) {
                    base.Tables.Add(new ПОСТАВЩИКDataTable(ds.Tables["ПОСТАВЩИК"]));
                }
                if ((ds.Tables["ПРОГРАММЫ"] != null)) {
                    base.Tables.Add(new ПРОГРАММЫDataTable(ds.Tables["ПРОГРАММЫ"]));
                }
                if ((ds.Tables["РАСПИСАНИЕ"] != null)) {
                    base.Tables.Add(new РАСПИСАНИЕDataTable(ds.Tables["РАСПИСАНИЕ"]));
                }
                if ((ds.Tables["РАСПИСАНИЕ ИНДИВИД"] != null)) {
                    base.Tables.Add(new РАСПИСАНИЕ_ИНДИВИДDataTable(ds.Tables["РАСПИСАНИЕ ИНДИВИД"]));
                }
                if ((ds.Tables["СОСТАВ ГРУППЫ"] != null)) {
                    base.Tables.Add(new СОСТАВ_ГРУППЫDataTable(ds.Tables["СОСТАВ ГРУППЫ"]));
                }
                if ((ds.Tables["СОТРУДНИКИ"] != null)) {
                    base.Tables.Add(new СОТРУДНИКИDataTable(ds.Tables["СОТРУДНИКИ"]));
                }
                if ((ds.Tables["СТУДИЯ"] != null)) {
                    base.Tables.Add(new СТУДИЯDataTable(ds.Tables["СТУДИЯ"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableАБОНЕМЕНТЫ = ((АБОНЕМЕНТЫDataTable)(base.Tables["АБОНЕМЕНТЫ"]));
            if ((initTable == true)) {
                if ((this.tableАБОНЕМЕНТЫ != null)) {
                    this.tableАБОНЕМЕНТЫ.InitVars();
                }
            }
            this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ = ((ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable)(base.Tables["ГРУППОВЫЕ АБОНЕМЕНТЫ"]));
            if ((initTable == true)) {
                if ((this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ != null)) {
                    this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ.InitVars();
                }
            }
            this.tableГРУППЫ = ((ГРУППЫDataTable)(base.Tables["ГРУППЫ"]));
            if ((initTable == true)) {
                if ((this.tableГРУППЫ != null)) {
                    this.tableГРУППЫ.InitVars();
                }
            }
            this.tableИНВЕНТАРЬ = ((ИНВЕНТАРЬDataTable)(base.Tables["ИНВЕНТАРЬ"]));
            if ((initTable == true)) {
                if ((this.tableИНВЕНТАРЬ != null)) {
                    this.tableИНВЕНТАРЬ.InitVars();
                }
            }
            this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ = ((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable)(base.Tables["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"]));
            if ((initTable == true)) {
                if ((this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ != null)) {
                    this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.InitVars();
                }
            }
            this.tableКЛИЕНТЫ = ((КЛИЕНТЫDataTable)(base.Tables["КЛИЕНТЫ"]));
            if ((initTable == true)) {
                if ((this.tableКЛИЕНТЫ != null)) {
                    this.tableКЛИЕНТЫ.InitVars();
                }
            }
            this.tableПОСТАВКА = ((ПОСТАВКАDataTable)(base.Tables["ПОСТАВКА"]));
            if ((initTable == true)) {
                if ((this.tableПОСТАВКА != null)) {
                    this.tableПОСТАВКА.InitVars();
                }
            }
            this.tableПОСТАВЩИК = ((ПОСТАВЩИКDataTable)(base.Tables["ПОСТАВЩИК"]));
            if ((initTable == true)) {
                if ((this.tableПОСТАВЩИК != null)) {
                    this.tableПОСТАВЩИК.InitVars();
                }
            }
            this.tableПРОГРАММЫ = ((ПРОГРАММЫDataTable)(base.Tables["ПРОГРАММЫ"]));
            if ((initTable == true)) {
                if ((this.tableПРОГРАММЫ != null)) {
                    this.tableПРОГРАММЫ.InitVars();
                }
            }
            this.tableРАСПИСАНИЕ = ((РАСПИСАНИЕDataTable)(base.Tables["РАСПИСАНИЕ"]));
            if ((initTable == true)) {
                if ((this.tableРАСПИСАНИЕ != null)) {
                    this.tableРАСПИСАНИЕ.InitVars();
                }
            }
            this.tableРАСПИСАНИЕ_ИНДИВИД = ((РАСПИСАНИЕ_ИНДИВИДDataTable)(base.Tables["РАСПИСАНИЕ ИНДИВИД"]));
            if ((initTable == true)) {
                if ((this.tableРАСПИСАНИЕ_ИНДИВИД != null)) {
                    this.tableРАСПИСАНИЕ_ИНДИВИД.InitVars();
                }
            }
            this.tableСОСТАВ_ГРУППЫ = ((СОСТАВ_ГРУППЫDataTable)(base.Tables["СОСТАВ ГРУППЫ"]));
            if ((initTable == true)) {
                if ((this.tableСОСТАВ_ГРУППЫ != null)) {
                    this.tableСОСТАВ_ГРУППЫ.InitVars();
                }
            }
            this.tableСОТРУДНИКИ = ((СОТРУДНИКИDataTable)(base.Tables["СОТРУДНИКИ"]));
            if ((initTable == true)) {
                if ((this.tableСОТРУДНИКИ != null)) {
                    this.tableСОТРУДНИКИ.InitVars();
                }
            }
            this.tableСТУДИЯ = ((СТУДИЯDataTable)(base.Tables["СТУДИЯ"]));
            if ((initTable == true)) {
                if ((this.tableСТУДИЯ != null)) {
                    this.tableСТУДИЯ.InitVars();
                }
            }
            this._relationАБОНЕМЕНТЫ_КЛИЕНТЫАБОНЕМЕНТЫ = this.Relations["АБОНЕМЕНТЫ$КЛИЕНТЫАБОНЕМЕНТЫ"];
            this._relationАБОНЕМЕНТЫ_ПРОГРАММЫАБОНЕМЕНТЫ = this.Relations["АБОНЕМЕНТЫ$ПРОГРАММЫАБОНЕМЕНТЫ"];
            this._relationАБОНЕМЕНТЫ_СТУДИЯАБОНЕМЕНТЫ = this.Relations["АБОНЕМЕНТЫ$СТУДИЯАБОНЕМЕНТЫ"];
            this._relationГРУППОВЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫГРУППОВЫЕ_АБОНЕМЕНТЫ = this.Relations["ГРУППОВЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫГРУППОВЫЕ АБОНЕМЕНТЫ"];
            this._relationГРУППОВЫЕ_АБОНЕМЕНТЫ_ГРУППЫГРУППОВЫЕ_АБОНЕМЕНТЫ = this.Relations["ГРУППОВЫЕ АБОНЕМЕНТЫ$ГРУППЫГРУППОВЫЕ АБОНЕМЕНТЫ"];
            this._relationГРУППЫ_СОТРУДНИКИГРУППЫ = this.Relations["ГРУППЫ$СОТРУДНИКИГРУППЫ"];
            this._relationГРУППЫ_СТУДИЯГРУППЫ = this.Relations["ГРУППЫ$СТУДИЯГРУППЫ"];
            this._relationИНВЕНТАРЬ_ПОСТАВКАИНВЕНТАРЬ = this.Relations["ИНВЕНТАРЬ$ПОСТАВКАИНВЕНТАРЬ"];
            this._relationИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ = this.Relations["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"];
            this._relationИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_СОТРУДНИКИИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ = this.Relations["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$СОТРУДНИКИИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"];
            this._relationПОСТАВКА_ПОСТАВЩИКПОСТАВКА = this.Relations["ПОСТАВКА$ПОСТАВЩИКПОСТАВКА"];
            this._relationПОСТАВКА_СТУДИЯПОСТАВКА = this.Relations["ПОСТАВКА$СТУДИЯПОСТАВКА"];
            this._relationРАСПИСАНИЕ_ИНДИВИД_КЛИЕНТЫРАСПИСАНИЕ_ИНДИВИД = this.Relations["РАСПИСАНИЕ ИНДИВИД$КЛИЕНТЫРАСПИСАНИЕ ИНДИВИД"];
            this._relationРАСПИСАНИЕ_ИНДИВИД_ПРОГРАММЫРАСПИСАНИЕ_ИНДИВИД = this.Relations["РАСПИСАНИЕ ИНДИВИД$ПРОГРАММЫРАСПИСАНИЕ ИНДИВИД"];
            this._relationРАСПИСАНИЕ_ИНДИВИД_СОТРУДНИКИРАСПИСАНИЕ_ИНДИВИД = this.Relations["РАСПИСАНИЕ ИНДИВИД$СОТРУДНИКИРАСПИСАНИЕ ИНДИВИД"];
            this._relationСОСТАВ_ГРУППЫ_ГРУППЫСОСТАВ_ГРУППЫ = this.Relations["СОСТАВ ГРУППЫ$ГРУППЫСОСТАВ ГРУППЫ"];
            this._relationСОСТАВ_ГРУППЫ_КЛИЕНТЫСОСТАВ_ГРУППЫ = this.Relations["СОСТАВ ГРУППЫ$КЛИЕНТЫСОСТАВ ГРУППЫ"];
            this._relationСОТРУДНИКИ_СТУДИЯСОТРУДНИКИ = this.Relations["СОТРУДНИКИ$СТУДИЯСОТРУДНИКИ"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ItogovayaDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ItogovayaDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableАБОНЕМЕНТЫ = new АБОНЕМЕНТЫDataTable();
            base.Tables.Add(this.tableАБОНЕМЕНТЫ);
            this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ = new ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable();
            base.Tables.Add(this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ);
            this.tableГРУППЫ = new ГРУППЫDataTable();
            base.Tables.Add(this.tableГРУППЫ);
            this.tableИНВЕНТАРЬ = new ИНВЕНТАРЬDataTable();
            base.Tables.Add(this.tableИНВЕНТАРЬ);
            this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ = new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable();
            base.Tables.Add(this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ);
            this.tableКЛИЕНТЫ = new КЛИЕНТЫDataTable();
            base.Tables.Add(this.tableКЛИЕНТЫ);
            this.tableПОСТАВКА = new ПОСТАВКАDataTable();
            base.Tables.Add(this.tableПОСТАВКА);
            this.tableПОСТАВЩИК = new ПОСТАВЩИКDataTable();
            base.Tables.Add(this.tableПОСТАВЩИК);
            this.tableПРОГРАММЫ = new ПРОГРАММЫDataTable();
            base.Tables.Add(this.tableПРОГРАММЫ);
            this.tableРАСПИСАНИЕ = new РАСПИСАНИЕDataTable();
            base.Tables.Add(this.tableРАСПИСАНИЕ);
            this.tableРАСПИСАНИЕ_ИНДИВИД = new РАСПИСАНИЕ_ИНДИВИДDataTable();
            base.Tables.Add(this.tableРАСПИСАНИЕ_ИНДИВИД);
            this.tableСОСТАВ_ГРУППЫ = new СОСТАВ_ГРУППЫDataTable();
            base.Tables.Add(this.tableСОСТАВ_ГРУППЫ);
            this.tableСОТРУДНИКИ = new СОТРУДНИКИDataTable();
            base.Tables.Add(this.tableСОТРУДНИКИ);
            this.tableСТУДИЯ = new СТУДИЯDataTable();
            base.Tables.Add(this.tableСТУДИЯ);
            this._relationАБОНЕМЕНТЫ_КЛИЕНТЫАБОНЕМЕНТЫ = new global::System.Data.DataRelation("АБОНЕМЕНТЫ$КЛИЕНТЫАБОНЕМЕНТЫ", new global::System.Data.DataColumn[] {
                        this.tableКЛИЕНТЫ.Код_клиентаColumn}, new global::System.Data.DataColumn[] {
                        this.tableАБОНЕМЕНТЫ.Код_клиентаColumn}, false);
            this.Relations.Add(this._relationАБОНЕМЕНТЫ_КЛИЕНТЫАБОНЕМЕНТЫ);
            this._relationАБОНЕМЕНТЫ_ПРОГРАММЫАБОНЕМЕНТЫ = new global::System.Data.DataRelation("АБОНЕМЕНТЫ$ПРОГРАММЫАБОНЕМЕНТЫ", new global::System.Data.DataColumn[] {
                        this.tableПРОГРАММЫ.Код_программыColumn}, new global::System.Data.DataColumn[] {
                        this.tableАБОНЕМЕНТЫ.Код_программыColumn}, false);
            this.Relations.Add(this._relationАБОНЕМЕНТЫ_ПРОГРАММЫАБОНЕМЕНТЫ);
            this._relationАБОНЕМЕНТЫ_СТУДИЯАБОНЕМЕНТЫ = new global::System.Data.DataRelation("АБОНЕМЕНТЫ$СТУДИЯАБОНЕМЕНТЫ", new global::System.Data.DataColumn[] {
                        this.tableСТУДИЯ.Код_студииColumn}, new global::System.Data.DataColumn[] {
                        this.tableАБОНЕМЕНТЫ.Код_студииColumn}, false);
            this.Relations.Add(this._relationАБОНЕМЕНТЫ_СТУДИЯАБОНЕМЕНТЫ);
            this._relationГРУППОВЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫГРУППОВЫЕ_АБОНЕМЕНТЫ = new global::System.Data.DataRelation("ГРУППОВЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫГРУППОВЫЕ АБОНЕМЕНТЫ", new global::System.Data.DataColumn[] {
                        this.tableАБОНЕМЕНТЫ.Код_абонементаColumn}, new global::System.Data.DataColumn[] {
                        this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ.Код_абонементаColumn}, false);
            this.Relations.Add(this._relationГРУППОВЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫГРУППОВЫЕ_АБОНЕМЕНТЫ);
            this._relationГРУППОВЫЕ_АБОНЕМЕНТЫ_ГРУППЫГРУППОВЫЕ_АБОНЕМЕНТЫ = new global::System.Data.DataRelation("ГРУППОВЫЕ АБОНЕМЕНТЫ$ГРУППЫГРУППОВЫЕ АБОНЕМЕНТЫ", new global::System.Data.DataColumn[] {
                        this.tableГРУППЫ.Код_группыColumn}, new global::System.Data.DataColumn[] {
                        this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ.Код_группыColumn}, false);
            this.Relations.Add(this._relationГРУППОВЫЕ_АБОНЕМЕНТЫ_ГРУППЫГРУППОВЫЕ_АБОНЕМЕНТЫ);
            this._relationГРУППЫ_СОТРУДНИКИГРУППЫ = new global::System.Data.DataRelation("ГРУППЫ$СОТРУДНИКИГРУППЫ", new global::System.Data.DataColumn[] {
                        this.tableСОТРУДНИКИ.Код_сотрудникаColumn}, new global::System.Data.DataColumn[] {
                        this.tableГРУППЫ.Код_тренераColumn}, false);
            this.Relations.Add(this._relationГРУППЫ_СОТРУДНИКИГРУППЫ);
            this._relationГРУППЫ_СТУДИЯГРУППЫ = new global::System.Data.DataRelation("ГРУППЫ$СТУДИЯГРУППЫ", new global::System.Data.DataColumn[] {
                        this.tableСТУДИЯ.Код_студииColumn}, new global::System.Data.DataColumn[] {
                        this.tableГРУППЫ.Код_студииColumn}, false);
            this.Relations.Add(this._relationГРУППЫ_СТУДИЯГРУППЫ);
            this._relationИНВЕНТАРЬ_ПОСТАВКАИНВЕНТАРЬ = new global::System.Data.DataRelation("ИНВЕНТАРЬ$ПОСТАВКАИНВЕНТАРЬ", new global::System.Data.DataColumn[] {
                        this.tableПОСТАВКА.Код_поставкиColumn}, new global::System.Data.DataColumn[] {
                        this.tableИНВЕНТАРЬ.Код_поставкиColumn}, false);
            this.Relations.Add(this._relationИНВЕНТАРЬ_ПОСТАВКАИНВЕНТАРЬ);
            this._relationИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ = new global::System.Data.DataRelation("ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ", new global::System.Data.DataColumn[] {
                        this.tableАБОНЕМЕНТЫ.Код_абонементаColumn}, new global::System.Data.DataColumn[] {
                        this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Код_абонементаColumn}, false);
            this.Relations.Add(this._relationИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ);
            this._relationИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_СОТРУДНИКИИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ = new global::System.Data.DataRelation("ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$СОТРУДНИКИИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ", new global::System.Data.DataColumn[] {
                        this.tableСОТРУДНИКИ.Код_сотрудникаColumn}, new global::System.Data.DataColumn[] {
                        this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Код_тренераColumn}, false);
            this.Relations.Add(this._relationИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_СОТРУДНИКИИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ);
            this._relationПОСТАВКА_ПОСТАВЩИКПОСТАВКА = new global::System.Data.DataRelation("ПОСТАВКА$ПОСТАВЩИКПОСТАВКА", new global::System.Data.DataColumn[] {
                        this.tableПОСТАВЩИК.Код_поставщикаColumn}, new global::System.Data.DataColumn[] {
                        this.tableПОСТАВКА.Код_поставщикаColumn}, false);
            this.Relations.Add(this._relationПОСТАВКА_ПОСТАВЩИКПОСТАВКА);
            this._relationПОСТАВКА_СТУДИЯПОСТАВКА = new global::System.Data.DataRelation("ПОСТАВКА$СТУДИЯПОСТАВКА", new global::System.Data.DataColumn[] {
                        this.tableСТУДИЯ.Код_студииColumn}, new global::System.Data.DataColumn[] {
                        this.tableПОСТАВКА.Код_студииColumn}, false);
            this.Relations.Add(this._relationПОСТАВКА_СТУДИЯПОСТАВКА);
            this._relationРАСПИСАНИЕ_ИНДИВИД_КЛИЕНТЫРАСПИСАНИЕ_ИНДИВИД = new global::System.Data.DataRelation("РАСПИСАНИЕ ИНДИВИД$КЛИЕНТЫРАСПИСАНИЕ ИНДИВИД", new global::System.Data.DataColumn[] {
                        this.tableКЛИЕНТЫ.Код_клиентаColumn}, new global::System.Data.DataColumn[] {
                        this.tableРАСПИСАНИЕ_ИНДИВИД.Код_клиентаColumn}, false);
            this.Relations.Add(this._relationРАСПИСАНИЕ_ИНДИВИД_КЛИЕНТЫРАСПИСАНИЕ_ИНДИВИД);
            this._relationРАСПИСАНИЕ_ИНДИВИД_ПРОГРАММЫРАСПИСАНИЕ_ИНДИВИД = new global::System.Data.DataRelation("РАСПИСАНИЕ ИНДИВИД$ПРОГРАММЫРАСПИСАНИЕ ИНДИВИД", new global::System.Data.DataColumn[] {
                        this.tableПРОГРАММЫ.Код_программыColumn}, new global::System.Data.DataColumn[] {
                        this.tableРАСПИСАНИЕ_ИНДИВИД.ПрограммыColumn}, false);
            this.Relations.Add(this._relationРАСПИСАНИЕ_ИНДИВИД_ПРОГРАММЫРАСПИСАНИЕ_ИНДИВИД);
            this._relationРАСПИСАНИЕ_ИНДИВИД_СОТРУДНИКИРАСПИСАНИЕ_ИНДИВИД = new global::System.Data.DataRelation("РАСПИСАНИЕ ИНДИВИД$СОТРУДНИКИРАСПИСАНИЕ ИНДИВИД", new global::System.Data.DataColumn[] {
                        this.tableСОТРУДНИКИ.Код_сотрудникаColumn}, new global::System.Data.DataColumn[] {
                        this.tableРАСПИСАНИЕ_ИНДИВИД.Код_тренераColumn}, false);
            this.Relations.Add(this._relationРАСПИСАНИЕ_ИНДИВИД_СОТРУДНИКИРАСПИСАНИЕ_ИНДИВИД);
            this._relationСОСТАВ_ГРУППЫ_ГРУППЫСОСТАВ_ГРУППЫ = new global::System.Data.DataRelation("СОСТАВ ГРУППЫ$ГРУППЫСОСТАВ ГРУППЫ", new global::System.Data.DataColumn[] {
                        this.tableГРУППЫ.Код_группыColumn}, new global::System.Data.DataColumn[] {
                        this.tableСОСТАВ_ГРУППЫ.Код_группыColumn}, false);
            this.Relations.Add(this._relationСОСТАВ_ГРУППЫ_ГРУППЫСОСТАВ_ГРУППЫ);
            this._relationСОСТАВ_ГРУППЫ_КЛИЕНТЫСОСТАВ_ГРУППЫ = new global::System.Data.DataRelation("СОСТАВ ГРУППЫ$КЛИЕНТЫСОСТАВ ГРУППЫ", new global::System.Data.DataColumn[] {
                        this.tableКЛИЕНТЫ.Код_клиентаColumn}, new global::System.Data.DataColumn[] {
                        this.tableСОСТАВ_ГРУППЫ.Код_клиентаColumn}, false);
            this.Relations.Add(this._relationСОСТАВ_ГРУППЫ_КЛИЕНТЫСОСТАВ_ГРУППЫ);
            this._relationСОТРУДНИКИ_СТУДИЯСОТРУДНИКИ = new global::System.Data.DataRelation("СОТРУДНИКИ$СТУДИЯСОТРУДНИКИ", new global::System.Data.DataColumn[] {
                        this.tableСТУДИЯ.Код_студииColumn}, new global::System.Data.DataColumn[] {
                        this.tableСОТРУДНИКИ.Код_студииColumn}, false);
            this.Relations.Add(this._relationСОТРУДНИКИ_СТУДИЯСОТРУДНИКИ);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeАБОНЕМЕНТЫ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeГРУППОВЫЕ_АБОНЕМЕНТЫ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeГРУППЫ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeИНВЕНТАРЬ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeКЛИЕНТЫ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeПОСТАВКА() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeПОСТАВЩИК() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeПРОГРАММЫ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeРАСПИСАНИЕ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeРАСПИСАНИЕ_ИНДИВИД() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeСОСТАВ_ГРУППЫ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeСОТРУДНИКИ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeСТУДИЯ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ItogovayaDataSet1 ds = new ItogovayaDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void АБОНЕМЕНТЫRowChangeEventHandler(object sender, АБОНЕМЕНТЫRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEventHandler(object sender, ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ГРУППЫRowChangeEventHandler(object sender, ГРУППЫRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ИНВЕНТАРЬRowChangeEventHandler(object sender, ИНВЕНТАРЬRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEventHandler(object sender, ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void КЛИЕНТЫRowChangeEventHandler(object sender, КЛИЕНТЫRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ПОСТАВКАRowChangeEventHandler(object sender, ПОСТАВКАRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ПОСТАВЩИКRowChangeEventHandler(object sender, ПОСТАВЩИКRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ПРОГРАММЫRowChangeEventHandler(object sender, ПРОГРАММЫRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void РАСПИСАНИЕRowChangeEventHandler(object sender, РАСПИСАНИЕRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void РАСПИСАНИЕ_ИНДИВИДRowChangeEventHandler(object sender, РАСПИСАНИЕ_ИНДИВИДRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void СОСТАВ_ГРУППЫRowChangeEventHandler(object sender, СОСТАВ_ГРУППЫRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void СОТРУДНИКИRowChangeEventHandler(object sender, СОТРУДНИКИRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void СТУДИЯRowChangeEventHandler(object sender, СТУДИЯRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class АБОНЕМЕНТЫDataTable : global::System.Data.TypedTableBase<АБОНЕМЕНТЫRow> {
            
            private global::System.Data.DataColumn columnКод_абонемента;
            
            private global::System.Data.DataColumn columnКод_клиента;
            
            private global::System.Data.DataColumn columnКод_программы;
            
            private global::System.Data.DataColumn columnКоличество_занятий_в_абонементе;
            
            private global::System.Data.DataColumn columnДата_начала_абонемента;
            
            private global::System.Data.DataColumn columnДата_окончания_абонемента;
            
            private global::System.Data.DataColumn columnДата_покупки_абонемента;
            
            private global::System.Data.DataColumn columnДата_оплаты_абонемента;
            
            private global::System.Data.DataColumn columnЦена_за_занятие;
            
            private global::System.Data.DataColumn columnКод_студии;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫDataTable() {
                this.TableName = "АБОНЕМЕНТЫ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal АБОНЕМЕНТЫDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected АБОНЕМЕНТЫDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_абонементаColumn {
                get {
                    return this.columnКод_абонемента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_клиентаColumn {
                get {
                    return this.columnКод_клиента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_программыColumn {
                get {
                    return this.columnКод_программы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Количество_занятий_в_абонементеColumn {
                get {
                    return this.columnКоличество_занятий_в_абонементе;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_начала_абонементаColumn {
                get {
                    return this.columnДата_начала_абонемента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_окончания_абонементаColumn {
                get {
                    return this.columnДата_окончания_абонемента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_покупки_абонементаColumn {
                get {
                    return this.columnДата_покупки_абонемента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_оплаты_абонементаColumn {
                get {
                    return this.columnДата_оплаты_абонемента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Цена_за_занятиеColumn {
                get {
                    return this.columnЦена_за_занятие;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_студииColumn {
                get {
                    return this.columnКод_студии;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRow this[int index] {
                get {
                    return ((АБОНЕМЕНТЫRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event АБОНЕМЕНТЫRowChangeEventHandler АБОНЕМЕНТЫRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event АБОНЕМЕНТЫRowChangeEventHandler АБОНЕМЕНТЫRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event АБОНЕМЕНТЫRowChangeEventHandler АБОНЕМЕНТЫRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event АБОНЕМЕНТЫRowChangeEventHandler АБОНЕМЕНТЫRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddАБОНЕМЕНТЫRow(АБОНЕМЕНТЫRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRow AddАБОНЕМЕНТЫRow(КЛИЕНТЫRow _parentКЛИЕНТЫRowByАБОНЕМЕНТЫ_КЛИЕНТЫАБОНЕМЕНТЫ, ПРОГРАММЫRow _parentПРОГРАММЫRowByАБОНЕМЕНТЫ_ПРОГРАММЫАБОНЕМЕНТЫ, int Количество_занятий_в_абонементе, System.DateTime Дата_начала_абонемента, System.DateTime Дата_окончания_абонемента, System.DateTime Дата_покупки_абонемента, System.DateTime Дата_оплаты_абонемента, decimal Цена_за_занятие, СТУДИЯRow _parentСТУДИЯRowByАБОНЕМЕНТЫ_СТУДИЯАБОНЕМЕНТЫ) {
                АБОНЕМЕНТЫRow rowАБОНЕМЕНТЫRow = ((АБОНЕМЕНТЫRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        Количество_занятий_в_абонементе,
                        Дата_начала_абонемента,
                        Дата_окончания_абонемента,
                        Дата_покупки_абонемента,
                        Дата_оплаты_абонемента,
                        Цена_за_занятие,
                        null};
                if ((_parentКЛИЕНТЫRowByАБОНЕМЕНТЫ_КЛИЕНТЫАБОНЕМЕНТЫ != null)) {
                    columnValuesArray[1] = _parentКЛИЕНТЫRowByАБОНЕМЕНТЫ_КЛИЕНТЫАБОНЕМЕНТЫ[0];
                }
                if ((_parentПРОГРАММЫRowByАБОНЕМЕНТЫ_ПРОГРАММЫАБОНЕМЕНТЫ != null)) {
                    columnValuesArray[2] = _parentПРОГРАММЫRowByАБОНЕМЕНТЫ_ПРОГРАММЫАБОНЕМЕНТЫ[0];
                }
                if ((_parentСТУДИЯRowByАБОНЕМЕНТЫ_СТУДИЯАБОНЕМЕНТЫ != null)) {
                    columnValuesArray[9] = _parentСТУДИЯRowByАБОНЕМЕНТЫ_СТУДИЯАБОНЕМЕНТЫ[0];
                }
                rowАБОНЕМЕНТЫRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowАБОНЕМЕНТЫRow);
                return rowАБОНЕМЕНТЫRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRow FindByКод_абонемента(int Код_абонемента) {
                return ((АБОНЕМЕНТЫRow)(this.Rows.Find(new object[] {
                            Код_абонемента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                АБОНЕМЕНТЫDataTable cln = ((АБОНЕМЕНТЫDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new АБОНЕМЕНТЫDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_абонемента = base.Columns["Код_абонемента"];
                this.columnКод_клиента = base.Columns["Код_клиента"];
                this.columnКод_программы = base.Columns["Код_программы"];
                this.columnКоличество_занятий_в_абонементе = base.Columns["Количество_занятий_в_абонементе"];
                this.columnДата_начала_абонемента = base.Columns["Дата_начала_абонемента"];
                this.columnДата_окончания_абонемента = base.Columns["Дата_окончания_абонемента"];
                this.columnДата_покупки_абонемента = base.Columns["Дата_покупки_абонемента"];
                this.columnДата_оплаты_абонемента = base.Columns["Дата_оплаты_абонемента"];
                this.columnЦена_за_занятие = base.Columns["Цена_за_занятие"];
                this.columnКод_студии = base.Columns["Код_студии"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_абонемента = new global::System.Data.DataColumn("Код_абонемента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_абонемента);
                this.columnКод_клиента = new global::System.Data.DataColumn("Код_клиента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_клиента);
                this.columnКод_программы = new global::System.Data.DataColumn("Код_программы", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_программы);
                this.columnКоличество_занятий_в_абонементе = new global::System.Data.DataColumn("Количество_занятий_в_абонементе", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество_занятий_в_абонементе);
                this.columnДата_начала_абонемента = new global::System.Data.DataColumn("Дата_начала_абонемента", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_начала_абонемента);
                this.columnДата_окончания_абонемента = new global::System.Data.DataColumn("Дата_окончания_абонемента", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_окончания_абонемента);
                this.columnДата_покупки_абонемента = new global::System.Data.DataColumn("Дата_покупки_абонемента", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_покупки_абонемента);
                this.columnДата_оплаты_абонемента = new global::System.Data.DataColumn("Дата_оплаты_абонемента", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_оплаты_абонемента);
                this.columnЦена_за_занятие = new global::System.Data.DataColumn("Цена_за_занятие", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена_за_занятие);
                this.columnКод_студии = new global::System.Data.DataColumn("Код_студии", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_студии);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_абонемента}, true));
                this.columnКод_абонемента.AutoIncrement = true;
                this.columnКод_абонемента.AutoIncrementSeed = -1;
                this.columnКод_абонемента.AutoIncrementStep = -1;
                this.columnКод_абонемента.AllowDBNull = false;
                this.columnКод_абонемента.ReadOnly = true;
                this.columnКод_абонемента.Unique = true;
                this.columnКод_клиента.AllowDBNull = false;
                this.columnКод_программы.AllowDBNull = false;
                this.columnКоличество_занятий_в_абонементе.AllowDBNull = false;
                this.columnДата_начала_абонемента.AllowDBNull = false;
                this.columnДата_окончания_абонемента.AllowDBNull = false;
                this.columnДата_покупки_абонемента.AllowDBNull = false;
                this.columnДата_оплаты_абонемента.AllowDBNull = false;
                this.columnЦена_за_занятие.AllowDBNull = false;
                this.columnКод_студии.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRow NewАБОНЕМЕНТЫRow() {
                return ((АБОНЕМЕНТЫRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new АБОНЕМЕНТЫRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(АБОНЕМЕНТЫRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.АБОНЕМЕНТЫRowChanged != null)) {
                    this.АБОНЕМЕНТЫRowChanged(this, new АБОНЕМЕНТЫRowChangeEvent(((АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.АБОНЕМЕНТЫRowChanging != null)) {
                    this.АБОНЕМЕНТЫRowChanging(this, new АБОНЕМЕНТЫRowChangeEvent(((АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.АБОНЕМЕНТЫRowDeleted != null)) {
                    this.АБОНЕМЕНТЫRowDeleted(this, new АБОНЕМЕНТЫRowChangeEvent(((АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.АБОНЕМЕНТЫRowDeleting != null)) {
                    this.АБОНЕМЕНТЫRowDeleting(this, new АБОНЕМЕНТЫRowChangeEvent(((АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveАБОНЕМЕНТЫRow(АБОНЕМЕНТЫRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "АБОНЕМЕНТЫDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable : global::System.Data.TypedTableBase<ГРУППОВЫЕ_АБОНЕМЕНТЫRow> {
            
            private global::System.Data.DataColumn columnКод_абонемента;
            
            private global::System.Data.DataColumn columnКод_группы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable() {
                this.TableName = "ГРУППОВЫЕ АБОНЕМЕНТЫ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_абонементаColumn {
                get {
                    return this.columnКод_абонемента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_группыColumn {
                get {
                    return this.columnКод_группы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППОВЫЕ_АБОНЕМЕНТЫRow this[int index] {
                get {
                    return ((ГРУППОВЫЕ_АБОНЕМЕНТЫRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEventHandler ГРУППОВЫЕ_АБОНЕМЕНТЫRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEventHandler ГРУППОВЫЕ_АБОНЕМЕНТЫRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEventHandler ГРУППОВЫЕ_АБОНЕМЕНТЫRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEventHandler ГРУППОВЫЕ_АБОНЕМЕНТЫRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddГРУППОВЫЕ_АБОНЕМЕНТЫRow(ГРУППОВЫЕ_АБОНЕМЕНТЫRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППОВЫЕ_АБОНЕМЕНТЫRow AddГРУППОВЫЕ_АБОНЕМЕНТЫRow(АБОНЕМЕНТЫRow _parentАБОНЕМЕНТЫRowByГРУППОВЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫГРУППОВЫЕ_АБОНЕМЕНТЫ, ГРУППЫRow _parentГРУППЫRowByГРУППОВЫЕ_АБОНЕМЕНТЫ_ГРУППЫГРУППОВЫЕ_АБОНЕМЕНТЫ) {
                ГРУППОВЫЕ_АБОНЕМЕНТЫRow rowГРУППОВЫЕ_АБОНЕМЕНТЫRow = ((ГРУППОВЫЕ_АБОНЕМЕНТЫRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((_parentАБОНЕМЕНТЫRowByГРУППОВЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫГРУППОВЫЕ_АБОНЕМЕНТЫ != null)) {
                    columnValuesArray[0] = _parentАБОНЕМЕНТЫRowByГРУППОВЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫГРУППОВЫЕ_АБОНЕМЕНТЫ[0];
                }
                if ((_parentГРУППЫRowByГРУППОВЫЕ_АБОНЕМЕНТЫ_ГРУППЫГРУППОВЫЕ_АБОНЕМЕНТЫ != null)) {
                    columnValuesArray[1] = _parentГРУППЫRowByГРУППОВЫЕ_АБОНЕМЕНТЫ_ГРУППЫГРУППОВЫЕ_АБОНЕМЕНТЫ[0];
                }
                rowГРУППОВЫЕ_АБОНЕМЕНТЫRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowГРУППОВЫЕ_АБОНЕМЕНТЫRow);
                return rowГРУППОВЫЕ_АБОНЕМЕНТЫRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППОВЫЕ_АБОНЕМЕНТЫRow FindByКод_абонемента(int Код_абонемента) {
                return ((ГРУППОВЫЕ_АБОНЕМЕНТЫRow)(this.Rows.Find(new object[] {
                            Код_абонемента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable cln = ((ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_абонемента = base.Columns["Код_абонемента"];
                this.columnКод_группы = base.Columns["Код_группы"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_абонемента = new global::System.Data.DataColumn("Код_абонемента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_абонемента);
                this.columnКод_группы = new global::System.Data.DataColumn("Код_группы", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_группы);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_абонемента}, true));
                this.columnКод_абонемента.AllowDBNull = false;
                this.columnКод_абонемента.Unique = true;
                this.columnКод_группы.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППОВЫЕ_АБОНЕМЕНТЫRow NewГРУППОВЫЕ_АБОНЕМЕНТЫRow() {
                return ((ГРУППОВЫЕ_АБОНЕМЕНТЫRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ГРУППОВЫЕ_АБОНЕМЕНТЫRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ГРУППОВЫЕ_АБОНЕМЕНТЫRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ГРУППОВЫЕ_АБОНЕМЕНТЫRowChanged != null)) {
                    this.ГРУППОВЫЕ_АБОНЕМЕНТЫRowChanged(this, new ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEvent(((ГРУППОВЫЕ_АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ГРУППОВЫЕ_АБОНЕМЕНТЫRowChanging != null)) {
                    this.ГРУППОВЫЕ_АБОНЕМЕНТЫRowChanging(this, new ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEvent(((ГРУППОВЫЕ_АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ГРУППОВЫЕ_АБОНЕМЕНТЫRowDeleted != null)) {
                    this.ГРУППОВЫЕ_АБОНЕМЕНТЫRowDeleted(this, new ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEvent(((ГРУППОВЫЕ_АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ГРУППОВЫЕ_АБОНЕМЕНТЫRowDeleting != null)) {
                    this.ГРУППОВЫЕ_АБОНЕМЕНТЫRowDeleting(this, new ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEvent(((ГРУППОВЫЕ_АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveГРУППОВЫЕ_АБОНЕМЕНТЫRow(ГРУППОВЫЕ_АБОНЕМЕНТЫRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ГРУППЫDataTable : global::System.Data.TypedTableBase<ГРУППЫRow> {
            
            private global::System.Data.DataColumn columnКод_группы;
            
            private global::System.Data.DataColumn columnКод_тренера;
            
            private global::System.Data.DataColumn columnКод_студии;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫDataTable() {
                this.TableName = "ГРУППЫ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ГРУППЫDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ГРУППЫDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_группыColumn {
                get {
                    return this.columnКод_группы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_тренераColumn {
                get {
                    return this.columnКод_тренера;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_студииColumn {
                get {
                    return this.columnКод_студии;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫRow this[int index] {
                get {
                    return ((ГРУППЫRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ГРУППЫRowChangeEventHandler ГРУППЫRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ГРУППЫRowChangeEventHandler ГРУППЫRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ГРУППЫRowChangeEventHandler ГРУППЫRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ГРУППЫRowChangeEventHandler ГРУППЫRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddГРУППЫRow(ГРУППЫRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫRow AddГРУППЫRow(СОТРУДНИКИRow _parentСОТРУДНИКИRowByГРУППЫ_СОТРУДНИКИГРУППЫ, СТУДИЯRow _parentСТУДИЯRowByГРУППЫ_СТУДИЯГРУППЫ) {
                ГРУППЫRow rowГРУППЫRow = ((ГРУППЫRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null};
                if ((_parentСОТРУДНИКИRowByГРУППЫ_СОТРУДНИКИГРУППЫ != null)) {
                    columnValuesArray[1] = _parentСОТРУДНИКИRowByГРУППЫ_СОТРУДНИКИГРУППЫ[0];
                }
                if ((_parentСТУДИЯRowByГРУППЫ_СТУДИЯГРУППЫ != null)) {
                    columnValuesArray[2] = _parentСТУДИЯRowByГРУППЫ_СТУДИЯГРУППЫ[0];
                }
                rowГРУППЫRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowГРУППЫRow);
                return rowГРУППЫRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫRow FindByКод_группы(int Код_группы) {
                return ((ГРУППЫRow)(this.Rows.Find(new object[] {
                            Код_группы})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ГРУППЫDataTable cln = ((ГРУППЫDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ГРУППЫDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_группы = base.Columns["Код_группы"];
                this.columnКод_тренера = base.Columns["Код_тренера"];
                this.columnКод_студии = base.Columns["Код_студии"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_группы = new global::System.Data.DataColumn("Код_группы", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_группы);
                this.columnКод_тренера = new global::System.Data.DataColumn("Код_тренера", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_тренера);
                this.columnКод_студии = new global::System.Data.DataColumn("Код_студии", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_студии);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_группы}, true));
                this.columnКод_группы.AutoIncrement = true;
                this.columnКод_группы.AutoIncrementSeed = -1;
                this.columnКод_группы.AutoIncrementStep = -1;
                this.columnКод_группы.AllowDBNull = false;
                this.columnКод_группы.ReadOnly = true;
                this.columnКод_группы.Unique = true;
                this.columnКод_тренера.AllowDBNull = false;
                this.columnКод_студии.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫRow NewГРУППЫRow() {
                return ((ГРУППЫRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ГРУППЫRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ГРУППЫRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ГРУППЫRowChanged != null)) {
                    this.ГРУППЫRowChanged(this, new ГРУППЫRowChangeEvent(((ГРУППЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ГРУППЫRowChanging != null)) {
                    this.ГРУППЫRowChanging(this, new ГРУППЫRowChangeEvent(((ГРУППЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ГРУППЫRowDeleted != null)) {
                    this.ГРУППЫRowDeleted(this, new ГРУППЫRowChangeEvent(((ГРУППЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ГРУППЫRowDeleting != null)) {
                    this.ГРУППЫRowDeleting(this, new ГРУППЫRowChangeEvent(((ГРУППЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveГРУППЫRow(ГРУППЫRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ГРУППЫDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ИНВЕНТАРЬDataTable : global::System.Data.TypedTableBase<ИНВЕНТАРЬRow> {
            
            private global::System.Data.DataColumn columnКод_поставки;
            
            private global::System.Data.DataColumn columnКод_инвентаря;
            
            private global::System.Data.DataColumn columnНаименование;
            
            private global::System.Data.DataColumn columnВид_инвентаря;
            
            private global::System.Data.DataColumn columnСрок_годности;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnЦена_за_единицу;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНВЕНТАРЬDataTable() {
                this.TableName = "ИНВЕНТАРЬ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ИНВЕНТАРЬDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ИНВЕНТАРЬDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_поставкиColumn {
                get {
                    return this.columnКод_поставки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_инвентаряColumn {
                get {
                    return this.columnКод_инвентаря;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Вид_инвентаряColumn {
                get {
                    return this.columnВид_инвентаря;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Срок_годностиColumn {
                get {
                    return this.columnСрок_годности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Цена_за_единицуColumn {
                get {
                    return this.columnЦена_за_единицу;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНВЕНТАРЬRow this[int index] {
                get {
                    return ((ИНВЕНТАРЬRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ИНВЕНТАРЬRowChangeEventHandler ИНВЕНТАРЬRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ИНВЕНТАРЬRowChangeEventHandler ИНВЕНТАРЬRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ИНВЕНТАРЬRowChangeEventHandler ИНВЕНТАРЬRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ИНВЕНТАРЬRowChangeEventHandler ИНВЕНТАРЬRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddИНВЕНТАРЬRow(ИНВЕНТАРЬRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНВЕНТАРЬRow AddИНВЕНТАРЬRow(ПОСТАВКАRow _parentПОСТАВКАRowByИНВЕНТАРЬ_ПОСТАВКАИНВЕНТАРЬ, string Наименование, string Вид_инвентаря, System.DateTime Срок_годности, int Количество, decimal Цена_за_единицу) {
                ИНВЕНТАРЬRow rowИНВЕНТАРЬRow = ((ИНВЕНТАРЬRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Наименование,
                        Вид_инвентаря,
                        Срок_годности,
                        Количество,
                        Цена_за_единицу};
                if ((_parentПОСТАВКАRowByИНВЕНТАРЬ_ПОСТАВКАИНВЕНТАРЬ != null)) {
                    columnValuesArray[0] = _parentПОСТАВКАRowByИНВЕНТАРЬ_ПОСТАВКАИНВЕНТАРЬ[0];
                }
                rowИНВЕНТАРЬRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowИНВЕНТАРЬRow);
                return rowИНВЕНТАРЬRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНВЕНТАРЬRow FindByКод_поставкиКод_инвентаря(int Код_поставки, int Код_инвентаря) {
                return ((ИНВЕНТАРЬRow)(this.Rows.Find(new object[] {
                            Код_поставки,
                            Код_инвентаря})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ИНВЕНТАРЬDataTable cln = ((ИНВЕНТАРЬDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ИНВЕНТАРЬDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_поставки = base.Columns["Код_поставки"];
                this.columnКод_инвентаря = base.Columns["Код_инвентаря"];
                this.columnНаименование = base.Columns["Наименование"];
                this.columnВид_инвентаря = base.Columns["Вид_инвентаря"];
                this.columnСрок_годности = base.Columns["Срок_годности"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnЦена_за_единицу = base.Columns["Цена_за_единицу"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_поставки = new global::System.Data.DataColumn("Код_поставки", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_поставки);
                this.columnКод_инвентаря = new global::System.Data.DataColumn("Код_инвентаря", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_инвентаря);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.columnВид_инвентаря = new global::System.Data.DataColumn("Вид_инвентаря", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВид_инвентаря);
                this.columnСрок_годности = new global::System.Data.DataColumn("Срок_годности", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСрок_годности);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnЦена_за_единицу = new global::System.Data.DataColumn("Цена_за_единицу", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена_за_единицу);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_поставки,
                                this.columnКод_инвентаря}, true));
                this.columnКод_поставки.AllowDBNull = false;
                this.columnКод_инвентаря.AutoIncrement = true;
                this.columnКод_инвентаря.AutoIncrementSeed = -1;
                this.columnКод_инвентаря.AutoIncrementStep = -1;
                this.columnКод_инвентаря.AllowDBNull = false;
                this.columnКод_инвентаря.ReadOnly = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 50;
                this.columnВид_инвентаря.AllowDBNull = false;
                this.columnВид_инвентаря.MaxLength = 50;
                this.columnСрок_годности.AllowDBNull = false;
                this.columnКоличество.AllowDBNull = false;
                this.columnЦена_за_единицу.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНВЕНТАРЬRow NewИНВЕНТАРЬRow() {
                return ((ИНВЕНТАРЬRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ИНВЕНТАРЬRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ИНВЕНТАРЬRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ИНВЕНТАРЬRowChanged != null)) {
                    this.ИНВЕНТАРЬRowChanged(this, new ИНВЕНТАРЬRowChangeEvent(((ИНВЕНТАРЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ИНВЕНТАРЬRowChanging != null)) {
                    this.ИНВЕНТАРЬRowChanging(this, new ИНВЕНТАРЬRowChangeEvent(((ИНВЕНТАРЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ИНВЕНТАРЬRowDeleted != null)) {
                    this.ИНВЕНТАРЬRowDeleted(this, new ИНВЕНТАРЬRowChangeEvent(((ИНВЕНТАРЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ИНВЕНТАРЬRowDeleting != null)) {
                    this.ИНВЕНТАРЬRowDeleting(this, new ИНВЕНТАРЬRowChangeEvent(((ИНВЕНТАРЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveИНВЕНТАРЬRow(ИНВЕНТАРЬRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ИНВЕНТАРЬDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable : global::System.Data.TypedTableBase<ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow> {
            
            private global::System.Data.DataColumn columnКод_абонемента;
            
            private global::System.Data.DataColumn columnКод_тренера;
            
            private global::System.Data.DataColumn columnКод_клиента;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable() {
                this.TableName = "ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_абонементаColumn {
                get {
                    return this.columnКод_абонемента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_тренераColumn {
                get {
                    return this.columnКод_тренера;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_клиентаColumn {
                get {
                    return this.columnКод_клиента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow this[int index] {
                get {
                    return ((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEventHandler ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEventHandler ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEventHandler ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEventHandler ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow(ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow AddИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow(АБОНЕМЕНТЫRow _parentАБОНЕМЕНТЫRowByИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ, СОТРУДНИКИRow _parentСОТРУДНИКИRowByИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_СОТРУДНИКИИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ, int Код_клиента) {
                ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow rowИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow = ((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Код_клиента};
                if ((_parentАБОНЕМЕНТЫRowByИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ != null)) {
                    columnValuesArray[0] = _parentАБОНЕМЕНТЫRowByИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ[0];
                }
                if ((_parentСОТРУДНИКИRowByИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_СОТРУДНИКИИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ != null)) {
                    columnValuesArray[1] = _parentСОТРУДНИКИRowByИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ_СОТРУДНИКИИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ[0];
                }
                rowИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow);
                return rowИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow FindByКод_абонемента(int Код_абонемента) {
                return ((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow)(this.Rows.Find(new object[] {
                            Код_абонемента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable cln = ((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_абонемента = base.Columns["Код_абонемента"];
                this.columnКод_тренера = base.Columns["Код_тренера"];
                this.columnКод_клиента = base.Columns["Код_клиента"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_абонемента = new global::System.Data.DataColumn("Код_абонемента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_абонемента);
                this.columnКод_тренера = new global::System.Data.DataColumn("Код_тренера", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_тренера);
                this.columnКод_клиента = new global::System.Data.DataColumn("Код_клиента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_клиента);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_абонемента}, true));
                this.columnКод_абонемента.AllowDBNull = false;
                this.columnКод_абонемента.Unique = true;
                this.columnКод_тренера.AllowDBNull = false;
                this.columnКод_клиента.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow NewИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow() {
                return ((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChanged != null)) {
                    this.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChanged(this, new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEvent(((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChanging != null)) {
                    this.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChanging(this, new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEvent(((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowDeleted != null)) {
                    this.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowDeleted(this, new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEvent(((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowDeleting != null)) {
                    this.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowDeleting(this, new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEvent(((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow(ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class КЛИЕНТЫDataTable : global::System.Data.TypedTableBase<КЛИЕНТЫRow> {
            
            private global::System.Data.DataColumn columnКод_клиента;
            
            private global::System.Data.DataColumn columnФамилия_клиента;
            
            private global::System.Data.DataColumn columnИмя_клиента;
            
            private global::System.Data.DataColumn columnОтчество_клиента;
            
            private global::System.Data.DataColumn columnДата_рождения;
            
            private global::System.Data.DataColumn columnФактический_адрес;
            
            private global::System.Data.DataColumn columnТелефон_клиента;
            
            private global::System.Data.DataColumn columnЭлектронная_почта;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КЛИЕНТЫDataTable() {
                this.TableName = "КЛИЕНТЫ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal КЛИЕНТЫDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected КЛИЕНТЫDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_клиентаColumn {
                get {
                    return this.columnКод_клиента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Фамилия_клиентаColumn {
                get {
                    return this.columnФамилия_клиента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Имя_клиентаColumn {
                get {
                    return this.columnИмя_клиента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Отчество_клиентаColumn {
                get {
                    return this.columnОтчество_клиента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_рожденияColumn {
                get {
                    return this.columnДата_рождения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Фактический_адресColumn {
                get {
                    return this.columnФактический_адрес;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Телефон_клиентаColumn {
                get {
                    return this.columnТелефон_клиента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Электронная_почтаColumn {
                get {
                    return this.columnЭлектронная_почта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КЛИЕНТЫRow this[int index] {
                get {
                    return ((КЛИЕНТЫRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КЛИЕНТЫRowChangeEventHandler КЛИЕНТЫRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КЛИЕНТЫRowChangeEventHandler КЛИЕНТЫRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КЛИЕНТЫRowChangeEventHandler КЛИЕНТЫRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КЛИЕНТЫRowChangeEventHandler КЛИЕНТЫRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddКЛИЕНТЫRow(КЛИЕНТЫRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КЛИЕНТЫRow AddКЛИЕНТЫRow(string Фамилия_клиента, string Имя_клиента, string Отчество_клиента, System.DateTime Дата_рождения, string Фактический_адрес, string Телефон_клиента, string Электронная_почта) {
                КЛИЕНТЫRow rowКЛИЕНТЫRow = ((КЛИЕНТЫRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Фамилия_клиента,
                        Имя_клиента,
                        Отчество_клиента,
                        Дата_рождения,
                        Фактический_адрес,
                        Телефон_клиента,
                        Электронная_почта};
                rowКЛИЕНТЫRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКЛИЕНТЫRow);
                return rowКЛИЕНТЫRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КЛИЕНТЫRow FindByКод_клиента(int Код_клиента) {
                return ((КЛИЕНТЫRow)(this.Rows.Find(new object[] {
                            Код_клиента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                КЛИЕНТЫDataTable cln = ((КЛИЕНТЫDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new КЛИЕНТЫDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_клиента = base.Columns["Код_клиента"];
                this.columnФамилия_клиента = base.Columns["Фамилия_клиента"];
                this.columnИмя_клиента = base.Columns["Имя_клиента"];
                this.columnОтчество_клиента = base.Columns["Отчество_клиента"];
                this.columnДата_рождения = base.Columns["Дата_рождения"];
                this.columnФактический_адрес = base.Columns["Фактический_адрес"];
                this.columnТелефон_клиента = base.Columns["Телефон_клиента"];
                this.columnЭлектронная_почта = base.Columns["Электронная_почта"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_клиента = new global::System.Data.DataColumn("Код_клиента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_клиента);
                this.columnФамилия_клиента = new global::System.Data.DataColumn("Фамилия_клиента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФамилия_клиента);
                this.columnИмя_клиента = new global::System.Data.DataColumn("Имя_клиента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИмя_клиента);
                this.columnОтчество_клиента = new global::System.Data.DataColumn("Отчество_клиента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтчество_клиента);
                this.columnДата_рождения = new global::System.Data.DataColumn("Дата_рождения", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_рождения);
                this.columnФактический_адрес = new global::System.Data.DataColumn("Фактический_адрес", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФактический_адрес);
                this.columnТелефон_клиента = new global::System.Data.DataColumn("Телефон_клиента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТелефон_клиента);
                this.columnЭлектронная_почта = new global::System.Data.DataColumn("Электронная_почта", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЭлектронная_почта);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_клиента}, true));
                this.columnКод_клиента.AutoIncrement = true;
                this.columnКод_клиента.AutoIncrementSeed = -1;
                this.columnКод_клиента.AutoIncrementStep = -1;
                this.columnКод_клиента.AllowDBNull = false;
                this.columnКод_клиента.ReadOnly = true;
                this.columnКод_клиента.Unique = true;
                this.columnФамилия_клиента.AllowDBNull = false;
                this.columnФамилия_клиента.MaxLength = 50;
                this.columnИмя_клиента.AllowDBNull = false;
                this.columnИмя_клиента.MaxLength = 50;
                this.columnОтчество_клиента.AllowDBNull = false;
                this.columnОтчество_клиента.MaxLength = 50;
                this.columnДата_рождения.AllowDBNull = false;
                this.columnФактический_адрес.AllowDBNull = false;
                this.columnФактический_адрес.MaxLength = 50;
                this.columnТелефон_клиента.AllowDBNull = false;
                this.columnТелефон_клиента.MaxLength = 50;
                this.columnЭлектронная_почта.AllowDBNull = false;
                this.columnЭлектронная_почта.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КЛИЕНТЫRow NewКЛИЕНТЫRow() {
                return ((КЛИЕНТЫRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new КЛИЕНТЫRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(КЛИЕНТЫRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.КЛИЕНТЫRowChanged != null)) {
                    this.КЛИЕНТЫRowChanged(this, new КЛИЕНТЫRowChangeEvent(((КЛИЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.КЛИЕНТЫRowChanging != null)) {
                    this.КЛИЕНТЫRowChanging(this, new КЛИЕНТЫRowChangeEvent(((КЛИЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.КЛИЕНТЫRowDeleted != null)) {
                    this.КЛИЕНТЫRowDeleted(this, new КЛИЕНТЫRowChangeEvent(((КЛИЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.КЛИЕНТЫRowDeleting != null)) {
                    this.КЛИЕНТЫRowDeleting(this, new КЛИЕНТЫRowChangeEvent(((КЛИЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveКЛИЕНТЫRow(КЛИЕНТЫRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "КЛИЕНТЫDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПОСТАВКАDataTable : global::System.Data.TypedTableBase<ПОСТАВКАRow> {
            
            private global::System.Data.DataColumn columnКод_поставки;
            
            private global::System.Data.DataColumn columnДата_заявки;
            
            private global::System.Data.DataColumn columnДата_поставки;
            
            private global::System.Data.DataColumn columnКод_студии;
            
            private global::System.Data.DataColumn columnКод_поставщика;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВКАDataTable() {
                this.TableName = "ПОСТАВКА";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПОСТАВКАDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ПОСТАВКАDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_поставкиColumn {
                get {
                    return this.columnКод_поставки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_заявкиColumn {
                get {
                    return this.columnДата_заявки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_поставкиColumn {
                get {
                    return this.columnДата_поставки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_студииColumn {
                get {
                    return this.columnКод_студии;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_поставщикаColumn {
                get {
                    return this.columnКод_поставщика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВКАRow this[int index] {
                get {
                    return ((ПОСТАВКАRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОСТАВКАRowChangeEventHandler ПОСТАВКАRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОСТАВКАRowChangeEventHandler ПОСТАВКАRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОСТАВКАRowChangeEventHandler ПОСТАВКАRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОСТАВКАRowChangeEventHandler ПОСТАВКАRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddПОСТАВКАRow(ПОСТАВКАRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВКАRow AddПОСТАВКАRow(System.DateTime Дата_заявки, System.DateTime Дата_поставки, СТУДИЯRow _parentСТУДИЯRowByПОСТАВКА_СТУДИЯПОСТАВКА, ПОСТАВЩИКRow _parentПОСТАВЩИКRowByПОСТАВКА_ПОСТАВЩИКПОСТАВКА) {
                ПОСТАВКАRow rowПОСТАВКАRow = ((ПОСТАВКАRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Дата_заявки,
                        Дата_поставки,
                        null,
                        null};
                if ((_parentСТУДИЯRowByПОСТАВКА_СТУДИЯПОСТАВКА != null)) {
                    columnValuesArray[3] = _parentСТУДИЯRowByПОСТАВКА_СТУДИЯПОСТАВКА[0];
                }
                if ((_parentПОСТАВЩИКRowByПОСТАВКА_ПОСТАВЩИКПОСТАВКА != null)) {
                    columnValuesArray[4] = _parentПОСТАВЩИКRowByПОСТАВКА_ПОСТАВЩИКПОСТАВКА[0];
                }
                rowПОСТАВКАRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПОСТАВКАRow);
                return rowПОСТАВКАRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВКАRow FindByКод_поставки(int Код_поставки) {
                return ((ПОСТАВКАRow)(this.Rows.Find(new object[] {
                            Код_поставки})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПОСТАВКАDataTable cln = ((ПОСТАВКАDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПОСТАВКАDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_поставки = base.Columns["Код_поставки"];
                this.columnДата_заявки = base.Columns["Дата_заявки"];
                this.columnДата_поставки = base.Columns["Дата_поставки"];
                this.columnКод_студии = base.Columns["Код_студии"];
                this.columnКод_поставщика = base.Columns["Код_поставщика"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_поставки = new global::System.Data.DataColumn("Код_поставки", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_поставки);
                this.columnДата_заявки = new global::System.Data.DataColumn("Дата_заявки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_заявки);
                this.columnДата_поставки = new global::System.Data.DataColumn("Дата_поставки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_поставки);
                this.columnКод_студии = new global::System.Data.DataColumn("Код_студии", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_студии);
                this.columnКод_поставщика = new global::System.Data.DataColumn("Код_поставщика", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_поставщика);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_поставки}, true));
                this.columnКод_поставки.AutoIncrement = true;
                this.columnКод_поставки.AutoIncrementSeed = -1;
                this.columnКод_поставки.AutoIncrementStep = -1;
                this.columnКод_поставки.AllowDBNull = false;
                this.columnКод_поставки.ReadOnly = true;
                this.columnКод_поставки.Unique = true;
                this.columnДата_заявки.AllowDBNull = false;
                this.columnДата_поставки.AllowDBNull = false;
                this.columnКод_студии.AllowDBNull = false;
                this.columnКод_поставщика.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВКАRow NewПОСТАВКАRow() {
                return ((ПОСТАВКАRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПОСТАВКАRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПОСТАВКАRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПОСТАВКАRowChanged != null)) {
                    this.ПОСТАВКАRowChanged(this, new ПОСТАВКАRowChangeEvent(((ПОСТАВКАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПОСТАВКАRowChanging != null)) {
                    this.ПОСТАВКАRowChanging(this, new ПОСТАВКАRowChangeEvent(((ПОСТАВКАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПОСТАВКАRowDeleted != null)) {
                    this.ПОСТАВКАRowDeleted(this, new ПОСТАВКАRowChangeEvent(((ПОСТАВКАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПОСТАВКАRowDeleting != null)) {
                    this.ПОСТАВКАRowDeleting(this, new ПОСТАВКАRowChangeEvent(((ПОСТАВКАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveПОСТАВКАRow(ПОСТАВКАRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПОСТАВКАDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПОСТАВЩИКDataTable : global::System.Data.TypedTableBase<ПОСТАВЩИКRow> {
            
            private global::System.Data.DataColumn columnКод_поставщика;
            
            private global::System.Data.DataColumn columnНазвание_поставщика;
            
            private global::System.Data.DataColumn columnТелефон_поставщика;
            
            private global::System.Data.DataColumn columnАдрес_поставщика;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВЩИКDataTable() {
                this.TableName = "ПОСТАВЩИК";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПОСТАВЩИКDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ПОСТАВЩИКDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_поставщикаColumn {
                get {
                    return this.columnКод_поставщика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Название_поставщикаColumn {
                get {
                    return this.columnНазвание_поставщика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Телефон_поставщикаColumn {
                get {
                    return this.columnТелефон_поставщика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Адрес_поставщикаColumn {
                get {
                    return this.columnАдрес_поставщика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВЩИКRow this[int index] {
                get {
                    return ((ПОСТАВЩИКRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОСТАВЩИКRowChangeEventHandler ПОСТАВЩИКRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОСТАВЩИКRowChangeEventHandler ПОСТАВЩИКRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОСТАВЩИКRowChangeEventHandler ПОСТАВЩИКRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОСТАВЩИКRowChangeEventHandler ПОСТАВЩИКRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddПОСТАВЩИКRow(ПОСТАВЩИКRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВЩИКRow AddПОСТАВЩИКRow(string Название_поставщика, string Телефон_поставщика, string Адрес_поставщика) {
                ПОСТАВЩИКRow rowПОСТАВЩИКRow = ((ПОСТАВЩИКRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Название_поставщика,
                        Телефон_поставщика,
                        Адрес_поставщика};
                rowПОСТАВЩИКRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПОСТАВЩИКRow);
                return rowПОСТАВЩИКRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВЩИКRow FindByКод_поставщика(int Код_поставщика) {
                return ((ПОСТАВЩИКRow)(this.Rows.Find(new object[] {
                            Код_поставщика})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПОСТАВЩИКDataTable cln = ((ПОСТАВЩИКDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПОСТАВЩИКDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_поставщика = base.Columns["Код_поставщика"];
                this.columnНазвание_поставщика = base.Columns["Название_поставщика"];
                this.columnТелефон_поставщика = base.Columns["Телефон_поставщика"];
                this.columnАдрес_поставщика = base.Columns["Адрес_поставщика"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_поставщика = new global::System.Data.DataColumn("Код_поставщика", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_поставщика);
                this.columnНазвание_поставщика = new global::System.Data.DataColumn("Название_поставщика", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНазвание_поставщика);
                this.columnТелефон_поставщика = new global::System.Data.DataColumn("Телефон_поставщика", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТелефон_поставщика);
                this.columnАдрес_поставщика = new global::System.Data.DataColumn("Адрес_поставщика", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАдрес_поставщика);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_поставщика}, true));
                this.columnКод_поставщика.AutoIncrement = true;
                this.columnКод_поставщика.AutoIncrementSeed = -1;
                this.columnКод_поставщика.AutoIncrementStep = -1;
                this.columnКод_поставщика.AllowDBNull = false;
                this.columnКод_поставщика.ReadOnly = true;
                this.columnКод_поставщика.Unique = true;
                this.columnНазвание_поставщика.AllowDBNull = false;
                this.columnНазвание_поставщика.MaxLength = 100;
                this.columnТелефон_поставщика.AllowDBNull = false;
                this.columnТелефон_поставщика.MaxLength = 50;
                this.columnАдрес_поставщика.AllowDBNull = false;
                this.columnАдрес_поставщика.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВЩИКRow NewПОСТАВЩИКRow() {
                return ((ПОСТАВЩИКRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПОСТАВЩИКRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПОСТАВЩИКRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПОСТАВЩИКRowChanged != null)) {
                    this.ПОСТАВЩИКRowChanged(this, new ПОСТАВЩИКRowChangeEvent(((ПОСТАВЩИКRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПОСТАВЩИКRowChanging != null)) {
                    this.ПОСТАВЩИКRowChanging(this, new ПОСТАВЩИКRowChangeEvent(((ПОСТАВЩИКRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПОСТАВЩИКRowDeleted != null)) {
                    this.ПОСТАВЩИКRowDeleted(this, new ПОСТАВЩИКRowChangeEvent(((ПОСТАВЩИКRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПОСТАВЩИКRowDeleting != null)) {
                    this.ПОСТАВЩИКRowDeleting(this, new ПОСТАВЩИКRowChangeEvent(((ПОСТАВЩИКRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveПОСТАВЩИКRow(ПОСТАВЩИКRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПОСТАВЩИКDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПРОГРАММЫDataTable : global::System.Data.TypedTableBase<ПРОГРАММЫRow> {
            
            private global::System.Data.DataColumn columnКод_программы;
            
            private global::System.Data.DataColumn columnНазвание_программы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОГРАММЫDataTable() {
                this.TableName = "ПРОГРАММЫ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПРОГРАММЫDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ПРОГРАММЫDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_программыColumn {
                get {
                    return this.columnКод_программы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Название_программыColumn {
                get {
                    return this.columnНазвание_программы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОГРАММЫRow this[int index] {
                get {
                    return ((ПРОГРАММЫRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПРОГРАММЫRowChangeEventHandler ПРОГРАММЫRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПРОГРАММЫRowChangeEventHandler ПРОГРАММЫRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПРОГРАММЫRowChangeEventHandler ПРОГРАММЫRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПРОГРАММЫRowChangeEventHandler ПРОГРАММЫRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddПРОГРАММЫRow(ПРОГРАММЫRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОГРАММЫRow AddПРОГРАММЫRow(string Название_программы) {
                ПРОГРАММЫRow rowПРОГРАММЫRow = ((ПРОГРАММЫRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Название_программы};
                rowПРОГРАММЫRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПРОГРАММЫRow);
                return rowПРОГРАММЫRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОГРАММЫRow FindByКод_программы(int Код_программы) {
                return ((ПРОГРАММЫRow)(this.Rows.Find(new object[] {
                            Код_программы})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПРОГРАММЫDataTable cln = ((ПРОГРАММЫDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПРОГРАММЫDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_программы = base.Columns["Код_программы"];
                this.columnНазвание_программы = base.Columns["Название_программы"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_программы = new global::System.Data.DataColumn("Код_программы", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_программы);
                this.columnНазвание_программы = new global::System.Data.DataColumn("Название_программы", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНазвание_программы);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_программы}, true));
                this.columnКод_программы.AutoIncrement = true;
                this.columnКод_программы.AutoIncrementSeed = -1;
                this.columnКод_программы.AutoIncrementStep = -1;
                this.columnКод_программы.AllowDBNull = false;
                this.columnКод_программы.ReadOnly = true;
                this.columnКод_программы.Unique = true;
                this.columnНазвание_программы.AllowDBNull = false;
                this.columnНазвание_программы.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОГРАММЫRow NewПРОГРАММЫRow() {
                return ((ПРОГРАММЫRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПРОГРАММЫRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПРОГРАММЫRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПРОГРАММЫRowChanged != null)) {
                    this.ПРОГРАММЫRowChanged(this, new ПРОГРАММЫRowChangeEvent(((ПРОГРАММЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПРОГРАММЫRowChanging != null)) {
                    this.ПРОГРАММЫRowChanging(this, new ПРОГРАММЫRowChangeEvent(((ПРОГРАММЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПРОГРАММЫRowDeleted != null)) {
                    this.ПРОГРАММЫRowDeleted(this, new ПРОГРАММЫRowChangeEvent(((ПРОГРАММЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПРОГРАММЫRowDeleting != null)) {
                    this.ПРОГРАММЫRowDeleting(this, new ПРОГРАММЫRowChangeEvent(((ПРОГРАММЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveПРОГРАММЫRow(ПРОГРАММЫRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПРОГРАММЫDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class РАСПИСАНИЕDataTable : global::System.Data.TypedTableBase<РАСПИСАНИЕRow> {
            
            private global::System.Data.DataColumn columnКод_расписания;
            
            private global::System.Data.DataColumn columnПрограммы;
            
            private global::System.Data.DataColumn columnКод_группы;
            
            private global::System.Data.DataColumn _columnДата_время;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕDataTable() {
                this.TableName = "РАСПИСАНИЕ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal РАСПИСАНИЕDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected РАСПИСАНИЕDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_расписанияColumn {
                get {
                    return this.columnКод_расписания;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ПрограммыColumn {
                get {
                    return this.columnПрограммы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_группыColumn {
                get {
                    return this.columnКод_группы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn _Дата_времяColumn {
                get {
                    return this._columnДата_время;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕRow this[int index] {
                get {
                    return ((РАСПИСАНИЕRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РАСПИСАНИЕRowChangeEventHandler РАСПИСАНИЕRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РАСПИСАНИЕRowChangeEventHandler РАСПИСАНИЕRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РАСПИСАНИЕRowChangeEventHandler РАСПИСАНИЕRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РАСПИСАНИЕRowChangeEventHandler РАСПИСАНИЕRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddРАСПИСАНИЕRow(РАСПИСАНИЕRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕRow AddРАСПИСАНИЕRow(int Программы, int Код_группы, System.DateTime _Дата_время) {
                РАСПИСАНИЕRow rowРАСПИСАНИЕRow = ((РАСПИСАНИЕRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Программы,
                        Код_группы,
                        _Дата_время};
                rowРАСПИСАНИЕRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowРАСПИСАНИЕRow);
                return rowРАСПИСАНИЕRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕRow FindByКод_расписания(int Код_расписания) {
                return ((РАСПИСАНИЕRow)(this.Rows.Find(new object[] {
                            Код_расписания})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                РАСПИСАНИЕDataTable cln = ((РАСПИСАНИЕDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new РАСПИСАНИЕDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_расписания = base.Columns["Код_расписания"];
                this.columnПрограммы = base.Columns["Программы"];
                this.columnКод_группы = base.Columns["Код_группы"];
                this._columnДата_время = base.Columns["Дата/время"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_расписания = new global::System.Data.DataColumn("Код_расписания", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_расписания);
                this.columnПрограммы = new global::System.Data.DataColumn("Программы", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПрограммы);
                this.columnКод_группы = new global::System.Data.DataColumn("Код_группы", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_группы);
                this._columnДата_время = new global::System.Data.DataColumn("Дата/время", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this._columnДата_время.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnДата_время");
                this._columnДата_время.ExtendedProperties.Add("Generator_UserColumnName", "Дата/время");
                base.Columns.Add(this._columnДата_время);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_расписания}, true));
                this.columnКод_расписания.AutoIncrement = true;
                this.columnКод_расписания.AutoIncrementSeed = -1;
                this.columnКод_расписания.AutoIncrementStep = -1;
                this.columnКод_расписания.AllowDBNull = false;
                this.columnКод_расписания.ReadOnly = true;
                this.columnКод_расписания.Unique = true;
                this.columnПрограммы.AllowDBNull = false;
                this.columnКод_группы.AllowDBNull = false;
                this._columnДата_время.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕRow NewРАСПИСАНИЕRow() {
                return ((РАСПИСАНИЕRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new РАСПИСАНИЕRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(РАСПИСАНИЕRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.РАСПИСАНИЕRowChanged != null)) {
                    this.РАСПИСАНИЕRowChanged(this, new РАСПИСАНИЕRowChangeEvent(((РАСПИСАНИЕRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.РАСПИСАНИЕRowChanging != null)) {
                    this.РАСПИСАНИЕRowChanging(this, new РАСПИСАНИЕRowChangeEvent(((РАСПИСАНИЕRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.РАСПИСАНИЕRowDeleted != null)) {
                    this.РАСПИСАНИЕRowDeleted(this, new РАСПИСАНИЕRowChangeEvent(((РАСПИСАНИЕRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.РАСПИСАНИЕRowDeleting != null)) {
                    this.РАСПИСАНИЕRowDeleting(this, new РАСПИСАНИЕRowChangeEvent(((РАСПИСАНИЕRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveРАСПИСАНИЕRow(РАСПИСАНИЕRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "РАСПИСАНИЕDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class РАСПИСАНИЕ_ИНДИВИДDataTable : global::System.Data.TypedTableBase<РАСПИСАНИЕ_ИНДИВИДRow> {
            
            private global::System.Data.DataColumn columnКод_инд_расписания;
            
            private global::System.Data.DataColumn columnПрограммы;
            
            private global::System.Data.DataColumn _columnДата_время;
            
            private global::System.Data.DataColumn columnКод_клиента;
            
            private global::System.Data.DataColumn columnКод_тренера;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕ_ИНДИВИДDataTable() {
                this.TableName = "РАСПИСАНИЕ ИНДИВИД";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal РАСПИСАНИЕ_ИНДИВИДDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected РАСПИСАНИЕ_ИНДИВИДDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_инд_расписанияColumn {
                get {
                    return this.columnКод_инд_расписания;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ПрограммыColumn {
                get {
                    return this.columnПрограммы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn _Дата_времяColumn {
                get {
                    return this._columnДата_время;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_клиентаColumn {
                get {
                    return this.columnКод_клиента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_тренераColumn {
                get {
                    return this.columnКод_тренера;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕ_ИНДИВИДRow this[int index] {
                get {
                    return ((РАСПИСАНИЕ_ИНДИВИДRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РАСПИСАНИЕ_ИНДИВИДRowChangeEventHandler РАСПИСАНИЕ_ИНДИВИДRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РАСПИСАНИЕ_ИНДИВИДRowChangeEventHandler РАСПИСАНИЕ_ИНДИВИДRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РАСПИСАНИЕ_ИНДИВИДRowChangeEventHandler РАСПИСАНИЕ_ИНДИВИДRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РАСПИСАНИЕ_ИНДИВИДRowChangeEventHandler РАСПИСАНИЕ_ИНДИВИДRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddРАСПИСАНИЕ_ИНДИВИДRow(РАСПИСАНИЕ_ИНДИВИДRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕ_ИНДИВИДRow AddРАСПИСАНИЕ_ИНДИВИДRow(ПРОГРАММЫRow _parentПРОГРАММЫRowByРАСПИСАНИЕ_ИНДИВИД_ПРОГРАММЫРАСПИСАНИЕ_ИНДИВИД, System.DateTime _Дата_время, КЛИЕНТЫRow _parentКЛИЕНТЫRowByРАСПИСАНИЕ_ИНДИВИД_КЛИЕНТЫРАСПИСАНИЕ_ИНДИВИД, СОТРУДНИКИRow _parentСОТРУДНИКИRowByРАСПИСАНИЕ_ИНДИВИД_СОТРУДНИКИРАСПИСАНИЕ_ИНДИВИД) {
                РАСПИСАНИЕ_ИНДИВИДRow rowРАСПИСАНИЕ_ИНДИВИДRow = ((РАСПИСАНИЕ_ИНДИВИДRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        _Дата_время,
                        null,
                        null};
                if ((_parentПРОГРАММЫRowByРАСПИСАНИЕ_ИНДИВИД_ПРОГРАММЫРАСПИСАНИЕ_ИНДИВИД != null)) {
                    columnValuesArray[1] = _parentПРОГРАММЫRowByРАСПИСАНИЕ_ИНДИВИД_ПРОГРАММЫРАСПИСАНИЕ_ИНДИВИД[0];
                }
                if ((_parentКЛИЕНТЫRowByРАСПИСАНИЕ_ИНДИВИД_КЛИЕНТЫРАСПИСАНИЕ_ИНДИВИД != null)) {
                    columnValuesArray[3] = _parentКЛИЕНТЫRowByРАСПИСАНИЕ_ИНДИВИД_КЛИЕНТЫРАСПИСАНИЕ_ИНДИВИД[0];
                }
                if ((_parentСОТРУДНИКИRowByРАСПИСАНИЕ_ИНДИВИД_СОТРУДНИКИРАСПИСАНИЕ_ИНДИВИД != null)) {
                    columnValuesArray[4] = _parentСОТРУДНИКИRowByРАСПИСАНИЕ_ИНДИВИД_СОТРУДНИКИРАСПИСАНИЕ_ИНДИВИД[0];
                }
                rowРАСПИСАНИЕ_ИНДИВИДRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowРАСПИСАНИЕ_ИНДИВИДRow);
                return rowРАСПИСАНИЕ_ИНДИВИДRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕ_ИНДИВИДRow FindByКод_инд_расписания(int Код_инд_расписания) {
                return ((РАСПИСАНИЕ_ИНДИВИДRow)(this.Rows.Find(new object[] {
                            Код_инд_расписания})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                РАСПИСАНИЕ_ИНДИВИДDataTable cln = ((РАСПИСАНИЕ_ИНДИВИДDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new РАСПИСАНИЕ_ИНДИВИДDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_инд_расписания = base.Columns["Код_инд_расписания"];
                this.columnПрограммы = base.Columns["Программы"];
                this._columnДата_время = base.Columns["Дата/время"];
                this.columnКод_клиента = base.Columns["Код_клиента"];
                this.columnКод_тренера = base.Columns["Код_тренера"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_инд_расписания = new global::System.Data.DataColumn("Код_инд_расписания", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_инд_расписания);
                this.columnПрограммы = new global::System.Data.DataColumn("Программы", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПрограммы);
                this._columnДата_время = new global::System.Data.DataColumn("Дата/время", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this._columnДата_время.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnДата_время");
                this._columnДата_время.ExtendedProperties.Add("Generator_UserColumnName", "Дата/время");
                base.Columns.Add(this._columnДата_время);
                this.columnКод_клиента = new global::System.Data.DataColumn("Код_клиента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_клиента);
                this.columnКод_тренера = new global::System.Data.DataColumn("Код_тренера", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_тренера);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_инд_расписания}, true));
                this.columnКод_инд_расписания.AutoIncrement = true;
                this.columnКод_инд_расписания.AutoIncrementSeed = -1;
                this.columnКод_инд_расписания.AutoIncrementStep = -1;
                this.columnКод_инд_расписания.AllowDBNull = false;
                this.columnКод_инд_расписания.ReadOnly = true;
                this.columnКод_инд_расписания.Unique = true;
                this.columnПрограммы.AllowDBNull = false;
                this._columnДата_время.AllowDBNull = false;
                this.columnКод_тренера.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕ_ИНДИВИДRow NewРАСПИСАНИЕ_ИНДИВИДRow() {
                return ((РАСПИСАНИЕ_ИНДИВИДRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new РАСПИСАНИЕ_ИНДИВИДRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(РАСПИСАНИЕ_ИНДИВИДRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.РАСПИСАНИЕ_ИНДИВИДRowChanged != null)) {
                    this.РАСПИСАНИЕ_ИНДИВИДRowChanged(this, new РАСПИСАНИЕ_ИНДИВИДRowChangeEvent(((РАСПИСАНИЕ_ИНДИВИДRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.РАСПИСАНИЕ_ИНДИВИДRowChanging != null)) {
                    this.РАСПИСАНИЕ_ИНДИВИДRowChanging(this, new РАСПИСАНИЕ_ИНДИВИДRowChangeEvent(((РАСПИСАНИЕ_ИНДИВИДRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.РАСПИСАНИЕ_ИНДИВИДRowDeleted != null)) {
                    this.РАСПИСАНИЕ_ИНДИВИДRowDeleted(this, new РАСПИСАНИЕ_ИНДИВИДRowChangeEvent(((РАСПИСАНИЕ_ИНДИВИДRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.РАСПИСАНИЕ_ИНДИВИДRowDeleting != null)) {
                    this.РАСПИСАНИЕ_ИНДИВИДRowDeleting(this, new РАСПИСАНИЕ_ИНДИВИДRowChangeEvent(((РАСПИСАНИЕ_ИНДИВИДRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveРАСПИСАНИЕ_ИНДИВИДRow(РАСПИСАНИЕ_ИНДИВИДRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "РАСПИСАНИЕ_ИНДИВИДDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СОСТАВ_ГРУППЫDataTable : global::System.Data.TypedTableBase<СОСТАВ_ГРУППЫRow> {
            
            private global::System.Data.DataColumn columnКод_группы;
            
            private global::System.Data.DataColumn columnКод_клиента;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОСТАВ_ГРУППЫDataTable() {
                this.TableName = "СОСТАВ ГРУППЫ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal СОСТАВ_ГРУППЫDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected СОСТАВ_ГРУППЫDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_группыColumn {
                get {
                    return this.columnКод_группы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_клиентаColumn {
                get {
                    return this.columnКод_клиента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОСТАВ_ГРУППЫRow this[int index] {
                get {
                    return ((СОСТАВ_ГРУППЫRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СОСТАВ_ГРУППЫRowChangeEventHandler СОСТАВ_ГРУППЫRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СОСТАВ_ГРУППЫRowChangeEventHandler СОСТАВ_ГРУППЫRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СОСТАВ_ГРУППЫRowChangeEventHandler СОСТАВ_ГРУППЫRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СОСТАВ_ГРУППЫRowChangeEventHandler СОСТАВ_ГРУППЫRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddСОСТАВ_ГРУППЫRow(СОСТАВ_ГРУППЫRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОСТАВ_ГРУППЫRow AddСОСТАВ_ГРУППЫRow(ГРУППЫRow _parentГРУППЫRowByСОСТАВ_ГРУППЫ_ГРУППЫСОСТАВ_ГРУППЫ, КЛИЕНТЫRow _parentКЛИЕНТЫRowByСОСТАВ_ГРУППЫ_КЛИЕНТЫСОСТАВ_ГРУППЫ) {
                СОСТАВ_ГРУППЫRow rowСОСТАВ_ГРУППЫRow = ((СОСТАВ_ГРУППЫRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((_parentГРУППЫRowByСОСТАВ_ГРУППЫ_ГРУППЫСОСТАВ_ГРУППЫ != null)) {
                    columnValuesArray[0] = _parentГРУППЫRowByСОСТАВ_ГРУППЫ_ГРУППЫСОСТАВ_ГРУППЫ[0];
                }
                if ((_parentКЛИЕНТЫRowByСОСТАВ_ГРУППЫ_КЛИЕНТЫСОСТАВ_ГРУППЫ != null)) {
                    columnValuesArray[1] = _parentКЛИЕНТЫRowByСОСТАВ_ГРУППЫ_КЛИЕНТЫСОСТАВ_ГРУППЫ[0];
                }
                rowСОСТАВ_ГРУППЫRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСОСТАВ_ГРУППЫRow);
                return rowСОСТАВ_ГРУППЫRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОСТАВ_ГРУППЫRow FindByКод_группыКод_клиента(int Код_группы, int Код_клиента) {
                return ((СОСТАВ_ГРУППЫRow)(this.Rows.Find(new object[] {
                            Код_группы,
                            Код_клиента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СОСТАВ_ГРУППЫDataTable cln = ((СОСТАВ_ГРУППЫDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СОСТАВ_ГРУППЫDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_группы = base.Columns["Код_группы"];
                this.columnКод_клиента = base.Columns["Код_клиента"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_группы = new global::System.Data.DataColumn("Код_группы", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_группы);
                this.columnКод_клиента = new global::System.Data.DataColumn("Код_клиента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_клиента);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_группы,
                                this.columnКод_клиента}, true));
                this.columnКод_группы.AllowDBNull = false;
                this.columnКод_клиента.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОСТАВ_ГРУППЫRow NewСОСТАВ_ГРУППЫRow() {
                return ((СОСТАВ_ГРУППЫRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СОСТАВ_ГРУППЫRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СОСТАВ_ГРУППЫRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СОСТАВ_ГРУППЫRowChanged != null)) {
                    this.СОСТАВ_ГРУППЫRowChanged(this, new СОСТАВ_ГРУППЫRowChangeEvent(((СОСТАВ_ГРУППЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СОСТАВ_ГРУППЫRowChanging != null)) {
                    this.СОСТАВ_ГРУППЫRowChanging(this, new СОСТАВ_ГРУППЫRowChangeEvent(((СОСТАВ_ГРУППЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СОСТАВ_ГРУППЫRowDeleted != null)) {
                    this.СОСТАВ_ГРУППЫRowDeleted(this, new СОСТАВ_ГРУППЫRowChangeEvent(((СОСТАВ_ГРУППЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СОСТАВ_ГРУППЫRowDeleting != null)) {
                    this.СОСТАВ_ГРУППЫRowDeleting(this, new СОСТАВ_ГРУППЫRowChangeEvent(((СОСТАВ_ГРУППЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveСОСТАВ_ГРУППЫRow(СОСТАВ_ГРУППЫRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СОСТАВ_ГРУППЫDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СОТРУДНИКИDataTable : global::System.Data.TypedTableBase<СОТРУДНИКИRow> {
            
            private global::System.Data.DataColumn columnКод_сотрудника;
            
            private global::System.Data.DataColumn columnФамилия_сотрудника;
            
            private global::System.Data.DataColumn columnИмя_сотрудника;
            
            private global::System.Data.DataColumn columnОтчество_сотрудника;
            
            private global::System.Data.DataColumn columnДата_рождения;
            
            private global::System.Data.DataColumn columnПол;
            
            private global::System.Data.DataColumn columnТелефон_сотрудника;
            
            private global::System.Data.DataColumn columnКод_студии;
            
            private global::System.Data.DataColumn columnДата_начала_работы_в_компании;
            
            private global::System.Data.DataColumn columnОклад;
            
            private global::System.Data.DataColumn columnДолжность;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИDataTable() {
                this.TableName = "СОТРУДНИКИ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal СОТРУДНИКИDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected СОТРУДНИКИDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_сотрудникаColumn {
                get {
                    return this.columnКод_сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Фамилия_сотрудникаColumn {
                get {
                    return this.columnФамилия_сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Имя_сотрудникаColumn {
                get {
                    return this.columnИмя_сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Отчество_сотрудникаColumn {
                get {
                    return this.columnОтчество_сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_рожденияColumn {
                get {
                    return this.columnДата_рождения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ПолColumn {
                get {
                    return this.columnПол;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Телефон_сотрудникаColumn {
                get {
                    return this.columnТелефон_сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_студииColumn {
                get {
                    return this.columnКод_студии;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_начала_работы_в_компанииColumn {
                get {
                    return this.columnДата_начала_работы_в_компании;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ОкладColumn {
                get {
                    return this.columnОклад;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ДолжностьColumn {
                get {
                    return this.columnДолжность;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИRow this[int index] {
                get {
                    return ((СОТРУДНИКИRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СОТРУДНИКИRowChangeEventHandler СОТРУДНИКИRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СОТРУДНИКИRowChangeEventHandler СОТРУДНИКИRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СОТРУДНИКИRowChangeEventHandler СОТРУДНИКИRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СОТРУДНИКИRowChangeEventHandler СОТРУДНИКИRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddСОТРУДНИКИRow(СОТРУДНИКИRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИRow AddСОТРУДНИКИRow(string Фамилия_сотрудника, string Имя_сотрудника, string Отчество_сотрудника, System.DateTime Дата_рождения, string Пол, string Телефон_сотрудника, СТУДИЯRow _parentСТУДИЯRowByСОТРУДНИКИ_СТУДИЯСОТРУДНИКИ, System.DateTime Дата_начала_работы_в_компании, decimal Оклад, string Должность) {
                СОТРУДНИКИRow rowСОТРУДНИКИRow = ((СОТРУДНИКИRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Фамилия_сотрудника,
                        Имя_сотрудника,
                        Отчество_сотрудника,
                        Дата_рождения,
                        Пол,
                        Телефон_сотрудника,
                        null,
                        Дата_начала_работы_в_компании,
                        Оклад,
                        Должность};
                if ((_parentСТУДИЯRowByСОТРУДНИКИ_СТУДИЯСОТРУДНИКИ != null)) {
                    columnValuesArray[7] = _parentСТУДИЯRowByСОТРУДНИКИ_СТУДИЯСОТРУДНИКИ[0];
                }
                rowСОТРУДНИКИRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСОТРУДНИКИRow);
                return rowСОТРУДНИКИRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИRow FindByКод_сотрудника(int Код_сотрудника) {
                return ((СОТРУДНИКИRow)(this.Rows.Find(new object[] {
                            Код_сотрудника})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СОТРУДНИКИDataTable cln = ((СОТРУДНИКИDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СОТРУДНИКИDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_сотрудника = base.Columns["Код_сотрудника"];
                this.columnФамилия_сотрудника = base.Columns["Фамилия_сотрудника"];
                this.columnИмя_сотрудника = base.Columns["Имя_сотрудника"];
                this.columnОтчество_сотрудника = base.Columns["Отчество_сотрудника"];
                this.columnДата_рождения = base.Columns["Дата_рождения"];
                this.columnПол = base.Columns["Пол"];
                this.columnТелефон_сотрудника = base.Columns["Телефон_сотрудника"];
                this.columnКод_студии = base.Columns["Код_студии"];
                this.columnДата_начала_работы_в_компании = base.Columns["Дата_начала_работы_в_компании"];
                this.columnОклад = base.Columns["Оклад"];
                this.columnДолжность = base.Columns["Должность"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_сотрудника = new global::System.Data.DataColumn("Код_сотрудника", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_сотрудника);
                this.columnФамилия_сотрудника = new global::System.Data.DataColumn("Фамилия_сотрудника", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФамилия_сотрудника);
                this.columnИмя_сотрудника = new global::System.Data.DataColumn("Имя_сотрудника", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИмя_сотрудника);
                this.columnОтчество_сотрудника = new global::System.Data.DataColumn("Отчество_сотрудника", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтчество_сотрудника);
                this.columnДата_рождения = new global::System.Data.DataColumn("Дата_рождения", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_рождения);
                this.columnПол = new global::System.Data.DataColumn("Пол", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПол);
                this.columnТелефон_сотрудника = new global::System.Data.DataColumn("Телефон_сотрудника", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТелефон_сотрудника);
                this.columnКод_студии = new global::System.Data.DataColumn("Код_студии", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_студии);
                this.columnДата_начала_работы_в_компании = new global::System.Data.DataColumn("Дата_начала_работы_в_компании", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_начала_работы_в_компании);
                this.columnОклад = new global::System.Data.DataColumn("Оклад", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОклад);
                this.columnДолжность = new global::System.Data.DataColumn("Должность", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДолжность);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_сотрудника}, true));
                this.columnКод_сотрудника.AutoIncrement = true;
                this.columnКод_сотрудника.AutoIncrementSeed = -1;
                this.columnКод_сотрудника.AutoIncrementStep = -1;
                this.columnКод_сотрудника.AllowDBNull = false;
                this.columnКод_сотрудника.ReadOnly = true;
                this.columnКод_сотрудника.Unique = true;
                this.columnФамилия_сотрудника.AllowDBNull = false;
                this.columnФамилия_сотрудника.MaxLength = 50;
                this.columnИмя_сотрудника.AllowDBNull = false;
                this.columnИмя_сотрудника.MaxLength = 50;
                this.columnОтчество_сотрудника.AllowDBNull = false;
                this.columnОтчество_сотрудника.MaxLength = 50;
                this.columnДата_рождения.AllowDBNull = false;
                this.columnПол.AllowDBNull = false;
                this.columnПол.MaxLength = 50;
                this.columnТелефон_сотрудника.AllowDBNull = false;
                this.columnТелефон_сотрудника.MaxLength = 50;
                this.columnКод_студии.AllowDBNull = false;
                this.columnОклад.AllowDBNull = false;
                this.columnДолжность.AllowDBNull = false;
                this.columnДолжность.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИRow NewСОТРУДНИКИRow() {
                return ((СОТРУДНИКИRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СОТРУДНИКИRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СОТРУДНИКИRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СОТРУДНИКИRowChanged != null)) {
                    this.СОТРУДНИКИRowChanged(this, new СОТРУДНИКИRowChangeEvent(((СОТРУДНИКИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СОТРУДНИКИRowChanging != null)) {
                    this.СОТРУДНИКИRowChanging(this, new СОТРУДНИКИRowChangeEvent(((СОТРУДНИКИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СОТРУДНИКИRowDeleted != null)) {
                    this.СОТРУДНИКИRowDeleted(this, new СОТРУДНИКИRowChangeEvent(((СОТРУДНИКИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СОТРУДНИКИRowDeleting != null)) {
                    this.СОТРУДНИКИRowDeleting(this, new СОТРУДНИКИRowChangeEvent(((СОТРУДНИКИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveСОТРУДНИКИRow(СОТРУДНИКИRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СОТРУДНИКИDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СТУДИЯDataTable : global::System.Data.TypedTableBase<СТУДИЯRow> {
            
            private global::System.Data.DataColumn columnКод_студии;
            
            private global::System.Data.DataColumn columnНазвание_студии;
            
            private global::System.Data.DataColumn columnЮридический_адрес;
            
            private global::System.Data.DataColumn columnФактический_адрес;
            
            private global::System.Data.DataColumn columnТелефон_студии;
            
            private global::System.Data.DataColumn columnЭлектронная_почта;
            
            private global::System.Data.DataColumn columnФамилия_директора;
            
            private global::System.Data.DataColumn columnИмя_директора;
            
            private global::System.Data.DataColumn columnОтчество_директора;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯDataTable() {
                this.TableName = "СТУДИЯ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal СТУДИЯDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected СТУДИЯDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Код_студииColumn {
                get {
                    return this.columnКод_студии;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Название_студииColumn {
                get {
                    return this.columnНазвание_студии;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Юридический_адресColumn {
                get {
                    return this.columnЮридический_адрес;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Фактический_адресColumn {
                get {
                    return this.columnФактический_адрес;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Телефон_студииColumn {
                get {
                    return this.columnТелефон_студии;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Электронная_почтаColumn {
                get {
                    return this.columnЭлектронная_почта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Фамилия_директораColumn {
                get {
                    return this.columnФамилия_директора;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Имя_директораColumn {
                get {
                    return this.columnИмя_директора;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Отчество_директораColumn {
                get {
                    return this.columnОтчество_директора;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯRow this[int index] {
                get {
                    return ((СТУДИЯRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СТУДИЯRowChangeEventHandler СТУДИЯRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СТУДИЯRowChangeEventHandler СТУДИЯRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СТУДИЯRowChangeEventHandler СТУДИЯRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СТУДИЯRowChangeEventHandler СТУДИЯRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddСТУДИЯRow(СТУДИЯRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯRow AddСТУДИЯRow(string Название_студии, string Юридический_адрес, string Фактический_адрес, string Телефон_студии, string Электронная_почта, string Фамилия_директора, string Имя_директора, string Отчество_директора) {
                СТУДИЯRow rowСТУДИЯRow = ((СТУДИЯRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Название_студии,
                        Юридический_адрес,
                        Фактический_адрес,
                        Телефон_студии,
                        Электронная_почта,
                        Фамилия_директора,
                        Имя_директора,
                        Отчество_директора};
                rowСТУДИЯRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСТУДИЯRow);
                return rowСТУДИЯRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯRow FindByКод_студии(int Код_студии) {
                return ((СТУДИЯRow)(this.Rows.Find(new object[] {
                            Код_студии})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СТУДИЯDataTable cln = ((СТУДИЯDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СТУДИЯDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnКод_студии = base.Columns["Код_студии"];
                this.columnНазвание_студии = base.Columns["Название_студии"];
                this.columnЮридический_адрес = base.Columns["Юридический_адрес"];
                this.columnФактический_адрес = base.Columns["Фактический_адрес"];
                this.columnТелефон_студии = base.Columns["Телефон_студии"];
                this.columnЭлектронная_почта = base.Columns["Электронная_почта"];
                this.columnФамилия_директора = base.Columns["Фамилия_директора"];
                this.columnИмя_директора = base.Columns["Имя_директора"];
                this.columnОтчество_директора = base.Columns["Отчество_директора"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnКод_студии = new global::System.Data.DataColumn("Код_студии", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_студии);
                this.columnНазвание_студии = new global::System.Data.DataColumn("Название_студии", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНазвание_студии);
                this.columnЮридический_адрес = new global::System.Data.DataColumn("Юридический_адрес", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЮридический_адрес);
                this.columnФактический_адрес = new global::System.Data.DataColumn("Фактический_адрес", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФактический_адрес);
                this.columnТелефон_студии = new global::System.Data.DataColumn("Телефон_студии", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТелефон_студии);
                this.columnЭлектронная_почта = new global::System.Data.DataColumn("Электронная_почта", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЭлектронная_почта);
                this.columnФамилия_директора = new global::System.Data.DataColumn("Фамилия_директора", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФамилия_директора);
                this.columnИмя_директора = new global::System.Data.DataColumn("Имя_директора", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИмя_директора);
                this.columnОтчество_директора = new global::System.Data.DataColumn("Отчество_директора", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтчество_директора);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_студии}, true));
                this.columnКод_студии.AutoIncrement = true;
                this.columnКод_студии.AutoIncrementSeed = -1;
                this.columnКод_студии.AutoIncrementStep = -1;
                this.columnКод_студии.AllowDBNull = false;
                this.columnКод_студии.ReadOnly = true;
                this.columnКод_студии.Unique = true;
                this.columnНазвание_студии.AllowDBNull = false;
                this.columnНазвание_студии.MaxLength = 50;
                this.columnЮридический_адрес.AllowDBNull = false;
                this.columnЮридический_адрес.MaxLength = 50;
                this.columnФактический_адрес.AllowDBNull = false;
                this.columnФактический_адрес.MaxLength = 50;
                this.columnТелефон_студии.AllowDBNull = false;
                this.columnТелефон_студии.MaxLength = 50;
                this.columnЭлектронная_почта.AllowDBNull = false;
                this.columnЭлектронная_почта.MaxLength = 50;
                this.columnФамилия_директора.AllowDBNull = false;
                this.columnФамилия_директора.MaxLength = 50;
                this.columnИмя_директора.AllowDBNull = false;
                this.columnИмя_директора.MaxLength = 50;
                this.columnОтчество_директора.AllowDBNull = false;
                this.columnОтчество_директора.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯRow NewСТУДИЯRow() {
                return ((СТУДИЯRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СТУДИЯRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СТУДИЯRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СТУДИЯRowChanged != null)) {
                    this.СТУДИЯRowChanged(this, new СТУДИЯRowChangeEvent(((СТУДИЯRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СТУДИЯRowChanging != null)) {
                    this.СТУДИЯRowChanging(this, new СТУДИЯRowChangeEvent(((СТУДИЯRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СТУДИЯRowDeleted != null)) {
                    this.СТУДИЯRowDeleted(this, new СТУДИЯRowChangeEvent(((СТУДИЯRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СТУДИЯRowDeleting != null)) {
                    this.СТУДИЯRowDeleting(this, new СТУДИЯRowChangeEvent(((СТУДИЯRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveСТУДИЯRow(СТУДИЯRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ItogovayaDataSet1 ds = new ItogovayaDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СТУДИЯDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class АБОНЕМЕНТЫRow : global::System.Data.DataRow {
            
            private АБОНЕМЕНТЫDataTable tableАБОНЕМЕНТЫ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal АБОНЕМЕНТЫRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableАБОНЕМЕНТЫ = ((АБОНЕМЕНТЫDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_абонемента {
                get {
                    return ((int)(this[this.tableАБОНЕМЕНТЫ.Код_абонементаColumn]));
                }
                set {
                    this[this.tableАБОНЕМЕНТЫ.Код_абонементаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_клиента {
                get {
                    return ((int)(this[this.tableАБОНЕМЕНТЫ.Код_клиентаColumn]));
                }
                set {
                    this[this.tableАБОНЕМЕНТЫ.Код_клиентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_программы {
                get {
                    return ((int)(this[this.tableАБОНЕМЕНТЫ.Код_программыColumn]));
                }
                set {
                    this[this.tableАБОНЕМЕНТЫ.Код_программыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Количество_занятий_в_абонементе {
                get {
                    return ((int)(this[this.tableАБОНЕМЕНТЫ.Количество_занятий_в_абонементеColumn]));
                }
                set {
                    this[this.tableАБОНЕМЕНТЫ.Количество_занятий_в_абонементеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_начала_абонемента {
                get {
                    return ((global::System.DateTime)(this[this.tableАБОНЕМЕНТЫ.Дата_начала_абонементаColumn]));
                }
                set {
                    this[this.tableАБОНЕМЕНТЫ.Дата_начала_абонементаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_окончания_абонемента {
                get {
                    return ((global::System.DateTime)(this[this.tableАБОНЕМЕНТЫ.Дата_окончания_абонементаColumn]));
                }
                set {
                    this[this.tableАБОНЕМЕНТЫ.Дата_окончания_абонементаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_покупки_абонемента {
                get {
                    return ((global::System.DateTime)(this[this.tableАБОНЕМЕНТЫ.Дата_покупки_абонементаColumn]));
                }
                set {
                    this[this.tableАБОНЕМЕНТЫ.Дата_покупки_абонементаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_оплаты_абонемента {
                get {
                    return ((global::System.DateTime)(this[this.tableАБОНЕМЕНТЫ.Дата_оплаты_абонементаColumn]));
                }
                set {
                    this[this.tableАБОНЕМЕНТЫ.Дата_оплаты_абонементаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Цена_за_занятие {
                get {
                    return ((decimal)(this[this.tableАБОНЕМЕНТЫ.Цена_за_занятиеColumn]));
                }
                set {
                    this[this.tableАБОНЕМЕНТЫ.Цена_за_занятиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_студии {
                get {
                    return ((int)(this[this.tableАБОНЕМЕНТЫ.Код_студииColumn]));
                }
                set {
                    this[this.tableАБОНЕМЕНТЫ.Код_студииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КЛИЕНТЫRow КЛИЕНТЫRow {
                get {
                    return ((КЛИЕНТЫRow)(this.GetParentRow(this.Table.ParentRelations["АБОНЕМЕНТЫ$КЛИЕНТЫАБОНЕМЕНТЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["АБОНЕМЕНТЫ$КЛИЕНТЫАБОНЕМЕНТЫ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОГРАММЫRow ПРОГРАММЫRow {
                get {
                    return ((ПРОГРАММЫRow)(this.GetParentRow(this.Table.ParentRelations["АБОНЕМЕНТЫ$ПРОГРАММЫАБОНЕМЕНТЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["АБОНЕМЕНТЫ$ПРОГРАММЫАБОНЕМЕНТЫ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯRow СТУДИЯRow {
                get {
                    return ((СТУДИЯRow)(this.GetParentRow(this.Table.ParentRelations["АБОНЕМЕНТЫ$СТУДИЯАБОНЕМЕНТЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["АБОНЕМЕНТЫ$СТУДИЯАБОНЕМЕНТЫ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППОВЫЕ_АБОНЕМЕНТЫRow[] GetГРУППОВЫЕ_АБОНЕМЕНТЫRows() {
                if ((this.Table.ChildRelations["ГРУППОВЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫГРУППОВЫЕ АБОНЕМЕНТЫ"] == null)) {
                    return new ГРУППОВЫЕ_АБОНЕМЕНТЫRow[0];
                }
                else {
                    return ((ГРУППОВЫЕ_АБОНЕМЕНТЫRow[])(base.GetChildRows(this.Table.ChildRelations["ГРУППОВЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫГРУППОВЫЕ АБОНЕМЕНТЫ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow[] GetИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRows() {
                if ((this.Table.ChildRelations["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"] == null)) {
                    return new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow[0];
                }
                else {
                    return ((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow[])(base.GetChildRows(this.Table.ChildRelations["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ГРУППОВЫЕ_АБОНЕМЕНТЫRow : global::System.Data.DataRow {
            
            private ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable tableГРУППОВЫЕ_АБОНЕМЕНТЫ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ГРУППОВЫЕ_АБОНЕМЕНТЫRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ = ((ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_абонемента {
                get {
                    return ((int)(this[this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ.Код_абонементаColumn]));
                }
                set {
                    this[this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ.Код_абонементаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_группы {
                get {
                    return ((int)(this[this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ.Код_группыColumn]));
                }
                set {
                    this[this.tableГРУППОВЫЕ_АБОНЕМЕНТЫ.Код_группыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRow АБОНЕМЕНТЫRow {
                get {
                    return ((АБОНЕМЕНТЫRow)(this.GetParentRow(this.Table.ParentRelations["ГРУППОВЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫГРУППОВЫЕ АБОНЕМЕНТЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ГРУППОВЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫГРУППОВЫЕ АБОНЕМЕНТЫ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫRow ГРУППЫRow {
                get {
                    return ((ГРУППЫRow)(this.GetParentRow(this.Table.ParentRelations["ГРУППОВЫЕ АБОНЕМЕНТЫ$ГРУППЫГРУППОВЫЕ АБОНЕМЕНТЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ГРУППОВЫЕ АБОНЕМЕНТЫ$ГРУППЫГРУППОВЫЕ АБОНЕМЕНТЫ"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ГРУППЫRow : global::System.Data.DataRow {
            
            private ГРУППЫDataTable tableГРУППЫ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ГРУППЫRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableГРУППЫ = ((ГРУППЫDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_группы {
                get {
                    return ((int)(this[this.tableГРУППЫ.Код_группыColumn]));
                }
                set {
                    this[this.tableГРУППЫ.Код_группыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_тренера {
                get {
                    return ((int)(this[this.tableГРУППЫ.Код_тренераColumn]));
                }
                set {
                    this[this.tableГРУППЫ.Код_тренераColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_студии {
                get {
                    return ((int)(this[this.tableГРУППЫ.Код_студииColumn]));
                }
                set {
                    this[this.tableГРУППЫ.Код_студииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИRow СОТРУДНИКИRow {
                get {
                    return ((СОТРУДНИКИRow)(this.GetParentRow(this.Table.ParentRelations["ГРУППЫ$СОТРУДНИКИГРУППЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ГРУППЫ$СОТРУДНИКИГРУППЫ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯRow СТУДИЯRow {
                get {
                    return ((СТУДИЯRow)(this.GetParentRow(this.Table.ParentRelations["ГРУППЫ$СТУДИЯГРУППЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ГРУППЫ$СТУДИЯГРУППЫ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППОВЫЕ_АБОНЕМЕНТЫRow[] GetГРУППОВЫЕ_АБОНЕМЕНТЫRows() {
                if ((this.Table.ChildRelations["ГРУППОВЫЕ АБОНЕМЕНТЫ$ГРУППЫГРУППОВЫЕ АБОНЕМЕНТЫ"] == null)) {
                    return new ГРУППОВЫЕ_АБОНЕМЕНТЫRow[0];
                }
                else {
                    return ((ГРУППОВЫЕ_АБОНЕМЕНТЫRow[])(base.GetChildRows(this.Table.ChildRelations["ГРУППОВЫЕ АБОНЕМЕНТЫ$ГРУППЫГРУППОВЫЕ АБОНЕМЕНТЫ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОСТАВ_ГРУППЫRow[] GetСОСТАВ_ГРУППЫRows() {
                if ((this.Table.ChildRelations["СОСТАВ ГРУППЫ$ГРУППЫСОСТАВ ГРУППЫ"] == null)) {
                    return new СОСТАВ_ГРУППЫRow[0];
                }
                else {
                    return ((СОСТАВ_ГРУППЫRow[])(base.GetChildRows(this.Table.ChildRelations["СОСТАВ ГРУППЫ$ГРУППЫСОСТАВ ГРУППЫ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ИНВЕНТАРЬRow : global::System.Data.DataRow {
            
            private ИНВЕНТАРЬDataTable tableИНВЕНТАРЬ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ИНВЕНТАРЬRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableИНВЕНТАРЬ = ((ИНВЕНТАРЬDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_поставки {
                get {
                    return ((int)(this[this.tableИНВЕНТАРЬ.Код_поставкиColumn]));
                }
                set {
                    this[this.tableИНВЕНТАРЬ.Код_поставкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_инвентаря {
                get {
                    return ((int)(this[this.tableИНВЕНТАРЬ.Код_инвентаряColumn]));
                }
                set {
                    this[this.tableИНВЕНТАРЬ.Код_инвентаряColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableИНВЕНТАРЬ.НаименованиеColumn]));
                }
                set {
                    this[this.tableИНВЕНТАРЬ.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Вид_инвентаря {
                get {
                    return ((string)(this[this.tableИНВЕНТАРЬ.Вид_инвентаряColumn]));
                }
                set {
                    this[this.tableИНВЕНТАРЬ.Вид_инвентаряColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Срок_годности {
                get {
                    return ((global::System.DateTime)(this[this.tableИНВЕНТАРЬ.Срок_годностиColumn]));
                }
                set {
                    this[this.tableИНВЕНТАРЬ.Срок_годностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableИНВЕНТАРЬ.КоличествоColumn]));
                }
                set {
                    this[this.tableИНВЕНТАРЬ.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Цена_за_единицу {
                get {
                    return ((decimal)(this[this.tableИНВЕНТАРЬ.Цена_за_единицуColumn]));
                }
                set {
                    this[this.tableИНВЕНТАРЬ.Цена_за_единицуColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВКАRow ПОСТАВКАRow {
                get {
                    return ((ПОСТАВКАRow)(this.GetParentRow(this.Table.ParentRelations["ИНВЕНТАРЬ$ПОСТАВКАИНВЕНТАРЬ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ИНВЕНТАРЬ$ПОСТАВКАИНВЕНТАРЬ"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow : global::System.Data.DataRow {
            
            private ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ = ((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_абонемента {
                get {
                    return ((int)(this[this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Код_абонементаColumn]));
                }
                set {
                    this[this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Код_абонементаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_тренера {
                get {
                    return ((int)(this[this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Код_тренераColumn]));
                }
                set {
                    this[this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Код_тренераColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_клиента {
                get {
                    return ((int)(this[this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Код_клиентаColumn]));
                }
                set {
                    this[this.tableИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Код_клиентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRow АБОНЕМЕНТЫRow {
                get {
                    return ((АБОНЕМЕНТЫRow)(this.GetParentRow(this.Table.ParentRelations["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$АБОНЕМЕНТЫИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИRow СОТРУДНИКИRow {
                get {
                    return ((СОТРУДНИКИRow)(this.GetParentRow(this.Table.ParentRelations["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$СОТРУДНИКИИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$СОТРУДНИКИИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class КЛИЕНТЫRow : global::System.Data.DataRow {
            
            private КЛИЕНТЫDataTable tableКЛИЕНТЫ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal КЛИЕНТЫRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКЛИЕНТЫ = ((КЛИЕНТЫDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_клиента {
                get {
                    return ((int)(this[this.tableКЛИЕНТЫ.Код_клиентаColumn]));
                }
                set {
                    this[this.tableКЛИЕНТЫ.Код_клиентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Фамилия_клиента {
                get {
                    return ((string)(this[this.tableКЛИЕНТЫ.Фамилия_клиентаColumn]));
                }
                set {
                    this[this.tableКЛИЕНТЫ.Фамилия_клиентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Имя_клиента {
                get {
                    return ((string)(this[this.tableКЛИЕНТЫ.Имя_клиентаColumn]));
                }
                set {
                    this[this.tableКЛИЕНТЫ.Имя_клиентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Отчество_клиента {
                get {
                    return ((string)(this[this.tableКЛИЕНТЫ.Отчество_клиентаColumn]));
                }
                set {
                    this[this.tableКЛИЕНТЫ.Отчество_клиентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_рождения {
                get {
                    return ((global::System.DateTime)(this[this.tableКЛИЕНТЫ.Дата_рожденияColumn]));
                }
                set {
                    this[this.tableКЛИЕНТЫ.Дата_рожденияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Фактический_адрес {
                get {
                    return ((string)(this[this.tableКЛИЕНТЫ.Фактический_адресColumn]));
                }
                set {
                    this[this.tableКЛИЕНТЫ.Фактический_адресColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Телефон_клиента {
                get {
                    return ((string)(this[this.tableКЛИЕНТЫ.Телефон_клиентаColumn]));
                }
                set {
                    this[this.tableКЛИЕНТЫ.Телефон_клиентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Электронная_почта {
                get {
                    return ((string)(this[this.tableКЛИЕНТЫ.Электронная_почтаColumn]));
                }
                set {
                    this[this.tableКЛИЕНТЫ.Электронная_почтаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRow[] GetАБОНЕМЕНТЫRows() {
                if ((this.Table.ChildRelations["АБОНЕМЕНТЫ$КЛИЕНТЫАБОНЕМЕНТЫ"] == null)) {
                    return new АБОНЕМЕНТЫRow[0];
                }
                else {
                    return ((АБОНЕМЕНТЫRow[])(base.GetChildRows(this.Table.ChildRelations["АБОНЕМЕНТЫ$КЛИЕНТЫАБОНЕМЕНТЫ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕ_ИНДИВИДRow[] GetРАСПИСАНИЕ_ИНДИВИДRows() {
                if ((this.Table.ChildRelations["РАСПИСАНИЕ ИНДИВИД$КЛИЕНТЫРАСПИСАНИЕ ИНДИВИД"] == null)) {
                    return new РАСПИСАНИЕ_ИНДИВИДRow[0];
                }
                else {
                    return ((РАСПИСАНИЕ_ИНДИВИДRow[])(base.GetChildRows(this.Table.ChildRelations["РАСПИСАНИЕ ИНДИВИД$КЛИЕНТЫРАСПИСАНИЕ ИНДИВИД"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОСТАВ_ГРУППЫRow[] GetСОСТАВ_ГРУППЫRows() {
                if ((this.Table.ChildRelations["СОСТАВ ГРУППЫ$КЛИЕНТЫСОСТАВ ГРУППЫ"] == null)) {
                    return new СОСТАВ_ГРУППЫRow[0];
                }
                else {
                    return ((СОСТАВ_ГРУППЫRow[])(base.GetChildRows(this.Table.ChildRelations["СОСТАВ ГРУППЫ$КЛИЕНТЫСОСТАВ ГРУППЫ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПОСТАВКАRow : global::System.Data.DataRow {
            
            private ПОСТАВКАDataTable tableПОСТАВКА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПОСТАВКАRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПОСТАВКА = ((ПОСТАВКАDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_поставки {
                get {
                    return ((int)(this[this.tableПОСТАВКА.Код_поставкиColumn]));
                }
                set {
                    this[this.tableПОСТАВКА.Код_поставкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_заявки {
                get {
                    return ((global::System.DateTime)(this[this.tableПОСТАВКА.Дата_заявкиColumn]));
                }
                set {
                    this[this.tableПОСТАВКА.Дата_заявкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_поставки {
                get {
                    return ((global::System.DateTime)(this[this.tableПОСТАВКА.Дата_поставкиColumn]));
                }
                set {
                    this[this.tableПОСТАВКА.Дата_поставкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_студии {
                get {
                    return ((int)(this[this.tableПОСТАВКА.Код_студииColumn]));
                }
                set {
                    this[this.tableПОСТАВКА.Код_студииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_поставщика {
                get {
                    return ((int)(this[this.tableПОСТАВКА.Код_поставщикаColumn]));
                }
                set {
                    this[this.tableПОСТАВКА.Код_поставщикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВЩИКRow ПОСТАВЩИКRow {
                get {
                    return ((ПОСТАВЩИКRow)(this.GetParentRow(this.Table.ParentRelations["ПОСТАВКА$ПОСТАВЩИКПОСТАВКА"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ПОСТАВКА$ПОСТАВЩИКПОСТАВКА"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯRow СТУДИЯRow {
                get {
                    return ((СТУДИЯRow)(this.GetParentRow(this.Table.ParentRelations["ПОСТАВКА$СТУДИЯПОСТАВКА"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ПОСТАВКА$СТУДИЯПОСТАВКА"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНВЕНТАРЬRow[] GetИНВЕНТАРЬRows() {
                if ((this.Table.ChildRelations["ИНВЕНТАРЬ$ПОСТАВКАИНВЕНТАРЬ"] == null)) {
                    return new ИНВЕНТАРЬRow[0];
                }
                else {
                    return ((ИНВЕНТАРЬRow[])(base.GetChildRows(this.Table.ChildRelations["ИНВЕНТАРЬ$ПОСТАВКАИНВЕНТАРЬ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПОСТАВЩИКRow : global::System.Data.DataRow {
            
            private ПОСТАВЩИКDataTable tableПОСТАВЩИК;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПОСТАВЩИКRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПОСТАВЩИК = ((ПОСТАВЩИКDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_поставщика {
                get {
                    return ((int)(this[this.tableПОСТАВЩИК.Код_поставщикаColumn]));
                }
                set {
                    this[this.tableПОСТАВЩИК.Код_поставщикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Название_поставщика {
                get {
                    return ((string)(this[this.tableПОСТАВЩИК.Название_поставщикаColumn]));
                }
                set {
                    this[this.tableПОСТАВЩИК.Название_поставщикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Телефон_поставщика {
                get {
                    return ((string)(this[this.tableПОСТАВЩИК.Телефон_поставщикаColumn]));
                }
                set {
                    this[this.tableПОСТАВЩИК.Телефон_поставщикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Адрес_поставщика {
                get {
                    return ((string)(this[this.tableПОСТАВЩИК.Адрес_поставщикаColumn]));
                }
                set {
                    this[this.tableПОСТАВЩИК.Адрес_поставщикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВКАRow[] GetПОСТАВКАRows() {
                if ((this.Table.ChildRelations["ПОСТАВКА$ПОСТАВЩИКПОСТАВКА"] == null)) {
                    return new ПОСТАВКАRow[0];
                }
                else {
                    return ((ПОСТАВКАRow[])(base.GetChildRows(this.Table.ChildRelations["ПОСТАВКА$ПОСТАВЩИКПОСТАВКА"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПРОГРАММЫRow : global::System.Data.DataRow {
            
            private ПРОГРАММЫDataTable tableПРОГРАММЫ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПРОГРАММЫRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПРОГРАММЫ = ((ПРОГРАММЫDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_программы {
                get {
                    return ((int)(this[this.tableПРОГРАММЫ.Код_программыColumn]));
                }
                set {
                    this[this.tableПРОГРАММЫ.Код_программыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Название_программы {
                get {
                    return ((string)(this[this.tableПРОГРАММЫ.Название_программыColumn]));
                }
                set {
                    this[this.tableПРОГРАММЫ.Название_программыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRow[] GetАБОНЕМЕНТЫRows() {
                if ((this.Table.ChildRelations["АБОНЕМЕНТЫ$ПРОГРАММЫАБОНЕМЕНТЫ"] == null)) {
                    return new АБОНЕМЕНТЫRow[0];
                }
                else {
                    return ((АБОНЕМЕНТЫRow[])(base.GetChildRows(this.Table.ChildRelations["АБОНЕМЕНТЫ$ПРОГРАММЫАБОНЕМЕНТЫ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕ_ИНДИВИДRow[] GetРАСПИСАНИЕ_ИНДИВИДRows() {
                if ((this.Table.ChildRelations["РАСПИСАНИЕ ИНДИВИД$ПРОГРАММЫРАСПИСАНИЕ ИНДИВИД"] == null)) {
                    return new РАСПИСАНИЕ_ИНДИВИДRow[0];
                }
                else {
                    return ((РАСПИСАНИЕ_ИНДИВИДRow[])(base.GetChildRows(this.Table.ChildRelations["РАСПИСАНИЕ ИНДИВИД$ПРОГРАММЫРАСПИСАНИЕ ИНДИВИД"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class РАСПИСАНИЕRow : global::System.Data.DataRow {
            
            private РАСПИСАНИЕDataTable tableРАСПИСАНИЕ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal РАСПИСАНИЕRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableРАСПИСАНИЕ = ((РАСПИСАНИЕDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_расписания {
                get {
                    return ((int)(this[this.tableРАСПИСАНИЕ.Код_расписанияColumn]));
                }
                set {
                    this[this.tableРАСПИСАНИЕ.Код_расписанияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Программы {
                get {
                    return ((int)(this[this.tableРАСПИСАНИЕ.ПрограммыColumn]));
                }
                set {
                    this[this.tableРАСПИСАНИЕ.ПрограммыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_группы {
                get {
                    return ((int)(this[this.tableРАСПИСАНИЕ.Код_группыColumn]));
                }
                set {
                    this[this.tableРАСПИСАНИЕ.Код_группыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime _Дата_время {
                get {
                    return ((global::System.DateTime)(this[this.tableРАСПИСАНИЕ._Дата_времяColumn]));
                }
                set {
                    this[this.tableРАСПИСАНИЕ._Дата_времяColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class РАСПИСАНИЕ_ИНДИВИДRow : global::System.Data.DataRow {
            
            private РАСПИСАНИЕ_ИНДИВИДDataTable tableРАСПИСАНИЕ_ИНДИВИД;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal РАСПИСАНИЕ_ИНДИВИДRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableРАСПИСАНИЕ_ИНДИВИД = ((РАСПИСАНИЕ_ИНДИВИДDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_инд_расписания {
                get {
                    return ((int)(this[this.tableРАСПИСАНИЕ_ИНДИВИД.Код_инд_расписанияColumn]));
                }
                set {
                    this[this.tableРАСПИСАНИЕ_ИНДИВИД.Код_инд_расписанияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Программы {
                get {
                    return ((int)(this[this.tableРАСПИСАНИЕ_ИНДИВИД.ПрограммыColumn]));
                }
                set {
                    this[this.tableРАСПИСАНИЕ_ИНДИВИД.ПрограммыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime _Дата_время {
                get {
                    return ((global::System.DateTime)(this[this.tableРАСПИСАНИЕ_ИНДИВИД._Дата_времяColumn]));
                }
                set {
                    this[this.tableРАСПИСАНИЕ_ИНДИВИД._Дата_времяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_клиента {
                get {
                    try {
                        return ((int)(this[this.tableРАСПИСАНИЕ_ИНДИВИД.Код_клиентаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Код_клиента\' in table \'РАСПИСАНИЕ ИНДИВИД\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableРАСПИСАНИЕ_ИНДИВИД.Код_клиентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_тренера {
                get {
                    return ((int)(this[this.tableРАСПИСАНИЕ_ИНДИВИД.Код_тренераColumn]));
                }
                set {
                    this[this.tableРАСПИСАНИЕ_ИНДИВИД.Код_тренераColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КЛИЕНТЫRow КЛИЕНТЫRow {
                get {
                    return ((КЛИЕНТЫRow)(this.GetParentRow(this.Table.ParentRelations["РАСПИСАНИЕ ИНДИВИД$КЛИЕНТЫРАСПИСАНИЕ ИНДИВИД"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["РАСПИСАНИЕ ИНДИВИД$КЛИЕНТЫРАСПИСАНИЕ ИНДИВИД"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОГРАММЫRow ПРОГРАММЫRow {
                get {
                    return ((ПРОГРАММЫRow)(this.GetParentRow(this.Table.ParentRelations["РАСПИСАНИЕ ИНДИВИД$ПРОГРАММЫРАСПИСАНИЕ ИНДИВИД"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["РАСПИСАНИЕ ИНДИВИД$ПРОГРАММЫРАСПИСАНИЕ ИНДИВИД"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИRow СОТРУДНИКИRow {
                get {
                    return ((СОТРУДНИКИRow)(this.GetParentRow(this.Table.ParentRelations["РАСПИСАНИЕ ИНДИВИД$СОТРУДНИКИРАСПИСАНИЕ ИНДИВИД"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["РАСПИСАНИЕ ИНДИВИД$СОТРУДНИКИРАСПИСАНИЕ ИНДИВИД"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsКод_клиентаNull() {
                return this.IsNull(this.tableРАСПИСАНИЕ_ИНДИВИД.Код_клиентаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetКод_клиентаNull() {
                this[this.tableРАСПИСАНИЕ_ИНДИВИД.Код_клиентаColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СОСТАВ_ГРУППЫRow : global::System.Data.DataRow {
            
            private СОСТАВ_ГРУППЫDataTable tableСОСТАВ_ГРУППЫ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal СОСТАВ_ГРУППЫRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСОСТАВ_ГРУППЫ = ((СОСТАВ_ГРУППЫDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_группы {
                get {
                    return ((int)(this[this.tableСОСТАВ_ГРУППЫ.Код_группыColumn]));
                }
                set {
                    this[this.tableСОСТАВ_ГРУППЫ.Код_группыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_клиента {
                get {
                    return ((int)(this[this.tableСОСТАВ_ГРУППЫ.Код_клиентаColumn]));
                }
                set {
                    this[this.tableСОСТАВ_ГРУППЫ.Код_клиентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫRow ГРУППЫRow {
                get {
                    return ((ГРУППЫRow)(this.GetParentRow(this.Table.ParentRelations["СОСТАВ ГРУППЫ$ГРУППЫСОСТАВ ГРУППЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["СОСТАВ ГРУППЫ$ГРУППЫСОСТАВ ГРУППЫ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КЛИЕНТЫRow КЛИЕНТЫRow {
                get {
                    return ((КЛИЕНТЫRow)(this.GetParentRow(this.Table.ParentRelations["СОСТАВ ГРУППЫ$КЛИЕНТЫСОСТАВ ГРУППЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["СОСТАВ ГРУППЫ$КЛИЕНТЫСОСТАВ ГРУППЫ"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СОТРУДНИКИRow : global::System.Data.DataRow {
            
            private СОТРУДНИКИDataTable tableСОТРУДНИКИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal СОТРУДНИКИRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСОТРУДНИКИ = ((СОТРУДНИКИDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_сотрудника {
                get {
                    return ((int)(this[this.tableСОТРУДНИКИ.Код_сотрудникаColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.Код_сотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Фамилия_сотрудника {
                get {
                    return ((string)(this[this.tableСОТРУДНИКИ.Фамилия_сотрудникаColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.Фамилия_сотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Имя_сотрудника {
                get {
                    return ((string)(this[this.tableСОТРУДНИКИ.Имя_сотрудникаColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.Имя_сотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Отчество_сотрудника {
                get {
                    return ((string)(this[this.tableСОТРУДНИКИ.Отчество_сотрудникаColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.Отчество_сотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_рождения {
                get {
                    return ((global::System.DateTime)(this[this.tableСОТРУДНИКИ.Дата_рожденияColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.Дата_рожденияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Пол {
                get {
                    return ((string)(this[this.tableСОТРУДНИКИ.ПолColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.ПолColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Телефон_сотрудника {
                get {
                    return ((string)(this[this.tableСОТРУДНИКИ.Телефон_сотрудникаColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.Телефон_сотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_студии {
                get {
                    return ((int)(this[this.tableСОТРУДНИКИ.Код_студииColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.Код_студииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_начала_работы_в_компании {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableСОТРУДНИКИ.Дата_начала_работы_в_компанииColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Дата_начала_работы_в_компании\' in table \'СОТРУДНИКИ\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.Дата_начала_работы_в_компанииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Оклад {
                get {
                    return ((decimal)(this[this.tableСОТРУДНИКИ.ОкладColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.ОкладColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Должность {
                get {
                    return ((string)(this[this.tableСОТРУДНИКИ.ДолжностьColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.ДолжностьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯRow СТУДИЯRow {
                get {
                    return ((СТУДИЯRow)(this.GetParentRow(this.Table.ParentRelations["СОТРУДНИКИ$СТУДИЯСОТРУДНИКИ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["СОТРУДНИКИ$СТУДИЯСОТРУДНИКИ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsДата_начала_работы_в_компанииNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.Дата_начала_работы_в_компанииColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetДата_начала_работы_в_компанииNull() {
                this[this.tableСОТРУДНИКИ.Дата_начала_работы_в_компанииColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫRow[] GetГРУППЫRows() {
                if ((this.Table.ChildRelations["ГРУППЫ$СОТРУДНИКИГРУППЫ"] == null)) {
                    return new ГРУППЫRow[0];
                }
                else {
                    return ((ГРУППЫRow[])(base.GetChildRows(this.Table.ChildRelations["ГРУППЫ$СОТРУДНИКИГРУППЫ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow[] GetИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRows() {
                if ((this.Table.ChildRelations["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$СОТРУДНИКИИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"] == null)) {
                    return new ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow[0];
                }
                else {
                    return ((ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow[])(base.GetChildRows(this.Table.ChildRelations["ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ$СОТРУДНИКИИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕ_ИНДИВИДRow[] GetРАСПИСАНИЕ_ИНДИВИДRows() {
                if ((this.Table.ChildRelations["РАСПИСАНИЕ ИНДИВИД$СОТРУДНИКИРАСПИСАНИЕ ИНДИВИД"] == null)) {
                    return new РАСПИСАНИЕ_ИНДИВИДRow[0];
                }
                else {
                    return ((РАСПИСАНИЕ_ИНДИВИДRow[])(base.GetChildRows(this.Table.ChildRelations["РАСПИСАНИЕ ИНДИВИД$СОТРУДНИКИРАСПИСАНИЕ ИНДИВИД"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СТУДИЯRow : global::System.Data.DataRow {
            
            private СТУДИЯDataTable tableСТУДИЯ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal СТУДИЯRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСТУДИЯ = ((СТУДИЯDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Код_студии {
                get {
                    return ((int)(this[this.tableСТУДИЯ.Код_студииColumn]));
                }
                set {
                    this[this.tableСТУДИЯ.Код_студииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Название_студии {
                get {
                    return ((string)(this[this.tableСТУДИЯ.Название_студииColumn]));
                }
                set {
                    this[this.tableСТУДИЯ.Название_студииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Юридический_адрес {
                get {
                    return ((string)(this[this.tableСТУДИЯ.Юридический_адресColumn]));
                }
                set {
                    this[this.tableСТУДИЯ.Юридический_адресColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Фактический_адрес {
                get {
                    return ((string)(this[this.tableСТУДИЯ.Фактический_адресColumn]));
                }
                set {
                    this[this.tableСТУДИЯ.Фактический_адресColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Телефон_студии {
                get {
                    return ((string)(this[this.tableСТУДИЯ.Телефон_студииColumn]));
                }
                set {
                    this[this.tableСТУДИЯ.Телефон_студииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Электронная_почта {
                get {
                    return ((string)(this[this.tableСТУДИЯ.Электронная_почтаColumn]));
                }
                set {
                    this[this.tableСТУДИЯ.Электронная_почтаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Фамилия_директора {
                get {
                    return ((string)(this[this.tableСТУДИЯ.Фамилия_директораColumn]));
                }
                set {
                    this[this.tableСТУДИЯ.Фамилия_директораColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Имя_директора {
                get {
                    return ((string)(this[this.tableСТУДИЯ.Имя_директораColumn]));
                }
                set {
                    this[this.tableСТУДИЯ.Имя_директораColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Отчество_директора {
                get {
                    return ((string)(this[this.tableСТУДИЯ.Отчество_директораColumn]));
                }
                set {
                    this[this.tableСТУДИЯ.Отчество_директораColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRow[] GetАБОНЕМЕНТЫRows() {
                if ((this.Table.ChildRelations["АБОНЕМЕНТЫ$СТУДИЯАБОНЕМЕНТЫ"] == null)) {
                    return new АБОНЕМЕНТЫRow[0];
                }
                else {
                    return ((АБОНЕМЕНТЫRow[])(base.GetChildRows(this.Table.ChildRelations["АБОНЕМЕНТЫ$СТУДИЯАБОНЕМЕНТЫ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫRow[] GetГРУППЫRows() {
                if ((this.Table.ChildRelations["ГРУППЫ$СТУДИЯГРУППЫ"] == null)) {
                    return new ГРУППЫRow[0];
                }
                else {
                    return ((ГРУППЫRow[])(base.GetChildRows(this.Table.ChildRelations["ГРУППЫ$СТУДИЯГРУППЫ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВКАRow[] GetПОСТАВКАRows() {
                if ((this.Table.ChildRelations["ПОСТАВКА$СТУДИЯПОСТАВКА"] == null)) {
                    return new ПОСТАВКАRow[0];
                }
                else {
                    return ((ПОСТАВКАRow[])(base.GetChildRows(this.Table.ChildRelations["ПОСТАВКА$СТУДИЯПОСТАВКА"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИRow[] GetСОТРУДНИКИRows() {
                if ((this.Table.ChildRelations["СОТРУДНИКИ$СТУДИЯСОТРУДНИКИ"] == null)) {
                    return new СОТРУДНИКИRow[0];
                }
                else {
                    return ((СОТРУДНИКИRow[])(base.GetChildRows(this.Table.ChildRelations["СОТРУДНИКИ$СТУДИЯСОТРУДНИКИ"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class АБОНЕМЕНТЫRowChangeEvent : global::System.EventArgs {
            
            private АБОНЕМЕНТЫRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRowChangeEvent(АБОНЕМЕНТЫRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АБОНЕМЕНТЫRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEvent : global::System.EventArgs {
            
            private ГРУППОВЫЕ_АБОНЕМЕНТЫRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППОВЫЕ_АБОНЕМЕНТЫRowChangeEvent(ГРУППОВЫЕ_АБОНЕМЕНТЫRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППОВЫЕ_АБОНЕМЕНТЫRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ГРУППЫRowChangeEvent : global::System.EventArgs {
            
            private ГРУППЫRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫRowChangeEvent(ГРУППЫRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ГРУППЫRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ИНВЕНТАРЬRowChangeEvent : global::System.EventArgs {
            
            private ИНВЕНТАРЬRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНВЕНТАРЬRowChangeEvent(ИНВЕНТАРЬRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНВЕНТАРЬRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEvent : global::System.EventArgs {
            
            private ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRowChangeEvent(ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class КЛИЕНТЫRowChangeEvent : global::System.EventArgs {
            
            private КЛИЕНТЫRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КЛИЕНТЫRowChangeEvent(КЛИЕНТЫRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КЛИЕНТЫRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ПОСТАВКАRowChangeEvent : global::System.EventArgs {
            
            private ПОСТАВКАRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВКАRowChangeEvent(ПОСТАВКАRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВКАRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ПОСТАВЩИКRowChangeEvent : global::System.EventArgs {
            
            private ПОСТАВЩИКRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВЩИКRowChangeEvent(ПОСТАВЩИКRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОСТАВЩИКRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ПРОГРАММЫRowChangeEvent : global::System.EventArgs {
            
            private ПРОГРАММЫRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОГРАММЫRowChangeEvent(ПРОГРАММЫRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОГРАММЫRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class РАСПИСАНИЕRowChangeEvent : global::System.EventArgs {
            
            private РАСПИСАНИЕRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕRowChangeEvent(РАСПИСАНИЕRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class РАСПИСАНИЕ_ИНДИВИДRowChangeEvent : global::System.EventArgs {
            
            private РАСПИСАНИЕ_ИНДИВИДRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕ_ИНДИВИДRowChangeEvent(РАСПИСАНИЕ_ИНДИВИДRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РАСПИСАНИЕ_ИНДИВИДRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class СОСТАВ_ГРУППЫRowChangeEvent : global::System.EventArgs {
            
            private СОСТАВ_ГРУППЫRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОСТАВ_ГРУППЫRowChangeEvent(СОСТАВ_ГРУППЫRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОСТАВ_ГРУППЫRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class СОТРУДНИКИRowChangeEvent : global::System.EventArgs {
            
            private СОТРУДНИКИRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИRowChangeEvent(СОТРУДНИКИRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СОТРУДНИКИRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class СТУДИЯRowChangeEvent : global::System.EventArgs {
            
            private СТУДИЯRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯRowChangeEvent(СТУДИЯRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СТУДИЯRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace NEfotobudka_githubik.ItogovayaDataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class АБОНЕМЕНТЫTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public АБОНЕМЕНТЫTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "АБОНЕМЕНТЫ";
            tableMapping.ColumnMappings.Add("Код_абонемента", "Код_абонемента");
            tableMapping.ColumnMappings.Add("Код_клиента", "Код_клиента");
            tableMapping.ColumnMappings.Add("Код_программы", "Код_программы");
            tableMapping.ColumnMappings.Add("Количество_занятий_в_абонементе", "Количество_занятий_в_абонементе");
            tableMapping.ColumnMappings.Add("Дата_начала_абонемента", "Дата_начала_абонемента");
            tableMapping.ColumnMappings.Add("Дата_окончания_абонемента", "Дата_окончания_абонемента");
            tableMapping.ColumnMappings.Add("Дата_покупки_абонемента", "Дата_покупки_абонемента");
            tableMapping.ColumnMappings.Add("Дата_оплаты_абонемента", "Дата_оплаты_абонемента");
            tableMapping.ColumnMappings.Add("Цена_за_занятие", "Цена_за_занятие");
            tableMapping.ColumnMappings.Add("Код_студии", "Код_студии");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[АБОНЕМЕНТЫ] WHERE (([Код_абонемента] = @Original_Код_абонемента) AND ([Код_клиента] = @Original_Код_клиента) AND ([Код_программы] = @Original_Код_программы) AND ([Количество_занятий_в_абонементе] = @Original_Количество_занятий_в_абонементе) AND ([Дата_начала_абонемента] = @Original_Дата_начала_абонемента) AND ([Дата_окончания_абонемента] = @Original_Дата_окончания_абонемента) AND ([Дата_покупки_абонемента] = @Original_Дата_покупки_абонемента) AND ([Дата_оплаты_абонемента] = @Original_Дата_оплаты_абонемента) AND ([Цена_за_занятие] = @Original_Цена_за_занятие) AND ([Код_студии] = @Original_Код_студии))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_абонемента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_программы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_занятий_в_абонементе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_занятий_в_абонементе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_начала_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_начала_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_окончания_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_окончания_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_покупки_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_покупки_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_оплаты_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_оплаты_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена_за_занятие", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена_за_занятие", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[АБОНЕМЕНТЫ] ([Код_клиента], [Код_программы], [Количество_занятий_в_абонементе], [Дата_начала_абонемента], [Дата_окончания_абонемента], [Дата_покупки_абонемента], [Дата_оплаты_абонемента], [Цена_за_занятие], [Код_студии]) VALUES (@Код_клиента, @Код_программы, @Количество_занятий_в_абонементе, @Дата_начала_абонемента, @Дата_окончания_абонемента, @Дата_покупки_абонемента, @Дата_оплаты_абонемента, @Цена_за_занятие, @Код_студии);
SELECT Код_абонемента, Код_клиента, Код_программы, Количество_занятий_в_абонементе, Дата_начала_абонемента, Дата_окончания_абонемента, Дата_покупки_абонемента, Дата_оплаты_абонемента, Цена_за_занятие, Код_студии FROM АБОНЕМЕНТЫ WHERE (Код_абонемента = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_программы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_занятий_в_абонементе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_занятий_в_абонементе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_начала_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_начала_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_окончания_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_окончания_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_покупки_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_покупки_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_оплаты_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_оплаты_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена_за_занятие", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена_за_занятие", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[АБОНЕМЕНТЫ] SET [Код_клиента] = @Код_клиента, [Код_программы] = @Код_программы, [Количество_занятий_в_абонементе] = @Количество_занятий_в_абонементе, [Дата_начала_абонемента] = @Дата_начала_абонемента, [Дата_окончания_абонемента] = @Дата_окончания_абонемента, [Дата_покупки_абонемента] = @Дата_покупки_абонемента, [Дата_оплаты_абонемента] = @Дата_оплаты_абонемента, [Цена_за_занятие] = @Цена_за_занятие, [Код_студии] = @Код_студии WHERE (([Код_абонемента] = @Original_Код_абонемента) AND ([Код_клиента] = @Original_Код_клиента) AND ([Код_программы] = @Original_Код_программы) AND ([Количество_занятий_в_абонементе] = @Original_Количество_занятий_в_абонементе) AND ([Дата_начала_абонемента] = @Original_Дата_начала_абонемента) AND ([Дата_окончания_абонемента] = @Original_Дата_окончания_абонемента) AND ([Дата_покупки_абонемента] = @Original_Дата_покупки_абонемента) AND ([Дата_оплаты_абонемента] = @Original_Дата_оплаты_абонемента) AND ([Цена_за_занятие] = @Original_Цена_за_занятие) AND ([Код_студии] = @Original_Код_студии));
SELECT Код_абонемента, Код_клиента, Код_программы, Количество_занятий_в_абонементе, Дата_начала_абонемента, Дата_окончания_абонемента, Дата_покупки_абонемента, Дата_оплаты_абонемента, Цена_за_занятие, Код_студии FROM АБОНЕМЕНТЫ WHERE (Код_абонемента = @Код_абонемента)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_программы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_занятий_в_абонементе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_занятий_в_абонементе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_начала_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_начала_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_окончания_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_окончания_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_покупки_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_покупки_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_оплаты_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_оплаты_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена_за_занятие", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена_за_занятие", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_абонемента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_программы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_занятий_в_абонементе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_занятий_в_абонементе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_начала_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_начала_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_окончания_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_окончания_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_покупки_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_покупки_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_оплаты_абонемента", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_оплаты_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена_за_занятие", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена_за_занятие", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_абонемента", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_абонемента, Код_клиента, Код_программы, Количество_занятий_в_абонемент" +
                "е, Дата_начала_абонемента, Дата_окончания_абонемента, Дата_покупки_абонемента, Д" +
                "ата_оплаты_абонемента, Цена_за_занятие, Код_студии FROM dbo.АБОНЕМЕНТЫ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.АБОНЕМЕНТЫDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.АБОНЕМЕНТЫDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.АБОНЕМЕНТЫDataTable dataTable = new ItogovayaDataSet1.АБОНЕМЕНТЫDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.АБОНЕМЕНТЫDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "АБОНЕМЕНТЫ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_абонемента, int Original_Код_клиента, int Original_Код_программы, int Original_Количество_занятий_в_абонементе, System.DateTime Original_Дата_начала_абонемента, System.DateTime Original_Дата_окончания_абонемента, System.DateTime Original_Дата_покупки_абонемента, System.DateTime Original_Дата_оплаты_абонемента, decimal Original_Цена_за_занятие, int Original_Код_студии) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_абонемента));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Код_клиента));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Код_программы));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Количество_занятий_в_абонементе));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Дата_начала_абонемента));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Дата_окончания_абонемента));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Дата_покупки_абонемента));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Дата_оплаты_абонемента));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_Цена_за_занятие));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Код_студии));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Код_клиента, int Код_программы, int Количество_занятий_в_абонементе, System.DateTime Дата_начала_абонемента, System.DateTime Дата_окончания_абонемента, System.DateTime Дата_покупки_абонемента, System.DateTime Дата_оплаты_абонемента, decimal Цена_за_занятие, int Код_студии) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Код_клиента));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Код_программы));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Количество_занятий_в_абонементе));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Дата_начала_абонемента));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Дата_окончания_абонемента));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Дата_покупки_абонемента));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Дата_оплаты_абонемента));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(Цена_за_занятие));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Код_студии));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Код_клиента, 
                    int Код_программы, 
                    int Количество_занятий_в_абонементе, 
                    System.DateTime Дата_начала_абонемента, 
                    System.DateTime Дата_окончания_абонемента, 
                    System.DateTime Дата_покупки_абонемента, 
                    System.DateTime Дата_оплаты_абонемента, 
                    decimal Цена_за_занятие, 
                    int Код_студии, 
                    int Original_Код_абонемента, 
                    int Original_Код_клиента, 
                    int Original_Код_программы, 
                    int Original_Количество_занятий_в_абонементе, 
                    System.DateTime Original_Дата_начала_абонемента, 
                    System.DateTime Original_Дата_окончания_абонемента, 
                    System.DateTime Original_Дата_покупки_абонемента, 
                    System.DateTime Original_Дата_оплаты_абонемента, 
                    decimal Original_Цена_за_занятие, 
                    int Original_Код_студии, 
                    int Код_абонемента) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Код_клиента));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Код_программы));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Количество_занятий_в_абонементе));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Дата_начала_абонемента));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Дата_окончания_абонемента));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Дата_покупки_абонемента));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Дата_оплаты_абонемента));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Цена_за_занятие));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Код_студии));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Код_абонемента));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Код_клиента));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Код_программы));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Количество_занятий_в_абонементе));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Дата_начала_абонемента));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_Дата_окончания_абонемента));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Дата_покупки_абонемента));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_Дата_оплаты_абонемента));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_Цена_за_занятие));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_Код_студии));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Код_абонемента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Код_клиента, 
                    int Код_программы, 
                    int Количество_занятий_в_абонементе, 
                    System.DateTime Дата_начала_абонемента, 
                    System.DateTime Дата_окончания_абонемента, 
                    System.DateTime Дата_покупки_абонемента, 
                    System.DateTime Дата_оплаты_абонемента, 
                    decimal Цена_за_занятие, 
                    int Код_студии, 
                    int Original_Код_абонемента, 
                    int Original_Код_клиента, 
                    int Original_Код_программы, 
                    int Original_Количество_занятий_в_абонементе, 
                    System.DateTime Original_Дата_начала_абонемента, 
                    System.DateTime Original_Дата_окончания_абонемента, 
                    System.DateTime Original_Дата_покупки_абонемента, 
                    System.DateTime Original_Дата_оплаты_абонемента, 
                    decimal Original_Цена_за_занятие, 
                    int Original_Код_студии) {
            return this.Update(Код_клиента, Код_программы, Количество_занятий_в_абонементе, Дата_начала_абонемента, Дата_окончания_абонемента, Дата_покупки_абонемента, Дата_оплаты_абонемента, Цена_за_занятие, Код_студии, Original_Код_абонемента, Original_Код_клиента, Original_Код_программы, Original_Количество_занятий_в_абонементе, Original_Дата_начала_абонемента, Original_Дата_окончания_абонемента, Original_Дата_покупки_абонемента, Original_Дата_оплаты_абонемента, Original_Цена_за_занятие, Original_Код_студии, Original_Код_абонемента);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ГРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ГРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ГРУППОВЫЕ АБОНЕМЕНТЫ";
            tableMapping.ColumnMappings.Add("Код_абонемента", "Код_абонемента");
            tableMapping.ColumnMappings.Add("Код_группы", "Код_группы");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ГРУППОВЫЕ АБОНЕМЕНТЫ] WHERE (([Код_абонемента] = @Original_Код" +
                "_абонемента) AND ([Код_группы] = @Original_Код_группы))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_абонемента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ГРУППОВЫЕ АБОНЕМЕНТЫ] ([Код_абонемента], [Код_группы]) VALUES " +
                "(@Код_абонемента, @Код_группы);\r\nSELECT Код_абонемента, Код_группы FROM [ГРУППОВ" +
                "ЫЕ АБОНЕМЕНТЫ] WHERE (Код_абонемента = @Код_абонемента)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_абонемента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ГРУППОВЫЕ АБОНЕМЕНТЫ] SET [Код_абонемента] = @Код_абонемента, [Код_группы] = @Код_группы WHERE (([Код_абонемента] = @Original_Код_абонемента) AND ([Код_группы] = @Original_Код_группы));
SELECT Код_абонемента, Код_группы FROM [ГРУППОВЫЕ АБОНЕМЕНТЫ] WHERE (Код_абонемента = @Код_абонемента)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_абонемента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_абонемента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_абонемента, Код_группы FROM dbo.[ГРУППОВЫЕ АБОНЕМЕНТЫ]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable dataTable = new ItogovayaDataSet1.ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.ГРУППОВЫЕ_АБОНЕМЕНТЫDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ГРУППОВЫЕ АБОНЕМЕНТЫ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_абонемента, int Original_Код_группы) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_абонемента));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Код_группы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Код_абонемента, int Код_группы) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Код_абонемента));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Код_группы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Код_абонемента, int Код_группы, int Original_Код_абонемента, int Original_Код_группы) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Код_абонемента));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Код_группы));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Код_абонемента));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Код_группы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Код_группы, int Original_Код_абонемента, int Original_Код_группы) {
            return this.Update(Original_Код_абонемента, Код_группы, Original_Код_абонемента, Original_Код_группы);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ГРУППЫTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ГРУППЫTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ГРУППЫ";
            tableMapping.ColumnMappings.Add("Код_группы", "Код_группы");
            tableMapping.ColumnMappings.Add("Код_тренера", "Код_тренера");
            tableMapping.ColumnMappings.Add("Код_студии", "Код_студии");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ГРУППЫ] WHERE (([Код_группы] = @Original_Код_группы) AND ([Код" +
                "_тренера] = @Original_Код_тренера) AND ([Код_студии] = @Original_Код_студии))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ГРУППЫ] ([Код_тренера], [Код_студии]) VALUES (@Код_тренера, @К" +
                "од_студии);\r\nSELECT Код_группы, Код_тренера, Код_студии FROM ГРУППЫ WHERE (Код_г" +
                "руппы = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ГРУППЫ] SET [Код_тренера] = @Код_тренера, [Код_студии] = @Код_студии WHERE (([Код_группы] = @Original_Код_группы) AND ([Код_тренера] = @Original_Код_тренера) AND ([Код_студии] = @Original_Код_студии));
SELECT Код_группы, Код_тренера, Код_студии FROM ГРУППЫ WHERE (Код_группы = @Код_группы)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_группы", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_группы, Код_тренера, Код_студии FROM dbo.ГРУППЫ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.ГРУППЫDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.ГРУППЫDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.ГРУППЫDataTable dataTable = new ItogovayaDataSet1.ГРУППЫDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.ГРУППЫDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ГРУППЫ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_группы, int Original_Код_тренера, int Original_Код_студии) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_группы));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Код_тренера));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Код_студии));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Код_тренера, int Код_студии) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Код_тренера));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Код_студии));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Код_тренера, int Код_студии, int Original_Код_группы, int Original_Код_тренера, int Original_Код_студии, int Код_группы) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Код_тренера));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Код_студии));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Код_группы));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Код_тренера));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Код_студии));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Код_группы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Код_тренера, int Код_студии, int Original_Код_группы, int Original_Код_тренера, int Original_Код_студии) {
            return this.Update(Код_тренера, Код_студии, Original_Код_группы, Original_Код_тренера, Original_Код_студии, Original_Код_группы);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ИНВЕНТАРЬTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ИНВЕНТАРЬTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ИНВЕНТАРЬ";
            tableMapping.ColumnMappings.Add("Код_поставки", "Код_поставки");
            tableMapping.ColumnMappings.Add("Код_инвентаря", "Код_инвентаря");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            tableMapping.ColumnMappings.Add("Вид_инвентаря", "Вид_инвентаря");
            tableMapping.ColumnMappings.Add("Срок_годности", "Срок_годности");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Цена_за_единицу", "Цена_за_единицу");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ИНВЕНТАРЬ] WHERE (([Код_поставки] = @Original_Код_поставки) AND ([Код_инвентаря] = @Original_Код_инвентаря) AND ([Наименование] = @Original_Наименование) AND ([Вид_инвентаря] = @Original_Вид_инвентаря) AND ([Срок_годности] = @Original_Срок_годности) AND ([Количество] = @Original_Количество) AND ([Цена_за_единицу] = @Original_Цена_за_единицу))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_поставки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_инвентаря", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_инвентаря", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вид_инвентаря", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид_инвентаря", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Срок_годности", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Срок_годности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена_за_единицу", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена_за_единицу", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ИНВЕНТАРЬ] ([Код_поставки], [Наименование], [Вид_инвентаря], [Срок_годности], [Количество], [Цена_за_единицу]) VALUES (@Код_поставки, @Наименование, @Вид_инвентаря, @Срок_годности, @Количество, @Цена_за_единицу);
SELECT Код_поставки, Код_инвентаря, Наименование, Вид_инвентаря, Срок_годности, Количество, Цена_за_единицу FROM ИНВЕНТАРЬ WHERE (Код_инвентаря = SCOPE_IDENTITY()) AND (Код_поставки = @Код_поставки)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_поставки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вид_инвентаря", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид_инвентаря", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Срок_годности", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Срок_годности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена_за_единицу", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена_за_единицу", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ИНВЕНТАРЬ] SET [Код_поставки] = @Код_поставки, [Наименование] = @Наименование, [Вид_инвентаря] = @Вид_инвентаря, [Срок_годности] = @Срок_годности, [Количество] = @Количество, [Цена_за_единицу] = @Цена_за_единицу WHERE (([Код_поставки] = @Original_Код_поставки) AND ([Код_инвентаря] = @Original_Код_инвентаря) AND ([Наименование] = @Original_Наименование) AND ([Вид_инвентаря] = @Original_Вид_инвентаря) AND ([Срок_годности] = @Original_Срок_годности) AND ([Количество] = @Original_Количество) AND ([Цена_за_единицу] = @Original_Цена_за_единицу));
SELECT Код_поставки, Код_инвентаря, Наименование, Вид_инвентаря, Срок_годности, Количество, Цена_за_единицу FROM ИНВЕНТАРЬ WHERE (Код_инвентаря = @Код_инвентаря) AND (Код_поставки = @Код_поставки)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_поставки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вид_инвентаря", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид_инвентаря", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Срок_годности", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Срок_годности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена_за_единицу", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена_за_единицу", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_поставки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_инвентаря", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_инвентаря", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вид_инвентаря", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид_инвентаря", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Срок_годности", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Срок_годности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена_за_единицу", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена_за_единицу", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_инвентаря", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_инвентаря", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_поставки, Код_инвентаря, Наименование, Вид_инвентаря, Срок_годности, К" +
                "оличество, Цена_за_единицу FROM dbo.ИНВЕНТАРЬ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.ИНВЕНТАРЬDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.ИНВЕНТАРЬDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.ИНВЕНТАРЬDataTable dataTable = new ItogovayaDataSet1.ИНВЕНТАРЬDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.ИНВЕНТАРЬDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ИНВЕНТАРЬ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_поставки, int Original_Код_инвентаря, string Original_Наименование, string Original_Вид_инвентаря, System.DateTime Original_Срок_годности, int Original_Количество, decimal Original_Цена_за_единицу) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_поставки));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Код_инвентаря));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Наименование));
            }
            if ((Original_Вид_инвентаря == null)) {
                throw new global::System.ArgumentNullException("Original_Вид_инвентаря");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Вид_инвентаря));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Срок_годности));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Количество));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Цена_за_единицу));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Код_поставки, string Наименование, string Вид_инвентаря, System.DateTime Срок_годности, int Количество, decimal Цена_за_единицу) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Код_поставки));
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Наименование));
            }
            if ((Вид_инвентаря == null)) {
                throw new global::System.ArgumentNullException("Вид_инвентаря");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Вид_инвентаря));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Срок_годности));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Количество));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Цена_за_единицу));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Код_поставки, string Наименование, string Вид_инвентаря, System.DateTime Срок_годности, int Количество, decimal Цена_за_единицу, int Original_Код_поставки, int Original_Код_инвентаря, string Original_Наименование, string Original_Вид_инвентаря, System.DateTime Original_Срок_годности, int Original_Количество, decimal Original_Цена_за_единицу, int Код_инвентаря) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Код_поставки));
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Наименование));
            }
            if ((Вид_инвентаря == null)) {
                throw new global::System.ArgumentNullException("Вид_инвентаря");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Вид_инвентаря));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Срок_годности));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Количество));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Цена_за_единицу));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Код_поставки));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Код_инвентаря));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Наименование));
            }
            if ((Original_Вид_инвентаря == null)) {
                throw new global::System.ArgumentNullException("Original_Вид_инвентаря");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Вид_инвентаря));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_Срок_годности));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Количество));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_Цена_за_единицу));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Код_инвентаря));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, string Вид_инвентаря, System.DateTime Срок_годности, int Количество, decimal Цена_за_единицу, int Original_Код_поставки, int Original_Код_инвентаря, string Original_Наименование, string Original_Вид_инвентаря, System.DateTime Original_Срок_годности, int Original_Количество, decimal Original_Цена_за_единицу) {
            return this.Update(Original_Код_поставки, Наименование, Вид_инвентаря, Срок_годности, Количество, Цена_за_единицу, Original_Код_поставки, Original_Код_инвентаря, Original_Наименование, Original_Вид_инвентаря, Original_Срок_годности, Original_Количество, Original_Цена_за_единицу, Original_Код_инвентаря);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ";
            tableMapping.ColumnMappings.Add("Код_абонемента", "Код_абонемента");
            tableMapping.ColumnMappings.Add("Код_тренера", "Код_тренера");
            tableMapping.ColumnMappings.Add("Код_клиента", "Код_клиента");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ] WHERE (([Код_абонемента] = @Origina" +
                "l_Код_абонемента) AND ([Код_тренера] = @Original_Код_тренера) AND ([Код_клиента]" +
                " = @Original_Код_клиента))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_абонемента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ] ([Код_абонемента], [Код_тренера], [Код_клиента]) VALUES (@Код_абонемента, @Код_тренера, @Код_клиента);
SELECT Код_абонемента, Код_тренера, Код_клиента FROM [ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ] WHERE (Код_абонемента = @Код_абонемента)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_абонемента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ] SET [Код_абонемента] = @Код_абонемента, [Код_тренера] = @Код_тренера, [Код_клиента] = @Код_клиента WHERE (([Код_абонемента] = @Original_Код_абонемента) AND ([Код_тренера] = @Original_Код_тренера) AND ([Код_клиента] = @Original_Код_клиента));
SELECT Код_абонемента, Код_тренера, Код_клиента FROM [ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ] WHERE (Код_абонемента = @Код_абонемента)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_абонемента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_абонемента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_абонемента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_абонемента, Код_тренера, Код_клиента FROM dbo.[ИНДИВИДУАЛЬНЫЕ АБОНЕМЕН" +
                "ТЫ]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable dataTable = new ItogovayaDataSet1.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ИНДИВИДУАЛЬНЫЕ АБОНЕМЕНТЫ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_абонемента, int Original_Код_тренера, int Original_Код_клиента) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_абонемента));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Код_тренера));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Код_клиента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Код_абонемента, int Код_тренера, int Код_клиента) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Код_абонемента));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Код_тренера));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Код_клиента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Код_абонемента, int Код_тренера, int Код_клиента, int Original_Код_абонемента, int Original_Код_тренера, int Original_Код_клиента) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Код_абонемента));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Код_тренера));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Код_клиента));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Код_абонемента));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Код_тренера));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Код_клиента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Код_тренера, int Код_клиента, int Original_Код_абонемента, int Original_Код_тренера, int Original_Код_клиента) {
            return this.Update(Original_Код_абонемента, Код_тренера, Код_клиента, Original_Код_абонемента, Original_Код_тренера, Original_Код_клиента);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class КЛИЕНТЫTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public КЛИЕНТЫTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "КЛИЕНТЫ";
            tableMapping.ColumnMappings.Add("Код_клиента", "Код_клиента");
            tableMapping.ColumnMappings.Add("Фамилия_клиента", "Фамилия_клиента");
            tableMapping.ColumnMappings.Add("Имя_клиента", "Имя_клиента");
            tableMapping.ColumnMappings.Add("Отчество_клиента", "Отчество_клиента");
            tableMapping.ColumnMappings.Add("Дата_рождения", "Дата_рождения");
            tableMapping.ColumnMappings.Add("Фактический_адрес", "Фактический_адрес");
            tableMapping.ColumnMappings.Add("Телефон_клиента", "Телефон_клиента");
            tableMapping.ColumnMappings.Add("Электронная_почта", "Электронная_почта");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[КЛИЕНТЫ] WHERE (([Код_клиента] = @Original_Код_клиента) AND ([Фамилия_клиента] = @Original_Фамилия_клиента) AND ([Имя_клиента] = @Original_Имя_клиента) AND ([Отчество_клиента] = @Original_Отчество_клиента) AND ([Дата_рождения] = @Original_Дата_рождения) AND ([Фактический_адрес] = @Original_Фактический_адрес) AND ([Телефон_клиента] = @Original_Телефон_клиента) AND ([Электронная_почта] = @Original_Электронная_почта))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фактический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фактический_адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Электронная_почта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Электронная_почта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[КЛИЕНТЫ] ([Фамилия_клиента], [Имя_клиента], [Отчество_клиента], [Дата_рождения], [Фактический_адрес], [Телефон_клиента], [Электронная_почта]) VALUES (@Фамилия_клиента, @Имя_клиента, @Отчество_клиента, @Дата_рождения, @Фактический_адрес, @Телефон_клиента, @Электронная_почта);
SELECT Код_клиента, Фамилия_клиента, Имя_клиента, Отчество_клиента, Дата_рождения, Фактический_адрес, Телефон_клиента, Электронная_почта FROM КЛИЕНТЫ WHERE (Код_клиента = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фактический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фактический_адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Электронная_почта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Электронная_почта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[КЛИЕНТЫ] SET [Фамилия_клиента] = @Фамилия_клиента, [Имя_клиента] = @Имя_клиента, [Отчество_клиента] = @Отчество_клиента, [Дата_рождения] = @Дата_рождения, [Фактический_адрес] = @Фактический_адрес, [Телефон_клиента] = @Телефон_клиента, [Электронная_почта] = @Электронная_почта WHERE (([Код_клиента] = @Original_Код_клиента) AND ([Фамилия_клиента] = @Original_Фамилия_клиента) AND ([Имя_клиента] = @Original_Имя_клиента) AND ([Отчество_клиента] = @Original_Отчество_клиента) AND ([Дата_рождения] = @Original_Дата_рождения) AND ([Фактический_адрес] = @Original_Фактический_адрес) AND ([Телефон_клиента] = @Original_Телефон_клиента) AND ([Электронная_почта] = @Original_Электронная_почта));
SELECT Код_клиента, Фамилия_клиента, Имя_клиента, Отчество_клиента, Дата_рождения, Фактический_адрес, Телефон_клиента, Электронная_почта FROM КЛИЕНТЫ WHERE (Код_клиента = @Код_клиента)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фактический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фактический_адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Электронная_почта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Электронная_почта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фактический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фактический_адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_клиента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Электронная_почта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Электронная_почта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_клиента", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_клиента, Фамилия_клиента, Имя_клиента, Отчество_клиента, Дата_рождения" +
                ", Фактический_адрес, Телефон_клиента, Электронная_почта FROM dbo.КЛИЕНТЫ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.КЛИЕНТЫDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.КЛИЕНТЫDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.КЛИЕНТЫDataTable dataTable = new ItogovayaDataSet1.КЛИЕНТЫDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.КЛИЕНТЫDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "КЛИЕНТЫ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_клиента, string Original_Фамилия_клиента, string Original_Имя_клиента, string Original_Отчество_клиента, System.DateTime Original_Дата_рождения, string Original_Фактический_адрес, string Original_Телефон_клиента, string Original_Электронная_почта) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_клиента));
            if ((Original_Фамилия_клиента == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_клиента");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Фамилия_клиента));
            }
            if ((Original_Имя_клиента == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_клиента");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Имя_клиента));
            }
            if ((Original_Отчество_клиента == null)) {
                throw new global::System.ArgumentNullException("Original_Отчество_клиента");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Отчество_клиента));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Дата_рождения));
            if ((Original_Фактический_адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Фактический_адрес");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Фактический_адрес));
            }
            if ((Original_Телефон_клиента == null)) {
                throw new global::System.ArgumentNullException("Original_Телефон_клиента");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Телефон_клиента));
            }
            if ((Original_Электронная_почта == null)) {
                throw new global::System.ArgumentNullException("Original_Электронная_почта");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Электронная_почта));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Фамилия_клиента, string Имя_клиента, string Отчество_клиента, System.DateTime Дата_рождения, string Фактический_адрес, string Телефон_клиента, string Электронная_почта) {
            if ((Фамилия_клиента == null)) {
                throw new global::System.ArgumentNullException("Фамилия_клиента");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Фамилия_клиента));
            }
            if ((Имя_клиента == null)) {
                throw new global::System.ArgumentNullException("Имя_клиента");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Имя_клиента));
            }
            if ((Отчество_клиента == null)) {
                throw new global::System.ArgumentNullException("Отчество_клиента");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Отчество_клиента));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Дата_рождения));
            if ((Фактический_адрес == null)) {
                throw new global::System.ArgumentNullException("Фактический_адрес");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Фактический_адрес));
            }
            if ((Телефон_клиента == null)) {
                throw new global::System.ArgumentNullException("Телефон_клиента");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Телефон_клиента));
            }
            if ((Электронная_почта == null)) {
                throw new global::System.ArgumentNullException("Электронная_почта");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Электронная_почта));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Фамилия_клиента, 
                    string Имя_клиента, 
                    string Отчество_клиента, 
                    System.DateTime Дата_рождения, 
                    string Фактический_адрес, 
                    string Телефон_клиента, 
                    string Электронная_почта, 
                    int Original_Код_клиента, 
                    string Original_Фамилия_клиента, 
                    string Original_Имя_клиента, 
                    string Original_Отчество_клиента, 
                    System.DateTime Original_Дата_рождения, 
                    string Original_Фактический_адрес, 
                    string Original_Телефон_клиента, 
                    string Original_Электронная_почта, 
                    int Код_клиента) {
            if ((Фамилия_клиента == null)) {
                throw new global::System.ArgumentNullException("Фамилия_клиента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Фамилия_клиента));
            }
            if ((Имя_клиента == null)) {
                throw new global::System.ArgumentNullException("Имя_клиента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Имя_клиента));
            }
            if ((Отчество_клиента == null)) {
                throw new global::System.ArgumentNullException("Отчество_клиента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Отчество_клиента));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Дата_рождения));
            if ((Фактический_адрес == null)) {
                throw new global::System.ArgumentNullException("Фактический_адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Фактический_адрес));
            }
            if ((Телефон_клиента == null)) {
                throw new global::System.ArgumentNullException("Телефон_клиента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Телефон_клиента));
            }
            if ((Электронная_почта == null)) {
                throw new global::System.ArgumentNullException("Электронная_почта");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Электронная_почта));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Код_клиента));
            if ((Original_Фамилия_клиента == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_клиента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Фамилия_клиента));
            }
            if ((Original_Имя_клиента == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_клиента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Имя_клиента));
            }
            if ((Original_Отчество_клиента == null)) {
                throw new global::System.ArgumentNullException("Original_Отчество_клиента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Отчество_клиента));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_Дата_рождения));
            if ((Original_Фактический_адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Фактический_адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Фактический_адрес));
            }
            if ((Original_Телефон_клиента == null)) {
                throw new global::System.ArgumentNullException("Original_Телефон_клиента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Телефон_клиента));
            }
            if ((Original_Электронная_почта == null)) {
                throw new global::System.ArgumentNullException("Original_Электронная_почта");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Электронная_почта));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Код_клиента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Фамилия_клиента, string Имя_клиента, string Отчество_клиента, System.DateTime Дата_рождения, string Фактический_адрес, string Телефон_клиента, string Электронная_почта, int Original_Код_клиента, string Original_Фамилия_клиента, string Original_Имя_клиента, string Original_Отчество_клиента, System.DateTime Original_Дата_рождения, string Original_Фактический_адрес, string Original_Телефон_клиента, string Original_Электронная_почта) {
            return this.Update(Фамилия_клиента, Имя_клиента, Отчество_клиента, Дата_рождения, Фактический_адрес, Телефон_клиента, Электронная_почта, Original_Код_клиента, Original_Фамилия_клиента, Original_Имя_клиента, Original_Отчество_клиента, Original_Дата_рождения, Original_Фактический_адрес, Original_Телефон_клиента, Original_Электронная_почта, Original_Код_клиента);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПОСТАВКАTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ПОСТАВКАTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ПОСТАВКА";
            tableMapping.ColumnMappings.Add("Код_поставки", "Код_поставки");
            tableMapping.ColumnMappings.Add("Дата_заявки", "Дата_заявки");
            tableMapping.ColumnMappings.Add("Дата_поставки", "Дата_поставки");
            tableMapping.ColumnMappings.Add("Код_студии", "Код_студии");
            tableMapping.ColumnMappings.Add("Код_поставщика", "Код_поставщика");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ПОСТАВКА] WHERE (([Код_поставки] = @Original_Код_поставки) AND ([Дата_заявки] = @Original_Дата_заявки) AND ([Дата_поставки] = @Original_Дата_поставки) AND ([Код_студии] = @Original_Код_студии) AND ([Код_поставщика] = @Original_Код_поставщика))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_поставки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_заявки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_заявки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_поставки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_поставки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ПОСТАВКА] ([Дата_заявки], [Дата_поставки], [Код_студии], [Код_поставщика]) VALUES (@Дата_заявки, @Дата_поставки, @Код_студии, @Код_поставщика);
SELECT Код_поставки, Дата_заявки, Дата_поставки, Код_студии, Код_поставщика FROM ПОСТАВКА WHERE (Код_поставки = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_заявки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_заявки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_поставки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_поставки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ПОСТАВКА] SET [Дата_заявки] = @Дата_заявки, [Дата_поставки] = @Дата_поставки, [Код_студии] = @Код_студии, [Код_поставщика] = @Код_поставщика WHERE (([Код_поставки] = @Original_Код_поставки) AND ([Дата_заявки] = @Original_Дата_заявки) AND ([Дата_поставки] = @Original_Дата_поставки) AND ([Код_студии] = @Original_Код_студии) AND ([Код_поставщика] = @Original_Код_поставщика));
SELECT Код_поставки, Дата_заявки, Дата_поставки, Код_студии, Код_поставщика FROM ПОСТАВКА WHERE (Код_поставки = @Код_поставки)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_заявки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_заявки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_поставки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_поставки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_поставки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_заявки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_заявки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_поставки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_поставки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_поставки", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_поставки, Дата_заявки, Дата_поставки, Код_студии, Код_поставщика FROM " +
                "dbo.ПОСТАВКА";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.ПОСТАВКАDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.ПОСТАВКАDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.ПОСТАВКАDataTable dataTable = new ItogovayaDataSet1.ПОСТАВКАDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.ПОСТАВКАDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ПОСТАВКА");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_поставки, System.DateTime Original_Дата_заявки, System.DateTime Original_Дата_поставки, int Original_Код_студии, int Original_Код_поставщика) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_поставки));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Дата_заявки));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Дата_поставки));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Код_студии));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Код_поставщика));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Дата_заявки, System.DateTime Дата_поставки, int Код_студии, int Код_поставщика) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Дата_заявки));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Дата_поставки));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Код_студии));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Код_поставщика));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Дата_заявки, System.DateTime Дата_поставки, int Код_студии, int Код_поставщика, int Original_Код_поставки, System.DateTime Original_Дата_заявки, System.DateTime Original_Дата_поставки, int Original_Код_студии, int Original_Код_поставщика, int Код_поставки) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Дата_заявки));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Дата_поставки));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Код_студии));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Код_поставщика));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Код_поставки));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_Дата_заявки));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_Дата_поставки));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Код_студии));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Код_поставщика));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Код_поставки));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Дата_заявки, System.DateTime Дата_поставки, int Код_студии, int Код_поставщика, int Original_Код_поставки, System.DateTime Original_Дата_заявки, System.DateTime Original_Дата_поставки, int Original_Код_студии, int Original_Код_поставщика) {
            return this.Update(Дата_заявки, Дата_поставки, Код_студии, Код_поставщика, Original_Код_поставки, Original_Дата_заявки, Original_Дата_поставки, Original_Код_студии, Original_Код_поставщика, Original_Код_поставки);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПОСТАВЩИКTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ПОСТАВЩИКTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ПОСТАВЩИК";
            tableMapping.ColumnMappings.Add("Код_поставщика", "Код_поставщика");
            tableMapping.ColumnMappings.Add("Название_поставщика", "Название_поставщика");
            tableMapping.ColumnMappings.Add("Телефон_поставщика", "Телефон_поставщика");
            tableMapping.ColumnMappings.Add("Адрес_поставщика", "Адрес_поставщика");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ПОСТАВЩИК] WHERE (([Код_поставщика] = @Original_Код_поставщика" +
                ") AND ([Название_поставщика] = @Original_Название_поставщика) AND ([Телефон_пост" +
                "авщика] = @Original_Телефон_поставщика) AND ([Адрес_поставщика] = @Original_Адре" +
                "с_поставщика))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Адрес_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес_поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ПОСТАВЩИК] ([Название_поставщика], [Телефон_поставщика], [Адрес_поставщика]) VALUES (@Название_поставщика, @Телефон_поставщика, @Адрес_поставщика);
SELECT Код_поставщика, Название_поставщика, Телефон_поставщика, Адрес_поставщика FROM ПОСТАВЩИК WHERE (Код_поставщика = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Адрес_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес_поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ПОСТАВЩИК] SET [Название_поставщика] = @Название_поставщика, [Телефон_поставщика] = @Телефон_поставщика, [Адрес_поставщика] = @Адрес_поставщика WHERE (([Код_поставщика] = @Original_Код_поставщика) AND ([Название_поставщика] = @Original_Название_поставщика) AND ([Телефон_поставщика] = @Original_Телефон_поставщика) AND ([Адрес_поставщика] = @Original_Адрес_поставщика));
SELECT Код_поставщика, Название_поставщика, Телефон_поставщика, Адрес_поставщика FROM ПОСТАВЩИК WHERE (Код_поставщика = @Код_поставщика)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Адрес_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес_поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Адрес_поставщика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес_поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_поставщика", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_поставщика, Название_поставщика, Телефон_поставщика, Адрес_поставщика " +
                "FROM dbo.ПОСТАВЩИК";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.ПОСТАВЩИКDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.ПОСТАВЩИКDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.ПОСТАВЩИКDataTable dataTable = new ItogovayaDataSet1.ПОСТАВЩИКDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.ПОСТАВЩИКDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ПОСТАВЩИК");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_поставщика, string Original_Название_поставщика, string Original_Телефон_поставщика, string Original_Адрес_поставщика) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_поставщика));
            if ((Original_Название_поставщика == null)) {
                throw new global::System.ArgumentNullException("Original_Название_поставщика");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Название_поставщика));
            }
            if ((Original_Телефон_поставщика == null)) {
                throw new global::System.ArgumentNullException("Original_Телефон_поставщика");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Телефон_поставщика));
            }
            if ((Original_Адрес_поставщика == null)) {
                throw new global::System.ArgumentNullException("Original_Адрес_поставщика");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Адрес_поставщика));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Название_поставщика, string Телефон_поставщика, string Адрес_поставщика) {
            if ((Название_поставщика == null)) {
                throw new global::System.ArgumentNullException("Название_поставщика");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Название_поставщика));
            }
            if ((Телефон_поставщика == null)) {
                throw new global::System.ArgumentNullException("Телефон_поставщика");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Телефон_поставщика));
            }
            if ((Адрес_поставщика == null)) {
                throw new global::System.ArgumentNullException("Адрес_поставщика");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Адрес_поставщика));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Название_поставщика, string Телефон_поставщика, string Адрес_поставщика, int Original_Код_поставщика, string Original_Название_поставщика, string Original_Телефон_поставщика, string Original_Адрес_поставщика, int Код_поставщика) {
            if ((Название_поставщика == null)) {
                throw new global::System.ArgumentNullException("Название_поставщика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Название_поставщика));
            }
            if ((Телефон_поставщика == null)) {
                throw new global::System.ArgumentNullException("Телефон_поставщика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Телефон_поставщика));
            }
            if ((Адрес_поставщика == null)) {
                throw new global::System.ArgumentNullException("Адрес_поставщика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Адрес_поставщика));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Код_поставщика));
            if ((Original_Название_поставщика == null)) {
                throw new global::System.ArgumentNullException("Original_Название_поставщика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Название_поставщика));
            }
            if ((Original_Телефон_поставщика == null)) {
                throw new global::System.ArgumentNullException("Original_Телефон_поставщика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Телефон_поставщика));
            }
            if ((Original_Адрес_поставщика == null)) {
                throw new global::System.ArgumentNullException("Original_Адрес_поставщика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Адрес_поставщика));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Код_поставщика));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Название_поставщика, string Телефон_поставщика, string Адрес_поставщика, int Original_Код_поставщика, string Original_Название_поставщика, string Original_Телефон_поставщика, string Original_Адрес_поставщика) {
            return this.Update(Название_поставщика, Телефон_поставщика, Адрес_поставщика, Original_Код_поставщика, Original_Название_поставщика, Original_Телефон_поставщика, Original_Адрес_поставщика, Original_Код_поставщика);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПРОГРАММЫTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ПРОГРАММЫTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ПРОГРАММЫ";
            tableMapping.ColumnMappings.Add("Код_программы", "Код_программы");
            tableMapping.ColumnMappings.Add("Название_программы", "Название_программы");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ПРОГРАММЫ] WHERE (([Код_программы] = @Original_Код_программы) " +
                "AND ([Название_программы] = @Original_Название_программы))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_программы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_программы", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_программы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ПРОГРАММЫ] ([Название_программы]) VALUES (@Название_программы)" +
                ";\r\nSELECT Код_программы, Название_программы FROM ПРОГРАММЫ WHERE (Код_программы " +
                "= SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_программы", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_программы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ПРОГРАММЫ] SET [Название_программы] = @Название_программы WHERE (([Код_программы] = @Original_Код_программы) AND ([Название_программы] = @Original_Название_программы));
SELECT Код_программы, Название_программы FROM ПРОГРАММЫ WHERE (Код_программы = @Код_программы)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_программы", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_программы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_программы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_программы", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_программы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_программы", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_программы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_программы, Название_программы FROM dbo.ПРОГРАММЫ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.ПРОГРАММЫDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.ПРОГРАММЫDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.ПРОГРАММЫDataTable dataTable = new ItogovayaDataSet1.ПРОГРАММЫDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.ПРОГРАММЫDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ПРОГРАММЫ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_программы, string Original_Название_программы) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_программы));
            if ((Original_Название_программы == null)) {
                throw new global::System.ArgumentNullException("Original_Название_программы");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Название_программы));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Название_программы) {
            if ((Название_программы == null)) {
                throw new global::System.ArgumentNullException("Название_программы");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Название_программы));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Название_программы, int Original_Код_программы, string Original_Название_программы, int Код_программы) {
            if ((Название_программы == null)) {
                throw new global::System.ArgumentNullException("Название_программы");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Название_программы));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Код_программы));
            if ((Original_Название_программы == null)) {
                throw new global::System.ArgumentNullException("Original_Название_программы");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Название_программы));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Код_программы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Название_программы, int Original_Код_программы, string Original_Название_программы) {
            return this.Update(Название_программы, Original_Код_программы, Original_Название_программы, Original_Код_программы);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class РАСПИСАНИЕTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public РАСПИСАНИЕTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "РАСПИСАНИЕ";
            tableMapping.ColumnMappings.Add("Код_расписания", "Код_расписания");
            tableMapping.ColumnMappings.Add("Программы", "Программы");
            tableMapping.ColumnMappings.Add("Код_группы", "Код_группы");
            tableMapping.ColumnMappings.Add("Дата/время", "Дата/время");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[РАСПИСАНИЕ] WHERE (([Код_расписания] = @Original_Код_расписани" +
                "я) AND ([Программы] = @Original_Программы) AND ([Код_группы] = @Original_Код_гру" +
                "ппы) AND ([Дата/время] = @p2))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_расписания", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_расписания", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Программы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата/время", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[РАСПИСАНИЕ] ([Программы], [Код_группы], [Дата/время]) VALUES (" +
                "@Программы, @Код_группы, @p1);\r\nSELECT Код_расписания, Программы, Код_группы, [Д" +
                "ата/время] FROM РАСПИСАНИЕ WHERE (Код_расписания = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Программы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата/время", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[РАСПИСАНИЕ] SET [Программы] = @Программы, [Код_группы] = @Код_группы, [Дата/время] = @p1 WHERE (([Код_расписания] = @Original_Код_расписания) AND ([Программы] = @Original_Программы) AND ([Код_группы] = @Original_Код_группы) AND ([Дата/время] = @p2));
SELECT Код_расписания, Программы, Код_группы, [Дата/время] FROM РАСПИСАНИЕ WHERE (Код_расписания = @Код_расписания)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Программы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата/время", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_расписания", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_расписания", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Программы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата/время", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_расписания", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_расписания", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_расписания, Программы, Код_группы, [Дата/время] FROM dbo.РАСПИСАНИЕ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.РАСПИСАНИЕDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.РАСПИСАНИЕDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.РАСПИСАНИЕDataTable dataTable = new ItogovayaDataSet1.РАСПИСАНИЕDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.РАСПИСАНИЕDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "РАСПИСАНИЕ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_расписания, int Original_Программы, int Original_Код_группы, System.DateTime p2) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_расписания));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Программы));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Код_группы));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(p2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Программы, int Код_группы, System.DateTime p1) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Программы));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Код_группы));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Программы, int Код_группы, System.DateTime p1, int Original_Код_расписания, int Original_Программы, int Original_Код_группы, System.DateTime p2, int Код_расписания) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Программы));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Код_группы));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(p1));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Код_расписания));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Программы));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Код_группы));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(p2));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Код_расписания));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Программы, int Код_группы, System.DateTime p1, int Original_Код_расписания, int Original_Программы, int Original_Код_группы, System.DateTime p2) {
            return this.Update(Программы, Код_группы, p1, Original_Код_расписания, Original_Программы, Original_Код_группы, p2, Original_Код_расписания);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class РАСПИСАНИЕ_ИНДИВИДTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public РАСПИСАНИЕ_ИНДИВИДTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "РАСПИСАНИЕ ИНДИВИД";
            tableMapping.ColumnMappings.Add("Код_инд_расписания", "Код_инд_расписания");
            tableMapping.ColumnMappings.Add("Программы", "Программы");
            tableMapping.ColumnMappings.Add("Дата/время", "Дата/время");
            tableMapping.ColumnMappings.Add("Код_клиента", "Код_клиента");
            tableMapping.ColumnMappings.Add("Код_тренера", "Код_тренера");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[РАСПИСАНИЕ ИНДИВИД] WHERE (([Код_инд_расписания] = @Original_Код_инд_расписания) AND ([Программы] = @Original_Программы) AND ([Дата/время] = @p2) AND ((@IsNull_Код_клиента = 1 AND [Код_клиента] IS NULL) OR ([Код_клиента] = @Original_Код_клиента)) AND ([Код_тренера] = @Original_Код_тренера))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_инд_расписания", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_инд_расписания", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Программы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата/время", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[РАСПИСАНИЕ ИНДИВИД] ([Программы], [Дата/время], [Код_клиента], [Код_тренера]) VALUES (@Программы, @p1, @Код_клиента, @Код_тренера);
SELECT Код_инд_расписания, Программы, [Дата/время], Код_клиента, Код_тренера FROM [РАСПИСАНИЕ ИНДИВИД] WHERE (Код_инд_расписания = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Программы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата/время", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[РАСПИСАНИЕ ИНДИВИД] SET [Программы] = @Программы, [Дата/время] = @p1, [Код_клиента] = @Код_клиента, [Код_тренера] = @Код_тренера WHERE (([Код_инд_расписания] = @Original_Код_инд_расписания) AND ([Программы] = @Original_Программы) AND ([Дата/время] = @p2) AND ((@IsNull_Код_клиента = 1 AND [Код_клиента] IS NULL) OR ([Код_клиента] = @Original_Код_клиента)) AND ([Код_тренера] = @Original_Код_тренера));
SELECT Код_инд_расписания, Программы, [Дата/время], Код_клиента, Код_тренера FROM [РАСПИСАНИЕ ИНДИВИД] WHERE (Код_инд_расписания = @Код_инд_расписания)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Программы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата/время", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_инд_расписания", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_инд_расписания", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Программы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Программы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата/время", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_тренера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_тренера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_инд_расписания", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_инд_расписания", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_инд_расписания, Программы, [Дата/время], Код_клиента, Код_тренера FROM" +
                " dbo.[РАСПИСАНИЕ ИНДИВИД]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.РАСПИСАНИЕ_ИНДИВИДDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.РАСПИСАНИЕ_ИНДИВИДDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.РАСПИСАНИЕ_ИНДИВИДDataTable dataTable = new ItogovayaDataSet1.РАСПИСАНИЕ_ИНДИВИДDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.РАСПИСАНИЕ_ИНДИВИДDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "РАСПИСАНИЕ ИНДИВИД");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_инд_расписания, int Original_Программы, System.DateTime p2, global::System.Nullable<int> Original_Код_клиента, int Original_Код_тренера) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_инд_расписания));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Программы));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(p2));
            if ((Original_Код_клиента.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Код_клиента.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Код_тренера));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Программы, System.DateTime p1, global::System.Nullable<int> Код_клиента, int Код_тренера) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Программы));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(p1));
            if ((Код_клиента.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Код_клиента.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Код_тренера));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Программы, System.DateTime p1, global::System.Nullable<int> Код_клиента, int Код_тренера, int Original_Код_инд_расписания, int Original_Программы, System.DateTime p2, global::System.Nullable<int> Original_Код_клиента, int Original_Код_тренера, int Код_инд_расписания) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Программы));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(p1));
            if ((Код_клиента.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Код_клиента.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Код_тренера));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Код_инд_расписания));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Программы));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(p2));
            if ((Original_Код_клиента.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Код_клиента.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Код_тренера));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Код_инд_расписания));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Программы, System.DateTime p1, global::System.Nullable<int> Код_клиента, int Код_тренера, int Original_Код_инд_расписания, int Original_Программы, System.DateTime p2, global::System.Nullable<int> Original_Код_клиента, int Original_Код_тренера) {
            return this.Update(Программы, p1, Код_клиента, Код_тренера, Original_Код_инд_расписания, Original_Программы, p2, Original_Код_клиента, Original_Код_тренера, Original_Код_инд_расписания);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СОСТАВ_ГРУППЫTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public СОСТАВ_ГРУППЫTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "СОСТАВ ГРУППЫ";
            tableMapping.ColumnMappings.Add("Код_группы", "Код_группы");
            tableMapping.ColumnMappings.Add("Код_клиента", "Код_клиента");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[СОСТАВ ГРУППЫ] WHERE (([Код_группы] = @Original_Код_группы) AN" +
                "D ([Код_клиента] = @Original_Код_клиента))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[СОСТАВ ГРУППЫ] ([Код_группы], [Код_клиента]) VALUES (@Код_груп" +
                "пы, @Код_клиента);\r\nSELECT Код_группы, Код_клиента FROM [СОСТАВ ГРУППЫ] WHERE (К" +
                "од_группы = @Код_группы) AND (Код_клиента = @Код_клиента)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[СОСТАВ ГРУППЫ] SET [Код_группы] = @Код_группы, [Код_клиента] = @Код_клиента WHERE (([Код_группы] = @Original_Код_группы) AND ([Код_клиента] = @Original_Код_клиента));
SELECT Код_группы, Код_клиента FROM [СОСТАВ ГРУППЫ] WHERE (Код_группы = @Код_группы) AND (Код_клиента = @Код_клиента)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_группы", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_группы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_клиента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_клиента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_группы, Код_клиента FROM dbo.[СОСТАВ ГРУППЫ]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.СОСТАВ_ГРУППЫDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.СОСТАВ_ГРУППЫDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.СОСТАВ_ГРУППЫDataTable dataTable = new ItogovayaDataSet1.СОСТАВ_ГРУППЫDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.СОСТАВ_ГРУППЫDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "СОСТАВ ГРУППЫ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_группы, int Original_Код_клиента) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_группы));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Код_клиента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Код_группы, int Код_клиента) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Код_группы));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Код_клиента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Код_группы, int Код_клиента, int Original_Код_группы, int Original_Код_клиента) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Код_группы));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Код_клиента));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Код_группы));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Код_клиента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Original_Код_группы, int Original_Код_клиента) {
            return this.Update(Original_Код_группы, Original_Код_клиента, Original_Код_группы, Original_Код_клиента);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СОТРУДНИКИTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public СОТРУДНИКИTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "СОТРУДНИКИ";
            tableMapping.ColumnMappings.Add("Код_сотрудника", "Код_сотрудника");
            tableMapping.ColumnMappings.Add("Фамилия_сотрудника", "Фамилия_сотрудника");
            tableMapping.ColumnMappings.Add("Имя_сотрудника", "Имя_сотрудника");
            tableMapping.ColumnMappings.Add("Отчество_сотрудника", "Отчество_сотрудника");
            tableMapping.ColumnMappings.Add("Дата_рождения", "Дата_рождения");
            tableMapping.ColumnMappings.Add("Пол", "Пол");
            tableMapping.ColumnMappings.Add("Телефон_сотрудника", "Телефон_сотрудника");
            tableMapping.ColumnMappings.Add("Код_студии", "Код_студии");
            tableMapping.ColumnMappings.Add("Дата_начала_работы_в_компании", "Дата_начала_работы_в_компании");
            tableMapping.ColumnMappings.Add("Оклад", "Оклад");
            tableMapping.ColumnMappings.Add("Должность", "Должность");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[СОТРУДНИКИ] WHERE (([Код_сотрудника] = @Original_Код_сотрудника) AND ([Фамилия_сотрудника] = @Original_Фамилия_сотрудника) AND ([Имя_сотрудника] = @Original_Имя_сотрудника) AND ([Отчество_сотрудника] = @Original_Отчество_сотрудника) AND ([Дата_рождения] = @Original_Дата_рождения) AND ([Пол] = @Original_Пол) AND ([Телефон_сотрудника] = @Original_Телефон_сотрудника) AND ([Код_студии] = @Original_Код_студии) AND ((@IsNull_Дата_начала_работы_в_компании = 1 AND [Дата_начала_работы_в_компании] IS NULL) OR ([Дата_начала_работы_в_компании] = @Original_Дата_начала_работы_в_компании)) AND ([Оклад] = @Original_Оклад) AND ([Должность] = @Original_Должность))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_сотрудника", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пол", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_начала_работы_в_компании", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_начала_работы_в_компании", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_начала_работы_в_компании", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_начала_работы_в_компании", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Оклад", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Оклад", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Должность", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Должность", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[СОТРУДНИКИ] ([Фамилия_сотрудника], [Имя_сотрудника], [Отчество_сотрудника], [Дата_рождения], [Пол], [Телефон_сотрудника], [Код_студии], [Дата_начала_работы_в_компании], [Оклад], [Должность]) VALUES (@Фамилия_сотрудника, @Имя_сотрудника, @Отчество_сотрудника, @Дата_рождения, @Пол, @Телефон_сотрудника, @Код_студии, @Дата_начала_работы_в_компании, @Оклад, @Должность);
SELECT Код_сотрудника, Фамилия_сотрудника, Имя_сотрудника, Отчество_сотрудника, Дата_рождения, Пол, Телефон_сотрудника, Код_студии, Дата_начала_работы_в_компании, Оклад, Должность FROM СОТРУДНИКИ WHERE (Код_сотрудника = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пол", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_начала_работы_в_компании", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_начала_работы_в_компании", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Оклад", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Оклад", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Должность", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Должность", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[СОТРУДНИКИ] SET [Фамилия_сотрудника] = @Фамилия_сотрудника, [Имя_сотрудника] = @Имя_сотрудника, [Отчество_сотрудника] = @Отчество_сотрудника, [Дата_рождения] = @Дата_рождения, [Пол] = @Пол, [Телефон_сотрудника] = @Телефон_сотрудника, [Код_студии] = @Код_студии, [Дата_начала_работы_в_компании] = @Дата_начала_работы_в_компании, [Оклад] = @Оклад, [Должность] = @Должность WHERE (([Код_сотрудника] = @Original_Код_сотрудника) AND ([Фамилия_сотрудника] = @Original_Фамилия_сотрудника) AND ([Имя_сотрудника] = @Original_Имя_сотрудника) AND ([Отчество_сотрудника] = @Original_Отчество_сотрудника) AND ([Дата_рождения] = @Original_Дата_рождения) AND ([Пол] = @Original_Пол) AND ([Телефон_сотрудника] = @Original_Телефон_сотрудника) AND ([Код_студии] = @Original_Код_студии) AND ((@IsNull_Дата_начала_работы_в_компании = 1 AND [Дата_начала_работы_в_компании] IS NULL) OR ([Дата_начала_работы_в_компании] = @Original_Дата_начала_работы_в_компании)) AND ([Оклад] = @Original_Оклад) AND ([Должность] = @Original_Должность));
SELECT Код_сотрудника, Фамилия_сотрудника, Имя_сотрудника, Отчество_сотрудника, Дата_рождения, Пол, Телефон_сотрудника, Код_студии, Дата_начала_работы_в_компании, Оклад, Должность FROM СОТРУДНИКИ WHERE (Код_сотрудника = @Код_сотрудника)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пол", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_начала_работы_в_компании", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_начала_работы_в_компании", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Оклад", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Оклад", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Должность", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Должность", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_сотрудника", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пол", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_начала_работы_в_компании", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_начала_работы_в_компании", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_начала_работы_в_компании", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_начала_работы_в_компании", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Оклад", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Оклад", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Должность", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Должность", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_сотрудника", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_сотрудника, Фамилия_сотрудника, Имя_сотрудника, Отчество_сотрудника, Д" +
                "ата_рождения, Пол, Телефон_сотрудника, Код_студии, Дата_начала_работы_в_компании" +
                ", Оклад, Должность FROM dbo.СОТРУДНИКИ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.СОТРУДНИКИDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.СОТРУДНИКИDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.СОТРУДНИКИDataTable dataTable = new ItogovayaDataSet1.СОТРУДНИКИDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.СОТРУДНИКИDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "СОТРУДНИКИ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_сотрудника, string Original_Фамилия_сотрудника, string Original_Имя_сотрудника, string Original_Отчество_сотрудника, System.DateTime Original_Дата_рождения, string Original_Пол, string Original_Телефон_сотрудника, int Original_Код_студии, global::System.Nullable<global::System.DateTime> Original_Дата_начала_работы_в_компании, decimal Original_Оклад, string Original_Должность) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_сотрудника));
            if ((Original_Фамилия_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_сотрудника");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Фамилия_сотрудника));
            }
            if ((Original_Имя_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_сотрудника");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Имя_сотрудника));
            }
            if ((Original_Отчество_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Отчество_сотрудника");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Отчество_сотрудника));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Дата_рождения));
            if ((Original_Пол == null)) {
                throw new global::System.ArgumentNullException("Original_Пол");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Пол));
            }
            if ((Original_Телефон_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Телефон_сотрудника");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Телефон_сотрудника));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_Код_студии));
            if ((Original_Дата_начала_работы_в_компании.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_Дата_начала_работы_в_компании.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_Оклад));
            if ((Original_Должность == null)) {
                throw new global::System.ArgumentNullException("Original_Должность");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Должность));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Фамилия_сотрудника, string Имя_сотрудника, string Отчество_сотрудника, System.DateTime Дата_рождения, string Пол, string Телефон_сотрудника, int Код_студии, global::System.Nullable<global::System.DateTime> Дата_начала_работы_в_компании, decimal Оклад, string Должность) {
            if ((Фамилия_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Фамилия_сотрудника");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Фамилия_сотрудника));
            }
            if ((Имя_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Имя_сотрудника");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Имя_сотрудника));
            }
            if ((Отчество_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Отчество_сотрудника");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Отчество_сотрудника));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Дата_рождения));
            if ((Пол == null)) {
                throw new global::System.ArgumentNullException("Пол");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Пол));
            }
            if ((Телефон_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Телефон_сотрудника");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Телефон_сотрудника));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Код_студии));
            if ((Дата_начала_работы_в_компании.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Дата_начала_работы_в_компании.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(Оклад));
            if ((Должность == null)) {
                throw new global::System.ArgumentNullException("Должность");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Должность));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Фамилия_сотрудника, 
                    string Имя_сотрудника, 
                    string Отчество_сотрудника, 
                    System.DateTime Дата_рождения, 
                    string Пол, 
                    string Телефон_сотрудника, 
                    int Код_студии, 
                    global::System.Nullable<global::System.DateTime> Дата_начала_работы_в_компании, 
                    decimal Оклад, 
                    string Должность, 
                    int Original_Код_сотрудника, 
                    string Original_Фамилия_сотрудника, 
                    string Original_Имя_сотрудника, 
                    string Original_Отчество_сотрудника, 
                    System.DateTime Original_Дата_рождения, 
                    string Original_Пол, 
                    string Original_Телефон_сотрудника, 
                    int Original_Код_студии, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_начала_работы_в_компании, 
                    decimal Original_Оклад, 
                    string Original_Должность, 
                    int Код_сотрудника) {
            if ((Фамилия_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Фамилия_сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Фамилия_сотрудника));
            }
            if ((Имя_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Имя_сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Имя_сотрудника));
            }
            if ((Отчество_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Отчество_сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Отчество_сотрудника));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Дата_рождения));
            if ((Пол == null)) {
                throw new global::System.ArgumentNullException("Пол");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Пол));
            }
            if ((Телефон_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Телефон_сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Телефон_сотрудника));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Код_студии));
            if ((Дата_начала_работы_в_компании.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Дата_начала_работы_в_компании.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Оклад));
            if ((Должность == null)) {
                throw new global::System.ArgumentNullException("Должность");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Должность));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Код_сотрудника));
            if ((Original_Фамилия_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Фамилия_сотрудника));
            }
            if ((Original_Имя_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Имя_сотрудника));
            }
            if ((Original_Отчество_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Отчество_сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Отчество_сотрудника));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_Дата_рождения));
            if ((Original_Пол == null)) {
                throw new global::System.ArgumentNullException("Original_Пол");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Пол));
            }
            if ((Original_Телефон_сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Телефон_сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Телефон_сотрудника));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Код_студии));
            if ((Original_Дата_начала_работы_в_компании.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_Дата_начала_работы_в_компании.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_Оклад));
            if ((Original_Должность == null)) {
                throw new global::System.ArgumentNullException("Original_Должность");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Должность));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Код_сотрудника));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Фамилия_сотрудника, 
                    string Имя_сотрудника, 
                    string Отчество_сотрудника, 
                    System.DateTime Дата_рождения, 
                    string Пол, 
                    string Телефон_сотрудника, 
                    int Код_студии, 
                    global::System.Nullable<global::System.DateTime> Дата_начала_работы_в_компании, 
                    decimal Оклад, 
                    string Должность, 
                    int Original_Код_сотрудника, 
                    string Original_Фамилия_сотрудника, 
                    string Original_Имя_сотрудника, 
                    string Original_Отчество_сотрудника, 
                    System.DateTime Original_Дата_рождения, 
                    string Original_Пол, 
                    string Original_Телефон_сотрудника, 
                    int Original_Код_студии, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_начала_работы_в_компании, 
                    decimal Original_Оклад, 
                    string Original_Должность) {
            return this.Update(Фамилия_сотрудника, Имя_сотрудника, Отчество_сотрудника, Дата_рождения, Пол, Телефон_сотрудника, Код_студии, Дата_начала_работы_в_компании, Оклад, Должность, Original_Код_сотрудника, Original_Фамилия_сотрудника, Original_Имя_сотрудника, Original_Отчество_сотрудника, Original_Дата_рождения, Original_Пол, Original_Телефон_сотрудника, Original_Код_студии, Original_Дата_начала_работы_в_компании, Original_Оклад, Original_Должность, Original_Код_сотрудника);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СТУДИЯTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public СТУДИЯTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "СТУДИЯ";
            tableMapping.ColumnMappings.Add("Код_студии", "Код_студии");
            tableMapping.ColumnMappings.Add("Название_студии", "Название_студии");
            tableMapping.ColumnMappings.Add("Юридический_адрес", "Юридический_адрес");
            tableMapping.ColumnMappings.Add("Фактический_адрес", "Фактический_адрес");
            tableMapping.ColumnMappings.Add("Телефон_студии", "Телефон_студии");
            tableMapping.ColumnMappings.Add("Электронная_почта", "Электронная_почта");
            tableMapping.ColumnMappings.Add("Фамилия_директора", "Фамилия_директора");
            tableMapping.ColumnMappings.Add("Имя_директора", "Имя_директора");
            tableMapping.ColumnMappings.Add("Отчество_директора", "Отчество_директора");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[СТУДИЯ] WHERE (([Код_студии] = @Original_Код_студии) AND ([Название_студии] = @Original_Название_студии) AND ([Юридический_адрес] = @Original_Юридический_адрес) AND ([Фактический_адрес] = @Original_Фактический_адрес) AND ([Телефон_студии] = @Original_Телефон_студии) AND ([Электронная_почта] = @Original_Электронная_почта) AND ([Фамилия_директора] = @Original_Фамилия_директора) AND ([Имя_директора] = @Original_Имя_директора) AND ([Отчество_директора] = @Original_Отчество_директора))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_студии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Юридический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Юридический_адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фактический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фактический_адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_студии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Электронная_почта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Электронная_почта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_директора", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_директора", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_директора", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[СТУДИЯ] ([Название_студии], [Юридический_адрес], [Фактический_адрес], [Телефон_студии], [Электронная_почта], [Фамилия_директора], [Имя_директора], [Отчество_директора]) VALUES (@Название_студии, @Юридический_адрес, @Фактический_адрес, @Телефон_студии, @Электронная_почта, @Фамилия_директора, @Имя_директора, @Отчество_директора);
SELECT Код_студии, Название_студии, Юридический_адрес, Фактический_адрес, Телефон_студии, Электронная_почта, Фамилия_директора, Имя_директора, Отчество_директора FROM СТУДИЯ WHERE (Код_студии = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_студии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Юридический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Юридический_адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фактический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фактический_адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_студии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Электронная_почта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Электронная_почта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_директора", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_директора", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_директора", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[СТУДИЯ] SET [Название_студии] = @Название_студии, [Юридический_адрес] = @Юридический_адрес, [Фактический_адрес] = @Фактический_адрес, [Телефон_студии] = @Телефон_студии, [Электронная_почта] = @Электронная_почта, [Фамилия_директора] = @Фамилия_директора, [Имя_директора] = @Имя_директора, [Отчество_директора] = @Отчество_директора WHERE (([Код_студии] = @Original_Код_студии) AND ([Название_студии] = @Original_Название_студии) AND ([Юридический_адрес] = @Original_Юридический_адрес) AND ([Фактический_адрес] = @Original_Фактический_адрес) AND ([Телефон_студии] = @Original_Телефон_студии) AND ([Электронная_почта] = @Original_Электронная_почта) AND ([Фамилия_директора] = @Original_Фамилия_директора) AND ([Имя_директора] = @Original_Имя_директора) AND ([Отчество_директора] = @Original_Отчество_директора));
SELECT Код_студии, Название_студии, Юридический_адрес, Фактический_адрес, Телефон_студии, Электронная_почта, Фамилия_директора, Имя_директора, Отчество_директора FROM СТУДИЯ WHERE (Код_студии = @Код_студии)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_студии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Юридический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Юридический_адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фактический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фактический_адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_студии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Электронная_почта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Электронная_почта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_директора", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_директора", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_директора", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_студии", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_студии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Юридический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Юридический_адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фактический_адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фактический_адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_студии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_студии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Электронная_почта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Электронная_почта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_директора", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_директора", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_директора", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_директора", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_студии", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_студии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NEfotobudka_githubik.Properties.Settings.Default.ItogovayaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_студии, Название_студии, Юридический_адрес, Фактический_адрес, Телефон" +
                "_студии, Электронная_почта, Фамилия_директора, Имя_директора, Отчество_директора" +
                " FROM dbo.СТУДИЯ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItogovayaDataSet1.СТУДИЯDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItogovayaDataSet1.СТУДИЯDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ItogovayaDataSet1.СТУДИЯDataTable dataTable = new ItogovayaDataSet1.СТУДИЯDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1.СТУДИЯDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ItogovayaDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "СТУДИЯ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_студии, string Original_Название_студии, string Original_Юридический_адрес, string Original_Фактический_адрес, string Original_Телефон_студии, string Original_Электронная_почта, string Original_Фамилия_директора, string Original_Имя_директора, string Original_Отчество_директора) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_студии));
            if ((Original_Название_студии == null)) {
                throw new global::System.ArgumentNullException("Original_Название_студии");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Название_студии));
            }
            if ((Original_Юридический_адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Юридический_адрес");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Юридический_адрес));
            }
            if ((Original_Фактический_адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Фактический_адрес");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Фактический_адрес));
            }
            if ((Original_Телефон_студии == null)) {
                throw new global::System.ArgumentNullException("Original_Телефон_студии");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Телефон_студии));
            }
            if ((Original_Электронная_почта == null)) {
                throw new global::System.ArgumentNullException("Original_Электронная_почта");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Электронная_почта));
            }
            if ((Original_Фамилия_директора == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_директора");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Фамилия_директора));
            }
            if ((Original_Имя_директора == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_директора");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Имя_директора));
            }
            if ((Original_Отчество_директора == null)) {
                throw new global::System.ArgumentNullException("Original_Отчество_директора");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Отчество_директора));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Название_студии, string Юридический_адрес, string Фактический_адрес, string Телефон_студии, string Электронная_почта, string Фамилия_директора, string Имя_директора, string Отчество_директора) {
            if ((Название_студии == null)) {
                throw new global::System.ArgumentNullException("Название_студии");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Название_студии));
            }
            if ((Юридический_адрес == null)) {
                throw new global::System.ArgumentNullException("Юридический_адрес");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Юридический_адрес));
            }
            if ((Фактический_адрес == null)) {
                throw new global::System.ArgumentNullException("Фактический_адрес");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Фактический_адрес));
            }
            if ((Телефон_студии == null)) {
                throw new global::System.ArgumentNullException("Телефон_студии");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Телефон_студии));
            }
            if ((Электронная_почта == null)) {
                throw new global::System.ArgumentNullException("Электронная_почта");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Электронная_почта));
            }
            if ((Фамилия_директора == null)) {
                throw new global::System.ArgumentNullException("Фамилия_директора");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Фамилия_директора));
            }
            if ((Имя_директора == null)) {
                throw new global::System.ArgumentNullException("Имя_директора");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Имя_директора));
            }
            if ((Отчество_директора == null)) {
                throw new global::System.ArgumentNullException("Отчество_директора");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Отчество_директора));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Название_студии, 
                    string Юридический_адрес, 
                    string Фактический_адрес, 
                    string Телефон_студии, 
                    string Электронная_почта, 
                    string Фамилия_директора, 
                    string Имя_директора, 
                    string Отчество_директора, 
                    int Original_Код_студии, 
                    string Original_Название_студии, 
                    string Original_Юридический_адрес, 
                    string Original_Фактический_адрес, 
                    string Original_Телефон_студии, 
                    string Original_Электронная_почта, 
                    string Original_Фамилия_директора, 
                    string Original_Имя_директора, 
                    string Original_Отчество_директора, 
                    int Код_студии) {
            if ((Название_студии == null)) {
                throw new global::System.ArgumentNullException("Название_студии");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Название_студии));
            }
            if ((Юридический_адрес == null)) {
                throw new global::System.ArgumentNullException("Юридический_адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Юридический_адрес));
            }
            if ((Фактический_адрес == null)) {
                throw new global::System.ArgumentNullException("Фактический_адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Фактический_адрес));
            }
            if ((Телефон_студии == null)) {
                throw new global::System.ArgumentNullException("Телефон_студии");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Телефон_студии));
            }
            if ((Электронная_почта == null)) {
                throw new global::System.ArgumentNullException("Электронная_почта");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Электронная_почта));
            }
            if ((Фамилия_директора == null)) {
                throw new global::System.ArgumentNullException("Фамилия_директора");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Фамилия_директора));
            }
            if ((Имя_директора == null)) {
                throw new global::System.ArgumentNullException("Имя_директора");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Имя_директора));
            }
            if ((Отчество_директора == null)) {
                throw new global::System.ArgumentNullException("Отчество_директора");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Отчество_директора));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Код_студии));
            if ((Original_Название_студии == null)) {
                throw new global::System.ArgumentNullException("Original_Название_студии");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Название_студии));
            }
            if ((Original_Юридический_адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Юридический_адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Юридический_адрес));
            }
            if ((Original_Фактический_адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Фактический_адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Фактический_адрес));
            }
            if ((Original_Телефон_студии == null)) {
                throw new global::System.ArgumentNullException("Original_Телефон_студии");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Телефон_студии));
            }
            if ((Original_Электронная_почта == null)) {
                throw new global::System.ArgumentNullException("Original_Электронная_почта");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Электронная_почта));
            }
            if ((Original_Фамилия_директора == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_директора");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Фамилия_директора));
            }
            if ((Original_Имя_директора == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_директора");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Имя_директора));
            }
            if ((Original_Отчество_директора == null)) {
                throw new global::System.ArgumentNullException("Original_Отчество_директора");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Отчество_директора));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Код_студии));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Название_студии, 
                    string Юридический_адрес, 
                    string Фактический_адрес, 
                    string Телефон_студии, 
                    string Электронная_почта, 
                    string Фамилия_директора, 
                    string Имя_директора, 
                    string Отчество_директора, 
                    int Original_Код_студии, 
                    string Original_Название_студии, 
                    string Original_Юридический_адрес, 
                    string Original_Фактический_адрес, 
                    string Original_Телефон_студии, 
                    string Original_Электронная_почта, 
                    string Original_Фамилия_директора, 
                    string Original_Имя_директора, 
                    string Original_Отчество_директора) {
            return this.Update(Название_студии, Юридический_адрес, Фактический_адрес, Телефон_студии, Электронная_почта, Фамилия_директора, Имя_директора, Отчество_директора, Original_Код_студии, Original_Название_студии, Original_Юридический_адрес, Original_Фактический_адрес, Original_Телефон_студии, Original_Электронная_почта, Original_Фамилия_директора, Original_Имя_директора, Original_Отчество_директора, Original_Код_студии);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private АБОНЕМЕНТЫTableAdapter _аБОНЕМЕНТЫTableAdapter;
        
        private ГРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter _гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter;
        
        private ГРУППЫTableAdapter _гРУППЫTableAdapter;
        
        private ИНВЕНТАРЬTableAdapter _иНВЕНТАРЬTableAdapter;
        
        private ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter _иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter;
        
        private КЛИЕНТЫTableAdapter _кЛИЕНТЫTableAdapter;
        
        private ПОСТАВКАTableAdapter _пОСТАВКАTableAdapter;
        
        private ПОСТАВЩИКTableAdapter _пОСТАВЩИКTableAdapter;
        
        private ПРОГРАММЫTableAdapter _пРОГРАММЫTableAdapter;
        
        private РАСПИСАНИЕTableAdapter _рАСПИСАНИЕTableAdapter;
        
        private РАСПИСАНИЕ_ИНДИВИДTableAdapter _рАСПИСАНИЕ_ИНДИВИДTableAdapter;
        
        private СОСТАВ_ГРУППЫTableAdapter _сОСТАВ_ГРУППЫTableAdapter;
        
        private СОТРУДНИКИTableAdapter _сОТРУДНИКИTableAdapter;
        
        private СТУДИЯTableAdapter _сТУДИЯTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public АБОНЕМЕНТЫTableAdapter АБОНЕМЕНТЫTableAdapter {
            get {
                return this._аБОНЕМЕНТЫTableAdapter;
            }
            set {
                this._аБОНЕМЕНТЫTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ГРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter ГРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter {
            get {
                return this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter;
            }
            set {
                this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ГРУППЫTableAdapter ГРУППЫTableAdapter {
            get {
                return this._гРУППЫTableAdapter;
            }
            set {
                this._гРУППЫTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ИНВЕНТАРЬTableAdapter ИНВЕНТАРЬTableAdapter {
            get {
                return this._иНВЕНТАРЬTableAdapter;
            }
            set {
                this._иНВЕНТАРЬTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter {
            get {
                return this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter;
            }
            set {
                this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public КЛИЕНТЫTableAdapter КЛИЕНТЫTableAdapter {
            get {
                return this._кЛИЕНТЫTableAdapter;
            }
            set {
                this._кЛИЕНТЫTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПОСТАВКАTableAdapter ПОСТАВКАTableAdapter {
            get {
                return this._пОСТАВКАTableAdapter;
            }
            set {
                this._пОСТАВКАTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПОСТАВЩИКTableAdapter ПОСТАВЩИКTableAdapter {
            get {
                return this._пОСТАВЩИКTableAdapter;
            }
            set {
                this._пОСТАВЩИКTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПРОГРАММЫTableAdapter ПРОГРАММЫTableAdapter {
            get {
                return this._пРОГРАММЫTableAdapter;
            }
            set {
                this._пРОГРАММЫTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public РАСПИСАНИЕTableAdapter РАСПИСАНИЕTableAdapter {
            get {
                return this._рАСПИСАНИЕTableAdapter;
            }
            set {
                this._рАСПИСАНИЕTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public РАСПИСАНИЕ_ИНДИВИДTableAdapter РАСПИСАНИЕ_ИНДИВИДTableAdapter {
            get {
                return this._рАСПИСАНИЕ_ИНДИВИДTableAdapter;
            }
            set {
                this._рАСПИСАНИЕ_ИНДИВИДTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СОСТАВ_ГРУППЫTableAdapter СОСТАВ_ГРУППЫTableAdapter {
            get {
                return this._сОСТАВ_ГРУППЫTableAdapter;
            }
            set {
                this._сОСТАВ_ГРУППЫTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СОТРУДНИКИTableAdapter СОТРУДНИКИTableAdapter {
            get {
                return this._сОТРУДНИКИTableAdapter;
            }
            set {
                this._сОТРУДНИКИTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СТУДИЯTableAdapter СТУДИЯTableAdapter {
            get {
                return this._сТУДИЯTableAdapter;
            }
            set {
                this._сТУДИЯTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._аБОНЕМЕНТЫTableAdapter != null) 
                            && (this._аБОНЕМЕНТЫTableAdapter.Connection != null))) {
                    return this._аБОНЕМЕНТЫTableAdapter.Connection;
                }
                if (((this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter != null) 
                            && (this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Connection != null))) {
                    return this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Connection;
                }
                if (((this._гРУППЫTableAdapter != null) 
                            && (this._гРУППЫTableAdapter.Connection != null))) {
                    return this._гРУППЫTableAdapter.Connection;
                }
                if (((this._иНВЕНТАРЬTableAdapter != null) 
                            && (this._иНВЕНТАРЬTableAdapter.Connection != null))) {
                    return this._иНВЕНТАРЬTableAdapter.Connection;
                }
                if (((this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter != null) 
                            && (this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Connection != null))) {
                    return this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Connection;
                }
                if (((this._кЛИЕНТЫTableAdapter != null) 
                            && (this._кЛИЕНТЫTableAdapter.Connection != null))) {
                    return this._кЛИЕНТЫTableAdapter.Connection;
                }
                if (((this._пОСТАВКАTableAdapter != null) 
                            && (this._пОСТАВКАTableAdapter.Connection != null))) {
                    return this._пОСТАВКАTableAdapter.Connection;
                }
                if (((this._пОСТАВЩИКTableAdapter != null) 
                            && (this._пОСТАВЩИКTableAdapter.Connection != null))) {
                    return this._пОСТАВЩИКTableAdapter.Connection;
                }
                if (((this._пРОГРАММЫTableAdapter != null) 
                            && (this._пРОГРАММЫTableAdapter.Connection != null))) {
                    return this._пРОГРАММЫTableAdapter.Connection;
                }
                if (((this._рАСПИСАНИЕTableAdapter != null) 
                            && (this._рАСПИСАНИЕTableAdapter.Connection != null))) {
                    return this._рАСПИСАНИЕTableAdapter.Connection;
                }
                if (((this._рАСПИСАНИЕ_ИНДИВИДTableAdapter != null) 
                            && (this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Connection != null))) {
                    return this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Connection;
                }
                if (((this._сОСТАВ_ГРУППЫTableAdapter != null) 
                            && (this._сОСТАВ_ГРУППЫTableAdapter.Connection != null))) {
                    return this._сОСТАВ_ГРУППЫTableAdapter.Connection;
                }
                if (((this._сОТРУДНИКИTableAdapter != null) 
                            && (this._сОТРУДНИКИTableAdapter.Connection != null))) {
                    return this._сОТРУДНИКИTableAdapter.Connection;
                }
                if (((this._сТУДИЯTableAdapter != null) 
                            && (this._сТУДИЯTableAdapter.Connection != null))) {
                    return this._сТУДИЯTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._аБОНЕМЕНТЫTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._гРУППЫTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._иНВЕНТАРЬTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._кЛИЕНТЫTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._пОСТАВКАTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._пОСТАВЩИКTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._пРОГРАММЫTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._рАСПИСАНИЕTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._рАСПИСАНИЕ_ИНДИВИДTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сОСТАВ_ГРУППЫTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сОТРУДНИКИTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сТУДИЯTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(ItogovayaDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._сТУДИЯTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.СТУДИЯ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сТУДИЯTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._кЛИЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.КЛИЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._кЛИЕНТЫTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._пОСТАВЩИКTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ПОСТАВЩИК.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._пОСТАВЩИКTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._пРОГРАММЫTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ПРОГРАММЫ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._пРОГРАММЫTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сОТРУДНИКИTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.СОТРУДНИКИ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сОТРУДНИКИTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._аБОНЕМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.АБОНЕМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._аБОНЕМЕНТЫTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._гРУППЫTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ГРУППЫ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._гРУППЫTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._пОСТАВКАTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ПОСТАВКА.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._пОСТАВКАTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ГРУППОВЫЕ_АБОНЕМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._иНВЕНТАРЬTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ИНВЕНТАРЬ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._иНВЕНТАРЬTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._рАСПИСАНИЕTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.РАСПИСАНИЕ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._рАСПИСАНИЕTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._рАСПИСАНИЕ_ИНДИВИДTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.РАСПИСАНИЕ_ИНДИВИД.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сОСТАВ_ГРУППЫTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.СОСТАВ_ГРУППЫ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сОСТАВ_ГРУППЫTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(ItogovayaDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._сТУДИЯTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.СТУДИЯ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сТУДИЯTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._кЛИЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.КЛИЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._кЛИЕНТЫTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._пОСТАВЩИКTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ПОСТАВЩИК.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._пОСТАВЩИКTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._пРОГРАММЫTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ПРОГРАММЫ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._пРОГРАММЫTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сОТРУДНИКИTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.СОТРУДНИКИ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сОТРУДНИКИTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._аБОНЕМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.АБОНЕМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._аБОНЕМЕНТЫTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._гРУППЫTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ГРУППЫ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._гРУППЫTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._пОСТАВКАTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ПОСТАВКА.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._пОСТАВКАTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ГРУППОВЫЕ_АБОНЕМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._иНВЕНТАРЬTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ИНВЕНТАРЬ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._иНВЕНТАРЬTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._рАСПИСАНИЕTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.РАСПИСАНИЕ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._рАСПИСАНИЕTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._рАСПИСАНИЕ_ИНДИВИДTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.РАСПИСАНИЕ_ИНДИВИД.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сОСТАВ_ГРУППЫTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.СОСТАВ_ГРУППЫ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сОСТАВ_ГРУППЫTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(ItogovayaDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._сОСТАВ_ГРУППЫTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.СОСТАВ_ГРУППЫ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сОСТАВ_ГРУППЫTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._рАСПИСАНИЕ_ИНДИВИДTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.РАСПИСАНИЕ_ИНДИВИД.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._рАСПИСАНИЕTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.РАСПИСАНИЕ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._рАСПИСАНИЕTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ИНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._иНВЕНТАРЬTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ИНВЕНТАРЬ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._иНВЕНТАРЬTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ГРУППОВЫЕ_АБОНЕМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._пОСТАВКАTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ПОСТАВКА.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._пОСТАВКАTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._гРУППЫTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ГРУППЫ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._гРУППЫTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._аБОНЕМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.АБОНЕМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._аБОНЕМЕНТЫTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._сОТРУДНИКИTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.СОТРУДНИКИ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сОТРУДНИКИTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._пРОГРАММЫTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ПРОГРАММЫ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._пРОГРАММЫTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._пОСТАВЩИКTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ПОСТАВЩИК.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._пОСТАВЩИКTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._кЛИЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.КЛИЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._кЛИЕНТЫTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._сТУДИЯTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.СТУДИЯ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сТУДИЯTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(ItogovayaDataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._аБОНЕМЕНТЫTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._аБОНЕМЕНТЫTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._гРУППЫTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._гРУППЫTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._иНВЕНТАРЬTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._иНВЕНТАРЬTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._кЛИЕНТЫTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._кЛИЕНТЫTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._пОСТАВКАTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._пОСТАВКАTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._пОСТАВЩИКTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._пОСТАВЩИКTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._пРОГРАММЫTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._пРОГРАММЫTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._рАСПИСАНИЕTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._рАСПИСАНИЕTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._рАСПИСАНИЕ_ИНДИВИДTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._сОСТАВ_ГРУППЫTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сОСТАВ_ГРУППЫTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._сОТРУДНИКИTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сОТРУДНИКИTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._сТУДИЯTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сТУДИЯTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._аБОНЕМЕНТЫTableAdapter != null)) {
                    revertConnections.Add(this._аБОНЕМЕНТЫTableAdapter, this._аБОНЕМЕНТЫTableAdapter.Connection);
                    this._аБОНЕМЕНТЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._аБОНЕМЕНТЫTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._аБОНЕМЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._аБОНЕМЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._аБОНЕМЕНТЫTableAdapter.Adapter);
                    }
                }
                if ((this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                    revertConnections.Add(this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter, this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Connection);
                    this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Adapter);
                    }
                }
                if ((this._гРУППЫTableAdapter != null)) {
                    revertConnections.Add(this._гРУППЫTableAdapter, this._гРУППЫTableAdapter.Connection);
                    this._гРУППЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._гРУППЫTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._гРУППЫTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._гРУППЫTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._гРУППЫTableAdapter.Adapter);
                    }
                }
                if ((this._иНВЕНТАРЬTableAdapter != null)) {
                    revertConnections.Add(this._иНВЕНТАРЬTableAdapter, this._иНВЕНТАРЬTableAdapter.Connection);
                    this._иНВЕНТАРЬTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._иНВЕНТАРЬTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._иНВЕНТАРЬTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._иНВЕНТАРЬTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._иНВЕНТАРЬTableAdapter.Adapter);
                    }
                }
                if ((this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                    revertConnections.Add(this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter, this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Connection);
                    this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Adapter);
                    }
                }
                if ((this._кЛИЕНТЫTableAdapter != null)) {
                    revertConnections.Add(this._кЛИЕНТЫTableAdapter, this._кЛИЕНТЫTableAdapter.Connection);
                    this._кЛИЕНТЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._кЛИЕНТЫTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._кЛИЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._кЛИЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._кЛИЕНТЫTableAdapter.Adapter);
                    }
                }
                if ((this._пОСТАВКАTableAdapter != null)) {
                    revertConnections.Add(this._пОСТАВКАTableAdapter, this._пОСТАВКАTableAdapter.Connection);
                    this._пОСТАВКАTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._пОСТАВКАTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._пОСТАВКАTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._пОСТАВКАTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._пОСТАВКАTableAdapter.Adapter);
                    }
                }
                if ((this._пОСТАВЩИКTableAdapter != null)) {
                    revertConnections.Add(this._пОСТАВЩИКTableAdapter, this._пОСТАВЩИКTableAdapter.Connection);
                    this._пОСТАВЩИКTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._пОСТАВЩИКTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._пОСТАВЩИКTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._пОСТАВЩИКTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._пОСТАВЩИКTableAdapter.Adapter);
                    }
                }
                if ((this._пРОГРАММЫTableAdapter != null)) {
                    revertConnections.Add(this._пРОГРАММЫTableAdapter, this._пРОГРАММЫTableAdapter.Connection);
                    this._пРОГРАММЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._пРОГРАММЫTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._пРОГРАММЫTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._пРОГРАММЫTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._пРОГРАММЫTableAdapter.Adapter);
                    }
                }
                if ((this._рАСПИСАНИЕTableAdapter != null)) {
                    revertConnections.Add(this._рАСПИСАНИЕTableAdapter, this._рАСПИСАНИЕTableAdapter.Connection);
                    this._рАСПИСАНИЕTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._рАСПИСАНИЕTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._рАСПИСАНИЕTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._рАСПИСАНИЕTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._рАСПИСАНИЕTableAdapter.Adapter);
                    }
                }
                if ((this._рАСПИСАНИЕ_ИНДИВИДTableAdapter != null)) {
                    revertConnections.Add(this._рАСПИСАНИЕ_ИНДИВИДTableAdapter, this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Connection);
                    this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Adapter);
                    }
                }
                if ((this._сОСТАВ_ГРУППЫTableAdapter != null)) {
                    revertConnections.Add(this._сОСТАВ_ГРУППЫTableAdapter, this._сОСТАВ_ГРУППЫTableAdapter.Connection);
                    this._сОСТАВ_ГРУППЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сОСТАВ_ГРУППЫTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сОСТАВ_ГРУППЫTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сОСТАВ_ГРУППЫTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сОСТАВ_ГРУППЫTableAdapter.Adapter);
                    }
                }
                if ((this._сОТРУДНИКИTableAdapter != null)) {
                    revertConnections.Add(this._сОТРУДНИКИTableAdapter, this._сОТРУДНИКИTableAdapter.Connection);
                    this._сОТРУДНИКИTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сОТРУДНИКИTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сОТРУДНИКИTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сОТРУДНИКИTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сОТРУДНИКИTableAdapter.Adapter);
                    }
                }
                if ((this._сТУДИЯTableAdapter != null)) {
                    revertConnections.Add(this._сТУДИЯTableAdapter, this._сТУДИЯTableAdapter.Connection);
                    this._сТУДИЯTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сТУДИЯTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сТУДИЯTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сТУДИЯTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сТУДИЯTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._аБОНЕМЕНТЫTableAdapter != null)) {
                    this._аБОНЕМЕНТЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._аБОНЕМЕНТЫTableAdapter]));
                    this._аБОНЕМЕНТЫTableAdapter.Transaction = null;
                }
                if ((this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                    this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter]));
                    this._гРУППОВЫЕ_АБОНЕМЕНТЫTableAdapter.Transaction = null;
                }
                if ((this._гРУППЫTableAdapter != null)) {
                    this._гРУППЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._гРУППЫTableAdapter]));
                    this._гРУППЫTableAdapter.Transaction = null;
                }
                if ((this._иНВЕНТАРЬTableAdapter != null)) {
                    this._иНВЕНТАРЬTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._иНВЕНТАРЬTableAdapter]));
                    this._иНВЕНТАРЬTableAdapter.Transaction = null;
                }
                if ((this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter != null)) {
                    this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter]));
                    this._иНДИВИДУАЛЬНЫЕ_АБОНЕМЕНТЫTableAdapter.Transaction = null;
                }
                if ((this._кЛИЕНТЫTableAdapter != null)) {
                    this._кЛИЕНТЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._кЛИЕНТЫTableAdapter]));
                    this._кЛИЕНТЫTableAdapter.Transaction = null;
                }
                if ((this._пОСТАВКАTableAdapter != null)) {
                    this._пОСТАВКАTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._пОСТАВКАTableAdapter]));
                    this._пОСТАВКАTableAdapter.Transaction = null;
                }
                if ((this._пОСТАВЩИКTableAdapter != null)) {
                    this._пОСТАВЩИКTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._пОСТАВЩИКTableAdapter]));
                    this._пОСТАВЩИКTableAdapter.Transaction = null;
                }
                if ((this._пРОГРАММЫTableAdapter != null)) {
                    this._пРОГРАММЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._пРОГРАММЫTableAdapter]));
                    this._пРОГРАММЫTableAdapter.Transaction = null;
                }
                if ((this._рАСПИСАНИЕTableAdapter != null)) {
                    this._рАСПИСАНИЕTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._рАСПИСАНИЕTableAdapter]));
                    this._рАСПИСАНИЕTableAdapter.Transaction = null;
                }
                if ((this._рАСПИСАНИЕ_ИНДИВИДTableAdapter != null)) {
                    this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._рАСПИСАНИЕ_ИНДИВИДTableAdapter]));
                    this._рАСПИСАНИЕ_ИНДИВИДTableAdapter.Transaction = null;
                }
                if ((this._сОСТАВ_ГРУППЫTableAdapter != null)) {
                    this._сОСТАВ_ГРУППЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сОСТАВ_ГРУППЫTableAdapter]));
                    this._сОСТАВ_ГРУППЫTableAdapter.Transaction = null;
                }
                if ((this._сОТРУДНИКИTableAdapter != null)) {
                    this._сОТРУДНИКИTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сОТРУДНИКИTableAdapter]));
                    this._сОТРУДНИКИTableAdapter.Transaction = null;
                }
                if ((this._сТУДИЯTableAdapter != null)) {
                    this._сТУДИЯTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сТУДИЯTableAdapter]));
                    this._сТУДИЯTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591